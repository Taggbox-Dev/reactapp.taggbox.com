{"version":3,"file":"static/js/9279.b977672a.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AssetsModal/Elements/AssetsModalAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport moment from 'moment'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { GET_POST_TYPE_NAME, GET_NETWORK_ICON, GET_MEDIA_NAME, MEDIA_REPLACE_URL } from '../../../../../Services/Utils/utils';\nimport { postAddTag } from '../../../../../Services/Actions/tagsActions'\nimport { postPostUpdateAction } from '../../../../../Services/Actions/assetsActions'\n//import ModalTagProducts from './ModalTagProducts';\n\n\n\nclass AssetsModalAside extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tagString:['#macdonald', 'Restaurant', 'Burger', '#macdonaldUSA', 'California', '#starbucks', 'Restaurant'],\n            descriptionEditable: false,\n            addTagButton: true,\n            //tagInputValue : ''\n            tagString: [],\n            newTag: \"\",\n            listTags: [],\n            selectedOption: null,\n            content: \"\",\n            changesStatus: false\n        };\n\n        this.editorEnable = React.createRef();\n        this.editorEnableButton = React.createRef();\n    }\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString, changesStatus: true })\n\n    }\n\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n            console.log(\"componentWillMount\", this.props)\n        }\n\n    }\n\n    addTagButtonValue = () => {\n        this.setState({\n            addTagButton: false\n        })\n    }\n\n    // tagInputValueFun = (value) => {\n    //     console.log('value', value)\n    //     this.setState({\n    //         tagInputValue : value\n    //     })\n    // }\n\n    descriptionToggle() {\n        this.setState({\n            descriptionEditable: true\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\n        const { modalAssetData } = this.props\n        if (modalAssetData && Object.keys(modalAssetData).length > 0) {\n            if (modalAssetData.tags && String(modalAssetData.tags).length > 0) this.setState({ tagString: String(modalAssetData.tags).split(\",\"), content: modalAssetData.content })\n            else this.setState({ tagString: [], content: modalAssetData.content })\n        }\n    }\n\n    handleOutsideClick = (event) => {\n        if (this.editorEnable && this.editorEnable.current && !this.editorEnable.current.contains(event.target) && (this.editorEnableButton && !this.editorEnableButton.current.contains(event.target)) && this.editorEnableButton && !this.editorEnableButton.current.contains(event.target) !== null) {\n            this.setState({\n                descriptionEditable: false\n            })\n        } else {\n            if (this.editorEnable && this.editorEnable.current && (!this.editorEnable.current.contains(event.target) && this.editorEnable.current.contains(event.target) !== null)) {\n                this.setState({\n                    descriptionEditable: true\n                })\n            }\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalAssetData } = this.props\n\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            if (newTag && String(newTag).length >= 3) {\n                tagString.push(newTag)\n                this.setState({ tagString, newTag: \"\", selectedOption: null, changesStatus: true, addTagButton: true })\n            }\n            else {\n\n            }\n        }\n    }\n\n    addNewTag = event => this.setState({ newTag: event.target.value, changesStatus: true })\n\n    onClickToSave = event => {\n        const { tagString } = this.state;\n        const { modalAssetData } = this.props;\n        if (tagString && tagString.length > 0) {\n            this.props.postAddTag({\n                \"postId\": String(modalAssetData.id),\n                \"tags\": tagString.join(\",\")\n            })\n        }\n\n    }\n\n    setNewTags = (selectedOption) => {\n        console.log(`Option selected:`, selectedOption)\n        if (selectedOption && selectedOption.value) this.setState({ newTag: selectedOption.value, selectedOption })\n        else this.setState({ newTag: \"\", selectedOption: null })\n\n\n    };\n\n    onChangeContent = event => {\n        this.setState({ content: event.target.value, changesStatus: true })\n    }\n    onChangeTag = event => {\n        console.log(\"newTag, tagString\", event.target.value)\n        this.setState({ newTag: event.target.value })\n    }\n    onSaveChanges = event => {\n        const { modalAssetData } = this.props;\n        const { tagString, content } = this.state;\n        if (tagString && tagString.length > 0 && content) {\n            const data = {\n                \"action\": \"4\",\n                \"source\": modalAssetData.wallId,\n                \"destination\": modalAssetData.wallId,\n                \"postId\": modalAssetData.id,\n                \"postFile\": modalAssetData.postFile,\n                \"tags\": tagString.join(\",\"),\n                \"content\": content\n            }\n            this.props.postPostUpdateAction(data, () => {\n                this.setState({ descriptionEditable: false, addTagButton: true, changesStatus: false })\n                //this.props.editMediaCallback(false)\n            })\n        }\n    }\n\n    render() {\n        const { descriptionEditable, addTagButton, tagString, content, changesStatus, newTag } = this.state\n        const { modalAssetData, networkData, collections } = this.props\n\n        const socialNetwork = networkData && networkData.length > 0 ? networkData.filter((network) => network.id == modalAssetData.networkId) : []\n        const collectionName = collections && collections.length > 0 ? collections.filter((cItem) => cItem.id == modalAssetData.wallId) : []\n\n\n        return <div className=\"full_modal_sidebar position-relative\">\n            <PerfectScrollbar>\n                <div className=\"full_modal_sidebar_inner position-relative\">\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-1\">\n                        <span className=\"text-uppercase fw-medium\">General Info</span>\n                    </h3>\n                    <table className=\"table table-borderless\">\n                        <tbody>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">File Name</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.name}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">File Extension</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.ext}</span></td>\n                            </tr>\n\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Type</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{GET_POST_TYPE_NAME(modalAssetData.type)}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Collection</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{collectionName && collectionName.length > 0 ? collectionName[0].name : \"\"}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Dimensions</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.mediaWidth}X{modalAssetData.mediaHeight}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Size</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{modalAssetData.size}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Created</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{moment(modalAssetData.createdAt).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Modified</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark text-break\">{moment(modalAssetData.createdAt).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Source</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                    {socialNetwork && socialNetwork.length > 0 ?\n                                        <div className=\"d-flex align-items-center\">\n                                            <span className=\"h-20px w-20px me-2 d-flex\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(socialNetwork[0].id)}.svg`)} height={20} width={20} alt={socialNetwork[0].name} />\n                                            </span>\n                                            <span className=\"text-dark\">{socialNetwork[0].name}</span>\n                                        </div>\n                                        : null}\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Posted By</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                    <div className=\"d-flex align-items-center mr-2\">\n                                        <div className=\"symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden bg-light\">\n                                            <img className=\"object-center-cover\" src={MEDIA_REPLACE_URL(modalAssetData.picture)} height={40} width={40} alt={GET_MEDIA_NAME(modalAssetData.picture)} />\n                                            <link rel=\"preload\" fetchpriority=\"high\" as=\"image\" href={modalAssetData.picture} type=\"image/webp\"></link>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-dark mb-0\"><strong className=\"text-break\">{modalAssetData.name}</strong></p>\n                                            <small className=\"mb-0 text-muted text-break\">@{modalAssetData.username}</small>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                            {\n                                modalAssetData.ugcRights ? <>\n                                    {modalAssetData.ugcRights.status == 2 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-success\">\n                                                    <svg className=\"w-20px h-20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"text-success\">Request Approved</span>\n                                            </div>\n                                        </td>\n                                    </tr> : modalAssetData.ugcRights.status == 1 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-warning\">\n                                                    <svg className=\"w-20px h-20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm1-10V7h-2v7h6v-2h-4z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"text-warning\">Request Pending</span>\n                                            </div>\n                                        </td>\n                                    </tr> : modalAssetData.ugcRights.status == 3 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-danger\">\n                                                    <svg className=\"w-20px h-20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-11.414L9.172 7.757 7.757 9.172 10.586 12l-2.829 2.828 1.415 1.415L12 13.414l2.828 2.829 1.415-1.415L13.414 12l2.829-2.828-1.415-1.415L12 10.586z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"text-danger\">Request Rejected</span>\n                                            </div>\n                                        </td>\n                                    </tr> : null}\n                                </> : null\n                            }\n                        </tbody>\n                    </table>\n\n                    {/* <ModalTagProducts /> */}\n\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-2\">\n                        <span className=\"text-uppercase fw-medium\">Tag</span>\n                    </h3>\n\n\n\n                    {tagString && tagString.length > 0 ? <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                        {\n                            tagString.map((tag, removeIndex) => {\n                                return <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                                    {tag}\n                                    <button className=\"btn p-0 ms-1\" onClick={this.onClickToRemoveTag(removeIndex)}>\n                                        <span className=\"svg-icon me-0\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" />\n                                            </svg>\n                                        </span>\n                                    </button>\n                                </div>\n\n                            })\n                        }\n\n                        {!addTagButton ?\n                            <div className=\"d-flex me-2 mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm border-0 fw-semibold fs-7\" placeholder=\"Enter Tag...\" value={newTag} onChange={this.onChangeTag} onKeyUp={this.onClickNewAddTag} />\n                            </div>\n                            :\n                            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill me-2 mb-2\" onClick={this.addTagButtonValue} >\n                                <span className=\"svg-icon\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                                Add Tag\n                            </button>\n                        }\n                    </div>\n                        :\n                        <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                            {!addTagButton ?\n                                <div className=\"d-flex me-2 mb-2\">\n                                    <input type=\"text\" className=\"form-control form-control-sm border-0 fw-semibold fs-7\" placeholder=\"Enter Tag...\" value={newTag} onChange={this.onChangeTag} onKeyUp={this.onClickNewAddTag} />\n                                </div>\n                                :\n                                <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill me-2 mb-2\" onClick={this.addTagButtonValue} >\n                                    <span className=\"svg-icon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                            <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\n                                        </svg>\n                                    </span>\n                                    Add Tag\n                                </button>\n                            }\n                        </div>\n                    }\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-2\">\n                        <span className=\"text-uppercase fw-medium\">Description</span>\n                    </h3>\n                    <div className=\"mb-3 d-flex align-items-center\">\n                        <div className=\"d-flex flex-grow-1 pe-2\" ref={this.editorEnable}>\n                            <textarea type=\"text\" className={`form-control textarea-min-row-3 ${!descriptionEditable ? ' resize-none border-0 p-0' : ''}`}\n                                placeholder=\"Add Description\" rows={3} value={content} readOnly={!descriptionEditable} onChange={this.onChangeContent}>\n\n                            </textarea>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-icon btn-sm btn-active-light w-30px h-30px\" ref={this.editorEnableButton}>\n                            <span className=\"svg-icon svg-icon-5 me-0\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                    <g data-name=\"Group 4328\" transform=\"translate(10956 -4501)\">\n                                        <rect id=\"Rectangle_2068\" data-name=\"Rectangle 2068\" width=\"24\" height=\"24\" transform=\"translate(-10956 4501)\" fill=\"none\" opacity=\"0\"></rect>\n                                        <g id=\"Group_3906\" data-name=\"Group 3906\" transform=\"translate(-10953.868 4503.559)\"><path id=\"Path_5042\" data-name=\"Path 5042\" d=\"M3.2,14.952,2.3,18.872a.985.985,0,0,0,.956,1.195,1.023,1.023,0,0,0,.206,0L7.4,19.158l7.571-7.543L10.746,7.4Z\" transform=\"translate(0 -2.914)\" fill=\"#545454\"></path><path id=\"Path_5043\" data-name=\"Path 5043\" d=\"M27.5,4.926l-2.82-2.82a.989.989,0,0,0-1.4,0L21.72,3.673l4.221,4.221,1.568-1.568a.989.989,0,0,0,0-1.4Z\" transform=\"translate(-10.152 0)\" fill=\"#545454\"></path>\n                                        </g>\n                                    </g>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"assets_btn_wrapper bg-white\">\n                    <button type=\"button\" className={`btn btn-primary w-100 ${changesStatus ? `` : `disabled`} `} onClick={this.onSaveChanges}>Save Changes</button>\n                </div>\n            </PerfectScrollbar>\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state.networks.networkData,\n        tagList: state.tags.tagList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        postAddTag: (data) => dispatch(postAddTag(data)),\n        postPostUpdateAction: (data, calback) => dispatch(postPostUpdateAction(data, calback)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetsModalAside);\n\n"],"names":["AssetsModalAside","props","onClickToRemoveTag","index","event","tagString","state","splice","setState","changesStatus","addTagButtonValue","addTagButton","handleOutsideClick","editorEnable","current","contains","target","editorEnableButton","descriptionEditable","onClickNewAddTag","newTag","modalAssetData","key","keyCode","String","length","push","selectedOption","addNewTag","value","onClickToSave","postAddTag","id","join","setNewTags","console","log","onChangeContent","content","onChangeTag","onSaveChanges","data","wallId","postFile","postPostUpdateAction","listTags","React","tagList","this","map","item","label","document","addEventListener","Object","keys","tags","split","networkData","collections","socialNetwork","filter","network","networkId","collectionName","cItem","className","name","ext","GET_POST_TYPE_NAME","type","mediaWidth","mediaHeight","size","moment","createdAt","format","src","baseUrl","GET_NETWORK_ICON","height","width","alt","MEDIA_REPLACE_URL","picture","GET_MEDIA_NAME","rel","fetchpriority","as","href","username","ugcRights","status","xmlns","viewBox","fill","d","tag","removeIndex","onClick","placeholder","onChange","onKeyUp","ref","rows","readOnly","transform","opacity","Component","connect","networks","dispatch","calback"],"sourceRoot":""}