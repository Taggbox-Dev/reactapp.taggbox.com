{"version":3,"file":"static/js/982.84fdbafc.chunk.js","mappings":"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","sources":["Layouts/Header/Components/Elements/Notifications.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/TabPanel.js","../node_modules/@restart/ui/esm/Tabs.js","../node_modules/react-bootstrap/esm/getTabTransitionComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Tab, Nav } from 'react-bootstrap';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getNotificationList, notificationUpdateStatus } from '../../../../Services/Actions/homeActions'\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { notifications: [] }\n    }\n    componentWillMount() {\n        this.onLoad()\n    }\n    onLoad = () => {\n        var self = this;\n        getNotificationList().then((response) => {\n            const { notifications } = response.data.responseData;\n            if (notifications && notifications.length > 0) {\n                var data = {}\n                notifications.map((item) => {\n                    if (data[moment(new Date(item.message.time * 1000)).fromNow()]) {\n\n                        if (!data[moment(new Date(item.message.time * 1000)).fromNow()].includes(item.id)) {\n                            data[moment(new Date(item.message.time * 1000)).fromNow()].push(item)\n                        }\n\n                    }\n                    else {\n                        data[moment(new Date(item.message.time * 1000)).fromNow()] = [item]\n                    }\n\n                })\n                if (notifications && notifications.length > 0 && notifications.filter((a) => a.status == 1).length > 0) {\n                    let notificationCount = document.getElementById(\"notificationCount\");\n                    notificationCount.style.display = 'block';\n                    notificationCount.innerText = notifications.filter((a) => a.status == 1).length;\n                }\n                self.setState({ notifications: data })\n            }\n        })\n    }\n\n    updateStatus = (postId, status) => event => {\n        var self = this;\n        notificationUpdateStatus(postId, status).then((response) => {\n            self.onLoad()\n        })\n    }\n\n    render() {\n        const { notifications } = this.state;\n\n        return <div className=\"w-100\">\n            <Tab.Container id=\"notifications_tab_panel\" defaultActiveKey=\"all-notifications\">\n                <div className=\"d-flex align-items-center justify-content-between px-3 pt-2 border-bottom\">\n                    <Nav variant=\"default\" className=\"nav\">\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"all-notifications\">All</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"px-0\" eventKey=\"unread-notifications\">Unread</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <div>\n                        <button type=\"button\" className=\"btn btn-link btn-sm px-0 h-auto fw-bold text-decoration-none btn-active-color-primary\">Mark all as read</button>\n                    </div>\n                </div>\n                <PerfectScrollbar>\n                    {notifications && Object.keys(notifications).length > 0 ? <Tab.Content>\n                        <Tab.Pane eventKey=\"all-notifications\" className=\"pb-3\">\n                            {\n                                notifications && Object.keys(notifications).map((iNot, index) => {\n                                    return <><div className=\"d-flex align-items-center justify-content-between px-3 py-1\">\n                                        <span className=\"text-gray-800 fw-bold\">{iNot}</span>\n                                        <span className=\"bg-primary badge rounded-5 min-w-30 text-light-alt\">{(notifications[iNot] && notifications[iNot].length > 0) ? notifications[iNot].length : 0}</span>\n                                    </div>\n                                        {notifications[iNot] && notifications[iNot].length > 0 ? <div className=\"\">\n\n                                            {\n                                                notifications[iNot].map((imNot) => {\n                                                    return <div key={imNot.id} className={`px-3 d-flex align-items-start border-bottom notification-item  ${imNot.status == 0 ? `bg-light` : ``}`}>\n                                                        <div className=\"symbol symbol-38 rounded-1 overflow-hidden me-2 bg-light p-2\">\n                                                            <img alt=\"Pic\" src={baseUrl(\"media/icons/social-icons/twitter.svg\")} height=\"40\" width=\"40\" />\n                                                        </div>\n                                                        <div className=\"d-flex align-items-start flex-column flex-grow-1\">\n                                                            <div className=\"d-flex algin-items-center justify-content-between w-100\">\n                                                                <Link to={'/home'} className=\"text-hover-primary text-gray-800 fw-bold text-decoration-none me-2\">{imNot.message.subject}</Link>\n                                                                <span className=\"text-gray-500 fs-9\">{moment(new Date(imNot.message.time * 1000)).format(\"hh:mma\")}</span>\n                                                            </div>\n                                                            <div className=\"d-flex algin-items-start\">\n                                                                <span className=\"text-gray-600 fs-9\">\n                                                                    {imNot.message.text}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                })\n                                            }\n\n                                        </div> : null}\n                                    </>\n\n                                })\n                            }\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"unread-notifications\" className=\"pb-3\">\n                            {\n                                notifications && Object.keys(notifications).map((iNot, index) => {\n                                    return notifications[iNot] && notifications[iNot].length > 0 && notifications[iNot].filter((a) => a.status == 0).length > 0 ? <><div key={index} className=\"d-flex align-items-center justify-content-between px-3 py-1\">\n                                        <span className=\"text-gray-800 fw-bold\">{iNot}</span>\n                                        <span className=\"bg-primary badge rounded-5 min-w-30 text-light-alt\">{notifications[iNot] && notifications[iNot].length > 0 && notifications[iNot].filter((a) => a.status == 0).length > 0 ? notifications[iNot].filter((a) => a.status == 0).length : 0}</span>\n                                    </div>\n                                        {notifications[iNot] && notifications[iNot].length > 0 ? <div className=\"\">\n\n                                            {\n                                                notifications[iNot].map((imNot) => {\n                                                    return imNot.status == 0 ? <div key={imNot.id} className=\"px-3 d-flex align-items-start border-bottom notification-item bg-light\" onClick={this.updateStatus(imNot.id, 1)}>\n                                                        <div className=\"symbol symbol-38 rounded-1 overflow-hidden me-2 bg-light p-2\">\n                                                            <img alt=\"Pic\" src={baseUrl(\"media/icons/social-icons/twitter.svg\")} height=\"40\" width=\"40\" />\n                                                        </div>\n                                                        <div className=\"d-flex align-items-start flex-column flex-grow-1\">\n                                                            <div className=\"d-flex algin-items-center justify-content-between w-100\">\n                                                                <Link to={'/home'} className=\"text-hover-primary text-gray-800 fw-bold text-decoration-none me-2\">{imNot.message.subject}</Link>\n                                                                <span className=\"text-gray-500 fs-9\">{moment(new Date(imNot.message.time * 1000)).format(\"hh:mma\")}</span>\n                                                            </div>\n                                                            <div className=\"d-flex algin-items-start\">\n                                                                <span className=\"text-gray-600 fs-9\">\n                                                                    {imNot.message.text}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div> : null\n\n                                                })\n                                            }\n\n                                        </div> : null}\n                                    </> : null\n\n\n                                })\n                            }\n                        </Tab.Pane>\n                    </Tab.Content> : null}\n                </PerfectScrollbar>\n            </Tab.Container>\n        </div>\n    }\n}\n\nexport default Notifications","import { useEffect, useRef } from 'react';\n\nfunction NoopTransition({\n  children,\n  in: inProp,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const hasEnteredRef = useRef(inProp);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;\n  }, [inProp]);\n  if (inProp) return children; // not in\n  //\n  // if (!mountOnEnter && !unmountOnExit) {\n  //   return children;\n  // }\n\n  if (unmountOnExit) {\n    return null;\n  }\n\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n\n  return children;\n}\n\nexport default NoopTransition;","const _excluded = [\"active\", \"eventKey\", \"mountOnEnter\", \"transition\", \"unmountOnExit\", \"role\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\"],\n      _excluded2 = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n      _excluded3 = [\"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTabPanel(_ref) {\n  let {\n    active,\n    eventKey,\n    mountOnEnter,\n    transition,\n    unmountOnExit,\n    role = 'tabpanel',\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const context = useContext(TabContext);\n  if (!context) return [Object.assign({}, props, {\n    role\n  }), {\n    eventKey,\n    isActive: active,\n    mountOnEnter,\n    transition,\n    unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n\n  const {\n    activeKey,\n    getControlledId,\n    getControllerId\n  } = context,\n        rest = _objectWithoutPropertiesLoose(context, _excluded2);\n\n  const key = makeEventKey(eventKey);\n  return [Object.assign({}, props, {\n    role,\n    id: getControlledId(eventKey),\n    'aria-labelledby': getControllerId(eventKey)\n  }), {\n    eventKey,\n    isActive: active == null && key != null ? makeEventKey(activeKey) === key : active,\n    transition: transition || rest.transition,\n    mountOnEnter: mountOnEnter != null ? mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: unmountOnExit != null ? unmountOnExit : rest.unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n}\nconst TabPanel = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref2, ref) => {\n  let {\n    as: Component = 'div'\n  } = _ref2,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n\n  const [tabPanelProps, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = NoopTransition\n  }] = useTabPanel(props); // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, Object.assign({}, tabPanelProps, {\n          ref: ref,\n          hidden: !isActive,\n          \"aria-hidden\": !isActive\n        }))\n      })\n    })\n  });\n});\nTabPanel.displayName = 'TabPanel';\nexport default TabPanel;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { useSSRSafeId } from './ssr';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport TabPanel from './TabPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Tabs = props => {\n  const {\n    id: userId,\n    generateChildId: generateCustomChildId,\n    onSelect: propsOnSelect,\n    activeKey: propsActiveKey,\n    defaultActiveKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = props;\n  const [activeKey, onSelect] = useUncontrolledProp(propsActiveKey, defaultActiveKey, propsOnSelect);\n  const id = useSSRSafeId(userId);\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\n\nTabs.Panel = TabPanel;\nexport default Tabs;","import NoopTransition from '@restart/ui/NoopTransition';\nimport Fade from './Fade';\nexport default function getTabTransitionComponent(transition) {\n  if (typeof transition === 'boolean') {\n    return transition ? Fade : NoopTransition;\n  }\n  return transition;\n}","import * as React from 'react';\nimport Tabs from '@restart/ui/Tabs';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabContainer = ({\n  transition,\n  ...props\n}) => /*#__PURE__*/_jsx(Tabs, {\n  ...props,\n  transition: getTabTransitionComponent(transition)\n});\nTabContainer.displayName = 'TabContainer';\nexport default TabContainer;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('tab-content');","import classNames from 'classnames';\nimport * as React from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport TabContext from '@restart/ui/TabContext';\nimport { useTabPanel } from '@restart/ui/TabPanel';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabPane = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  transition,\n  ...props\n}, ref) => {\n  const [{\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...rest\n  }, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = Fade\n  }] = useTabPanel({\n    ...props,\n    transition: getTabTransitionComponent(transition)\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, {\n          ...rest,\n          ref: ref,\n          className: classNames(className, prefix, isActive && 'active')\n        })\n      })\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string,\n  /**\n   * Object containing attributes to pass to underlying nav link.\n   */\n  tabAttrs: PropTypes.object\n};\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n  // Needed otherwise docs error out.\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});"],"names":["Notifications","props","onLoad","self","getNotificationList","then","response","notifications","data","responseData","length","map","item","moment","Date","message","time","fromNow","includes","id","push","filter","a","status","notificationCount","document","getElementById","style","display","innerText","setState","updateStatus","postId","event","notificationUpdateStatus","state","this","className","defaultActiveKey","variant","eventKey","type","Object","keys","iNot","index","imNot","alt","src","baseUrl","height","width","to","subject","format","text","onClick","Component","children","inProp","in","mountOnEnter","unmountOnExit","hasEnteredRef","useRef","useEffect","current","_excluded","_excluded2","_excluded3","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","indexOf","useTabPanel","_ref","active","transition","role","onEnter","onEntering","onEntered","onExit","onExiting","onExited","context","useContext","TabContext","assign","isActive","activeKey","getControlledId","getControllerId","rest","makeEventKey","TabPanel","React","_ref2","ref","as","tabPanelProps","Transition","NoopTransition","_jsx","value","SelectableContext","hidden","displayName","Tabs","userId","generateCustomChildId","generateChildId","propsOnSelect","onSelect","propsActiveKey","useUncontrolledProp","useSSRSafeId","useMemo","tabContext","Panel","getTabTransitionComponent","Fade","TabContainer","createWithBsPrefix","TabPane","bsPrefix","prefix","useBootstrapPrefix","classNames","propTypes","PropTypes","title","disabled","tabClassName","tabAttrs","Tab","Error","Container","Content","TabContent","Pane"],"sourceRoot":""}