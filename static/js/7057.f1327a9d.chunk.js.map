{"version":3,"file":"static/js/7057.f1327a9d.chunk.js","mappings":"gNAEMA,EAAcC,EAAAA,MAAW,kBAAM,+BAAN,IACzBC,EAAmBD,EAAAA,MAAW,kBAAM,+BAAN,IAC9BE,EAAWF,EAAAA,MAAW,kBAAM,+BAAN,IACtBG,EAAmBH,EAAAA,MAAW,kBAAM,+BAAN,IAC9BI,EAAiBJ,EAAAA,MAAW,kBAAM,kEAAN,IAC5BK,EAAeL,EAAAA,MAAW,kBAAM,+BAAN,IAE1BM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAEF,aAAe,IAAD,yBACV,gBAIJC,WAAa,SAACC,GACV,EAAKC,SAAS,CACVC,cAAeF,GAEtB,EATa,EAUdG,UAAY,WACR,EAAKC,MAAMC,mBACd,EAVG,EAAKC,MAAQ,CAAEJ,cAAe,gBAFpB,CAGb,CAiEA,OAjEA,8BAUD,WAAU,IAAD,OACGA,EAAkBK,KAAKD,MAAvBJ,cACR,EAA0CK,KAAKH,MAAvCI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBACtB,OAAO,gBAAKC,UAAU,yBAAf,UACH,gBAAKA,UAAU,qCAAf,UACI,iBAAKA,UAAU,qEAAf,WACI,gBAAKA,UAAU,4DAAf,UACI,gBAAKA,UAAU,qBAAf,UACI,gBAAKA,UAAU,iBAAf,UACI,SAAC,EAAAC,SAAD,CAAUC,UAAU,wBAApB,UACI,SAAClB,EAAD,CAAUmB,mBAAoBN,KAAKR,sBAKnD,gBAAKW,UAAU,4CAAf,UACI,iBAAKA,UAAU,GAAf,WACI,eAAIA,UAAU,YAAd,oEACA,iBAAKA,UAAU,OAAOI,MAAO,CAAEC,SAAU,KAAzC,WACI,SAAC,EAAAJ,SAAD,CAAUC,UAAU,wBAApB,UACI,SAACjB,GAAD,UAAsBY,KAAKH,UAG3BK,GAAkB,iBAAMC,UAAU,cAAhB,uCAAiE,QAGxE,iBAAlBR,GACG,SAAC,EAAAS,SAAD,CAAUC,UAAU,wBAApB,UACI,SAAChB,GAAD,UAAoBW,KAAKH,UAET,kBAAlBF,GACE,SAAC,EAAAS,SAAD,CAAUC,UAAU,wBAApB,UACI,SAACf,EAAD,MAEgB,cAAlBK,GACE,SAAC,EAAAS,SAAD,CAAUC,UAAU,wBAApB,UACI,SAACnB,EAAD,MAEF,MAGd,iBAAKiB,UAAU,8DAAf,WACI,SAAC,EAAAC,SAAD,CAAUC,UAAU,wBAApB,UACI,SAACrB,EAAD,CAAayB,QAAS,YAAaC,WAAY,IAAKC,SAAU,SAElE,iBAAKR,UAAU,+DAAf,WACI,mBAAQS,KAAK,SAAST,UAAU,yBAAhC,qBACA,oBAAQS,KAAK,SAAST,UAAS,0BAAqBF,GAAgBA,EAAaY,OAAS,EAAtC,eAA6DC,QAAS,kBAAM,EAAKlB,WAAX,EAA1H,0BAAgKK,GAAgBA,EAAaY,OAAS,EAAtC,WAA8CZ,EAAaY,OAA3D,4BAQ/L,OAtECtB,CAAqBwB,EAAAA,WAyE3B,W","sources":["Layouts/Main/MyAssets/AddAssetsModal/Compontnets/UploadAssets.js"],"sourcesContent":["\nimport React, { Component, Suspense } from 'react';\nconst NeedSupport = React.lazy(() => import('../../../CommonComponents/NeedSupport'));\nconst AddFeedByNetwork = React.lazy(() => import('./Elements/AddFeedByNetwork'));\nconst Networks = React.lazy(() => import('./Elements/Networks'));\nconst ChooseCollection = React.lazy(() => import('./Elements/ChooseCollection'));\nconst AssetsUploader = React.lazy(() => import('./Elements/AssetsUploader'));\nconst OnsiteUpload = React.lazy(() => import('./Elements/OnsiteUpload'));\n\nclass UploadAssets extends Component {\n\n    constructor() {\n        super();\n        this.state = { uploadTypeSec: 'uploadAssets' };\n    }\n\n    uploadType = (uploadTypeVal) => {\n        this.setState({\n            uploadTypeSec: uploadTypeVal\n        })\n    }\n    getAssets = () => {\n        this.props.getAssetsCallback()\n    };\n    render() {\n        const { uploadTypeSec } = this.state;\n        const { uploadedData, collectionError } = this.props\n        return <div className=\"container container-xs\">\n            <div className=\"block-center flex-column view-sm-h\">\n                <div className=\"addSource d-flex align-items-stretch flex-column flex-lg-row w-100\">\n                    <div className=\"addSourceNetwork d-flex flex-column flex-shrink-0 pe-lg-4\">\n                        <div className=\"card mb-xxl-4 mb-3\">\n                            <div className=\"card-body px-2\">\n                                <Suspense fallback={<></>}>\n                                    <Networks uploadTypeCallback={this.uploadType} />\n                                </Suspense>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column flex-grow-1 w-100 mb-3\">\n                        <div className=\"\">\n                            <h6 className=\"fs-7 mb-3\">Select the collection where you want to put your data</h6>\n                            <div className=\"mb-3\" style={{ maxWidth: 300 }}>\n                                <Suspense fallback={<></>}>\n                                    <ChooseCollection {...this.props} />\n                                </Suspense>\n                                {\n                                    collectionError ? <span className=\"text-danger\">Please select collection.</span> : null\n                                }\n                            </div>\n                            {uploadTypeSec === 'uploadAssets' ?\n                                <Suspense fallback={<></>}>\n                                    <AssetsUploader {...this.props} />\n                                </Suspense>\n                                : uploadTypeSec === 'onsite-upload' ?\n                                    <Suspense fallback={<></>}>\n                                        <OnsiteUpload />\n                                    </Suspense>\n                                    : uploadTypeSec === 'byNetwork' ?\n                                        <Suspense fallback={<></>}>\n                                            <AddFeedByNetwork />\n                                        </Suspense>\n                                        : null\n                            }\n\n                            <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\n                                <Suspense fallback={<></>}>\n                                    <NeedSupport content={'Need Help'} supportUrl={'#'} videoUrl={'#'} />\n                                </Suspense>\n                                <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\n                                    <button type=\"button\" className=\"btn btn-secondary me-3\">Cancel</button>\n                                    <button type=\"button\" className={`btn btn-primary ${uploadedData && uploadedData.length > 0 ? `` : `disabled`}`} onClick={() => this.getAssets()}>Fetch Assets {uploadedData && uploadedData.length > 0 ? `(${uploadedData.length})` : ``}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default UploadAssets;"],"names":["NeedSupport","React","AddFeedByNetwork","Networks","ChooseCollection","AssetsUploader","OnsiteUpload","UploadAssets","uploadType","uploadTypeVal","setState","uploadTypeSec","getAssets","props","getAssetsCallback","state","this","uploadedData","collectionError","className","Suspense","fallback","uploadTypeCallback","style","maxWidth","content","supportUrl","videoUrl","type","length","onClick","Component"],"sourceRoot":""}