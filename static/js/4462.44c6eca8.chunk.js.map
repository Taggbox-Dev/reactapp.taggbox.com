{"version":3,"file":"static/js/4462.44c6eca8.chunk.js","mappings":"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","sources":["Layouts/Header/Components/HeaderManu.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../Assets/AssetsHelper';\nimport SVG from 'react-inlinesvg';\nimport { MEDIA_REPLACE_URL } from '../../../Services/Utils/utils'\nimport { logOutUser, backToAdmin } from '../../../Services/Actions/loginActions'\nimport { uploadModalClick } from '../../../Services/Actions/homeActions'\nimport ProfileImage from '../../Main/CommonComponents/ProfileImage/ProfileImage';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\nimport { switchCollaborator } from '../../../Services/Actions/collaboratorActions';\nimport { toast } from \"react-toastify\";\nimport { USER_TOKEN, USER_AUTHENTICATED } from '../../../Services/Constants/constants';\nimport { HOST_DOMAIN } from '../../../Services/Api';\nimport { setLocalStorage, getLocalStorage } from '../../../Services/Utils/storage';\nimport { headerOptions, systemLight } from '../../../Services/Utils/config';\n\nconst AddAssetsModal = React.lazy(() => import('../../Main/MyAssets/AddAssetsModal/AddAssetsModal'));\nconst Notifications = React.lazy(() => import('./Elements/Notifications'));\nconst lightOption = systemLight()\nclass HeaderManu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isActiveAside: false, appThemeSkin: props.cookies ? props.cookies : 'light', editMediaShowModal: false, logOutSpinner: false, activeWorkspace: null, userDetails: null, isNotification: false, headOptions:[] };\n        if (props.cookies) {\n            const htmlTag = document.getElementsByTagName(\"html\")[0];\n            htmlTag.setAttribute(\"data-theme\", props.cookies);\n        }\n    }\n    setMode = (ele) => event => {\n        const htmlTag = document.getElementsByTagName(\"html\")[0];\n        htmlTag.setAttribute(\"data-theme\", ele);\n        this.props.uploadModalClick(this.state.editMediaShowModal)\n        this.setState({ appThemeSkin: ele }, () => this.props.setAppThemeSkin(ele));\n\n    };\n    componentDidMount() {\n        this.setActiveWorkspace(this.props.userData)\n        const data = headerOptions(backToAdmin, this.props.history, this.props.userData)\n        this.setState({headOptions: data})\n    }\n\n    onNotificationToggle = () => this.setState({ isNotification: !this.state.isNotification })\n    setActiveWorkspace = (userData) => {\n        const active = userData && userData.hasOwnProperty('collaborator') && userData.collaborator != '' ? userData.collaborator.workplaces.filter(work => work.id == userData.collaborator.workspacesId) : null\n        this.setState({ activeWorkspace: active })\n    }\n\n    editMediaHandleModalShow = () => {\n        const { userData } = this.props\n        if (userData.collaborator != '' && userData.collaborator.permissions != \"\") {\n            userData.collaborator.permissions.networkManager.manageConnection ? this.setState({ editMediaShowModal: true }) :\n                Swal.fire({\n                    title: 'Oops!',\n                    text: \"It seems you're not currently authorized to use this module. Please reach out to your Administrator to request access.\",\n                    icon: 'error',\n                })\n\n        }\n        else this.setState({ editMediaShowModal: true })\n    }\n\n    editMediaHandleCallback = (editMediaEvent) => {\n        this.setState({ editMediaShowModal: editMediaEvent })\n        this.props.uploadModalClick(false)\n    }\n    onClickSignOut = event => {\n        this.setState({ logOutSpinner: true })\n        this.props.logOutUser()\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.uploadStatus != this.state.editMediaShowModal) {\n            const { uploadStatus } = nextProps\n            if (uploadStatus) this.setState({ editMediaShowModal: true })\n            else {\n                this.setState({ editMediaShowModal: false })\n                if ($(\"#resetUppyUpload\") && $(\".uppy-Container\").length > 0) {\n                    $(\"#resetUppyUpload\").click()\n                }\n            }\n        }\n        if (JSON.stringify(nextProps.userData) != JSON.stringify(this.props.userData)) {\n            this.setActiveWorkspace(nextProps.userData)\n            const data = headerOptions(backToAdmin, this.props.history, nextProps.userData)\n            this.setState({headOptions: data})\n        }\n    }\n\n    collaboratorSwitcher = (id) => {\n        var toastID = toast.loading(\"Loading...\")\n        const { setUserToken, setAuthentication } = this.props\n        switchCollaborator(id).then((response) => {\n            var { responseData } = response.data\n            setUserToken(responseData.token)\n            setAuthentication(responseData)\n            setLocalStorage('access_token', responseData.token)\n            if (responseData.user.access != 1) setLocalStorage('verify_email', true)\n            setLocalStorage('user_data', JSON.stringify(responseData))\n            toast.update(toastID, { render: \"Account switched successfully\", type: \"success\", isLoading: false, autoClose: 3000 })\n            window.location.href = `${HOST_DOMAIN}/home`\n        }).catch(ex => {\n            toast.update(toastID, { render: \"Some error occured, please try again later.\", type: \"error\", isLoading: false, autoClose: 3000 })\n        })\n    }\n    onEmailCopy = (id) => event => COPY_TO_CLIPBOARD(id)\n    render() {\n        const { appThemeSkin, editMediaShowModal, logOutSpinner, activeWorkspace, isNotification, headOptions } = this.state;\n        const { userData, notificationList } = this.props\n        return (\n            <div className=\"header-menu d-flex align-items-center justify-content-end w-xs-100 h-100\">\n                <div className=\"d-flex align-items-center h-100 flex-shrink-0\">\n                    <Dropdown id=\"head_skin_\" align=\"end\" className=\"block-center position-relative head_skin_\">\n                        <Dropdown.Toggle variant=\"link\" className=\"btn btn-icon btn-active-light btn-active-color-primary p-0 text-decoration-none transition-none arrow_disabled\">\n                            {appThemeSkin === 'system' ? <span className=\"svg-icon me-0 text-dark\">\n                                    <SVG src={baseUrl('media/icons/svg-icons/computer-setting.svg')} height={16} width={16} />\n                                </span> : <i className={`ri-${appThemeSkin === 'light' ? \"sun-fill\" : \"moon-clear-fill\"} icon-6`}></i>}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {lightOption.map((item,index) => {\n                                return <div className=\"menu-item\">\n                                    <Dropdown.Item className={`${appThemeSkin === item.type ? 'active ' : ''}px-3 py-2`} onClick={this.setMode(item.type)}>\n                                        {item.type == 'system' ? \n                                            <span className=\"svg-icon svg-icon-5 h-16px w-16px\">\n                                                <SVG src={baseUrl(`media/icons/svg-icons/${item.icon}.svg`)} height={16} width={16}/>\n                                            </span> : \n                                        <i className={`ri-${item.icon} icon-6 me-2 text-dark`}></i>}\n                                        <span className=\"menu-title\">{item.name}</span>\n                                    </Dropdown.Item>\n                                </div>\n                            })}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <div className=\"head_upload_ block-center border-end\">\n                        <button type=\"button\" className={`btn btn-primary d-flex align-items-center ${getLocalStorage(\"expired\") ? `disabled` : ``}`} onClick={this.editMediaHandleModalShow}>\n                            <span className=\"svg-icon svg-icon-5 me-lg-2 me-0\">\n                                <SVG src={baseUrl('media/icons/svg-icons/cloud-upload.svg')} />\n                            </span>\n                            <span className=\"d-lg-flex d-none fw-medium fs-8\">Upload</span>\n                        </button>\n                    </div>\n                    <Dropdown className=\"block-center head_notifications_\" align=\"end\" show={isNotification} onToggle={() => this.onNotificationToggle()}>\n                        <Dropdown.Toggle variant=\"link\" id=\"head_notifications_\" className=\"btn btn-icon btn-active-light btn-active-color-primary text-decoration-none p-0 position-relative arrow_disabled\">\n                            <span className=\"d-flex align-items-center justify-content-center\">\n                                <span className=\"notifications_count bg-primary text-light-alt position-absolute rounded-circle\" id=\"notificationCount\" style={{ display: 'none' }} ></span>\n                                <i className=\"ri-notification-4-line icon-4\"></i>\n                            </span>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"p-0\">\n                            <Suspense fallback={<></>}>\n                                <Notifications notificationList={notificationList} onNotificationToggle={this.onNotificationToggle} />\n                            </Suspense>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"block-center user_profile_\" align=\"end\" autoClose={true}>\n                        <Dropdown.Toggle variant=\"link\" id=\"user_profile_\" className=\"btn author_profile p-0 border-0 text-decoration-none d-block rounded-circle overflow-hidden arrow_disabled\">\n                            {userData && Object.keys(userData).length > 0 ? <ProfileImage className={'symbol symbol-38 rounded-circle bg-light'}\n                                imageSize={38}\n                                symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                name={userData.user.name} profileUrl={MEDIA_REPLACE_URL(userData.user.picture)} networkId={0} /> : null}\n                        </Dropdown.Toggle>\n                        {userData && Object.keys(userData).length > 0 ? <Dropdown.Menu className=\"p-0\">\n                            <div className=\"d-flex align-items-start flex-column justify-content-between w-100 p-3 border-bottom\">\n                                <div className=\"d-flex align-items-start me-2\">\n                                    <Link to={\"/profile\"} className=\"text-decoration-none\">\n                                        <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden bg-light'}\n                                            imageSize={40}\n                                            symbolClass={'symbol-label text-light-alt fw-bolder text-uppercase fs-5'}\n                                            name={userData.user.name} profileUrl={MEDIA_REPLACE_URL(userData.user.picture)} networkId={0} />\n                                    </Link>\n                                    <div className=\"w-100\">\n                                        <p className=\"text-dark mb-0\">\n                                            <Link to={\"/profile\"} className=\"text-decoration-none\"><strong className=\"fs-6 fw-bold text-break text-gray-800\">{userData.user.name}</strong></Link>\n                                        </p>\n                                        <span className=\"mb-0 text-gray-600 text-break fs-8 cursor-pointer\" id=\"headerProfileEmail\" onClick={this.onEmailCopy(\"headerProfileEmail\")}>{userData.user.emailId}</span>\n\n                                        {userData && userData.hasOwnProperty('collaborator') && userData.collaborator != '' && userData.collaborator.workplaces.length > 0 ?\n                                            <div className='w-100 mt-4'>\n                                                {userData.collaborator.workplaces.length == 1 && userData.UserPlan.activatedAt == null ?\n                                                    <Badge className='py-2 px-3' bg=\"light-primary\">\n                                                        {activeWorkspace && activeWorkspace.length > 0 ? activeWorkspace[0].Workspace.name : ''}\n                                                    </Badge>\n                                                    :\n                                                    <Dropdown>\n                                                        <Dropdown.Toggle variant=\"secondary\" className=\"d-flex align-items-center border-0 w-100 justify-content-between fs-9 bg-light-primary\">\n                                                            {userData && userData.hasOwnProperty('collaborator') && userData.collaborator.activeAccount == 0 ? \"My WorkSpace\" : activeWorkspace && activeWorkspace.length > 0 ? activeWorkspace[0].Workspace.name : ''}\n                                                        </Dropdown.Toggle>\n                                                        <Dropdown.Menu className=\"w-100\" style={{ minWidth: 'auto', minHeight: 'auto' }}>\n                                                            {userData && userData.hasOwnProperty('collaborator') && userData.collaborator.workplaces.map((work, index) => {\n                                                                return <Dropdown.Item className='workspace_item text-ellipsis d-block' key={index} onClick={() => this.collaboratorSwitcher(work.id)}>{work.Workspace.name}</Dropdown.Item>\n                                                            })}\n                                                            {userData && userData.UserPlan.activatedAt != null ? <Dropdown.Item className='workspace_item' key={userData.collaborator.workplaces.length + 1} onClick={() => this.collaboratorSwitcher(0)}>My Workspace</Dropdown.Item> : null}\n\n                                                        </Dropdown.Menu>\n                                                    </Dropdown>\n                                                }\n                                            </div>\n                                            : null}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"px-5 mb-3\">\n                                {headOptions.map(item => {\n                                    return item.condition ? <Dropdown.Item className=\"navi-item px-0 py-2 py-xxl-3 border-bottom dropdown-item rounded-0\" onClick={item.fnc}>\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\n                                        <div className={`symbol-label text-dark`}>\n                                            <i className={`${item.icon} icon-6 me-0 ${item.name.includes(\"Admin\") ? \"text-warning\" : \"\"}`}></i>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <div className={`fs-7 fw-semibold mb-1 ${item.name.includes(\"Admin\") ? \"text-warning\" : \"\"}`}>{item.name}</div>\n                                        {item.desc ? <div className=\"text-gray-600 fs-8\">{item.desc}</div> : null}\n                                    </div>\n                                </Dropdown.Item> : null\n                                })}\n                                <button type=\"button\" onClick={this.onClickSignOut} className={`navi-item px-0 py-2 py-xxl-3 dropdown-item rounded-0 ${logOutSpinner ? 'disabled' : ''}`}>\n                                    <div className=\"symbol symbol-40 bg-light me-3\">\n                                        <div className={`symbol-label ${logOutSpinner ? 'text-gray-500' : 'text-dark'}`}>\n                                            <i className=\"ri-logout-circle-r-line icon-6 me-0\"></i>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <div className={`fs-7 fw-semibold mb-1 ${logOutSpinner ? 'spinner spinner-gray text-gray-500' : ''}`}>Sign Out</div>\n                                    </div>\n                                </button>\n                            </div>\n                        </Dropdown.Menu> : null}\n                    </Dropdown>\n                </div>\n                <Suspense fallback={<></>}>\n                    {editMediaShowModal ? <AddAssetsModal editMediaHandleCallback={this.editMediaHandleCallback} editMediaToggle={editMediaShowModal} {...this.props} /> : null}\n                </Suspense>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        userData: state.authenticated.userData,\n        uploadStatus: state.modalstatus.uploadStatus,\n        notificationList: state.notifications.notificationList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logOutUser: () => dispatch(logOutUser()),\n        uploadModalClick: (status) => dispatch(uploadModalClick(status)),\n        setUserToken: (token) => dispatch({ type: USER_TOKEN, payload: token }),\n        setAuthentication: (data) => dispatch({ type: USER_AUTHENTICATED, payload: data })\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderManu);"],"names":["AddAssetsModal","React","Notifications","lightOption","systemLight","HeaderManu","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","setMode","ele","event","document","getElementsByTagName","setAttribute","uploadModalClick","state","editMediaShowModal","setState","appThemeSkin","setAppThemeSkin","onNotificationToggle","isNotification","setActiveWorkspace","userData","active","hasOwnProperty","collaborator","workplaces","filter","work","id","workspacesId","activeWorkspace","editMediaHandleModalShow","permissions","networkManager","manageConnection","Swal","title","text","icon","editMediaHandleCallback","editMediaEvent","onClickSignOut","logOutSpinner","logOutUser","collaboratorSwitcher","toastID","toast","_this$props","setUserToken","setAuthentication","switchCollaborator","then","response","responseData","data","token","setLocalStorage","user","access","JSON","stringify","render","type","isLoading","autoClose","window","location","href","concat","HOST_DOMAIN","catch","ex","onEmailCopy","COPY_TO_CLIPBOARD","isActiveAside","cookies","userDetails","headOptions","_createClass","key","value","this","headerOptions","backToAdmin","history","nextProps","uploadStatus","$","length","click","_this2","_this$state","_this$props2","notificationList","_jsxs","className","children","Dropdown","align","_jsx","variant","SVG","src","baseUrl","height","width","map","item","index","onClick","name","getLocalStorage","show","onToggle","style","display","Suspense","fallback","_Fragment","Object","keys","ProfileImage","imageSize","symbolClass","profileUrl","MEDIA_REPLACE_URL","picture","networkId","Link","to","emailId","UserPlan","activatedAt","Badge","bg","Workspace","activeAccount","minWidth","minHeight","condition","fnc","includes","desc","_objectSpread","editMediaToggle","Component","connect","authenticated","modalstatus","notifications","dispatch","status","USER_TOKEN","payload","USER_AUTHENTICATED"],"sourceRoot":""}