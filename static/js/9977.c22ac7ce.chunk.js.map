{"version":3,"file":"static/js/9977.c22ac7ce.chunk.js","mappings":"iNAIMA,EAAiBC,EAAAA,MAAW,kBAAM,+BAAN,IAE5BC,EAAeD,EAAAA,MAAW,kBAAM,+BAAN,IAE1BE,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,aAAe,IAAD,yBACV,gBAIJC,YAAc,WACV,EAAKC,MAAMC,yBAAwB,EACtC,EAPa,EASdC,sBAAwB,SAACC,GACrB,EAAKC,SAAS,CACVD,cAAeA,GAEtB,EAba,EAcdE,WAAa,WACT,EAAKD,SAAS,CACVC,YAAa,EAAKC,MAAMD,YAE/B,EAhBG,EAAKC,MAAQ,CAAEH,cAAe,eAAgBE,YAAY,GAFhD,CAGb,CAwDA,OAxDA,8BAgBD,WAAU,IAAD,OACGE,EAAoBC,KAAKR,MAAzBO,gBACAF,EAAeG,KAAKF,MAApBD,WAER,OAAO,UAAC,IAAD,CAAOI,KAAM,OAAQC,KAAMH,EAAiBI,UAAU,0BAA0BC,UAAU,EAA1F,WACH,SAAC,WAAD,CAAcD,UAAU,qBAAxB,UACI,iBAAKA,UAAU,gFAAf,UACMN,GAKE,iBAAKM,UAAU,yDAAf,WACI,mBAAQE,KAAK,SAASF,UAAU,2BAA2BG,QAAS,kBAAM,EAAKT,YAAX,EAApE,UACI,iBAAMM,UAAU,qBAAhB,UACI,iBAAKI,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,WACI,iBAAMC,KAAK,OAAOC,EAAE,mBACpB,iBAAMA,EAAE,6EAA6ED,KAAK,yBAItG,eAAIR,UAAU,kCAAd,kDAbJ,gBAAKA,UAAU,yDAAf,UACI,eAAIA,UAAU,kCAAd,8BAeR,gBAAKA,UAAU,4BAAf,UACI,mBAAQE,KAAK,SAASF,UAAU,uBAAuBG,QAASN,KAAKT,sBAKjF,SAAC,SAAD,CAAYY,UAAU,wDAAtB,UACI,gBAAKA,UAAU,0BAAf,SACMN,GAGE,SAAC,EAAAgB,SAAD,CAAUC,UAAU,wCAApB,UAA2C,SAAC3B,EAAD,OAF3C,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UAA2C,SAACzB,EAAD,CAAc0B,kBAAmBf,KAAKH,qBAOpG,OA5DCP,CAAuB0B,EAAAA,WA+D7B,W","sources":["Layouts/Main/MyAssets/AddAssetsModal/AddAssetsModal.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Modal } from 'react-bootstrap';\n//import PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst UploadedAssets = React.lazy(() => import('./Compontnets/UploadedAssets'));\n\nconst UploadAssets = React.lazy(() => import('./Compontnets/UploadAssets'));\n\nclass AddAssetsModal extends Component {\n    constructor() {\n        super();\n        this.state = { showModalType: 'uploadAssets', isUploaded: false };\n    }\n\n    handleClose = () => {\n        this.props.editMediaHandleCallback(false)\n    };\n\n    showModalTypeCallback = (showModalType) => {\n        this.setState({\n            showModalType: showModalType\n        })\n    }\n    isUploaded = () => {\n        this.setState({\n            isUploaded: !this.state.isUploaded\n        })\n    }\n    render() {\n        const { editMediaToggle } = this.props\n        const { isUploaded } = this.state\n\n        return <Modal size={'full'} show={editMediaToggle} className=\"addAssetsModal border-0\" backdrop={false}>\n            <Modal.Header className=\"border-0 p-0 w-100\">\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 bg-white w-100\">\n                    {!isUploaded ?\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Choose Source</h1>\n                        </div>\n                        :\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <button type=\"button\" className=\"btn btn-icon btn-sm me-2\" onClick={() => this.isUploaded()}>\n                                <span className=\"svg-icon text-dark\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M7.828 11H20v2H7.828l5.364 5.364-1.414 1.414L4 12l7.778-7.778 1.414 1.414z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Fill required assets information</h1>\n                        </div>\n                    }\n                    <div className=\"d-flex align-items-center\">\n                        <button type=\"button\" className=\"btn-close text-light\" onClick={this.handleClose}></button>\n                    </div>\n                </div>\n\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex align-items-start border-0 flex-wrap w-100\">\n                <div className=\"assetsModalScroll w-100\">\n                    {!isUploaded ?\n                        <Suspense fallback={<div>Loading...</div>}><UploadAssets getAssetsCallback={this.isUploaded} /></Suspense>\n                        :\n                        <Suspense fallback={<div>Loading...</div>}><UploadedAssets /></Suspense>\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n    }\n}\n\nexport default AddAssetsModal;\n"],"names":["UploadedAssets","React","UploadAssets","AddAssetsModal","handleClose","props","editMediaHandleCallback","showModalTypeCallback","showModalType","setState","isUploaded","state","editMediaToggle","this","size","show","className","backdrop","type","onClick","xmlns","viewBox","width","height","fill","d","Suspense","fallback","getAssetsCallback","Component"],"sourceRoot":""}