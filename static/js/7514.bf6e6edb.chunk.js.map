{"version":3,"file":"static/js/7514.bf6e6edb.chunk.js","mappings":"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","sources":["Layouts/Main/DisplayScreen/Components/Filters/AndOr.js","Layouts/Main/DisplayScreen/Components/Filters/AssetsTypes.js","Layouts/Main/DisplayScreen/Components/Filters/Collections.js","Layouts/Main/DisplayScreen/Components/Filters/Network.js","Layouts/Main/DisplayScreen/Components/Filters/UgcRights.js","Layouts/Main/DisplayScreen/Components/Filters/Tags.js","Layouts/Main/DisplayScreen/Components/Filters/Connection.js","Layouts/Main/DisplayScreen/Components/Filters/index.js","Layouts/Main/DisplayScreen/Components/Template/index.js","Layouts/Main/DisplayScreen/Components/Platforms/index.js","Layouts/Main/DisplayScreen/EditWebEmbed.js","Layouts/Main/DisplayScreen/Components/EmbedList/index.js","Layouts/Main/DisplayScreen/Components/DisplayScreenAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { capitalizeFirstLetter } from '../../../../../Services/Utils/utils';\n\n\nclass AndOrCondition extends Component {\n    render() {\n\n        const { condition,conditionApply } = this.props\n        return <Dropdown align=\"start\" className=\"block-center position-relative\">\n            <Dropdown.Toggle variant=\"secondary\" className=\"arrow_disabled\">\n                {capitalizeFirstLetter(condition)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"btn-min-w\">\n                <div className=\"menu-item\">\n                    <Dropdown.Item className={condition == `and` ? `active` : ``} onClick={conditionApply(\"and\")}>And</Dropdown.Item>\n                </div>\n                <div className=\"menu-item\">\n                    <Dropdown.Item className={condition == `or` ? `active` : ``} onClick={conditionApply(\"or\")}>Or</Dropdown.Item>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    }\n}\n\nexport default AndOrCondition","\nimport React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport AndOrCondition from './AndOr'\nclass AssetsTypes extends Component {\n    render() {\n\n        const { onAssetsApply, onSelectAllAssetsApply, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'assetsType'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                                <div className=\"fs-8 text-gray-800 fw-semibold\">Assets Type</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllassets\">\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Select All</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllassets\" checked={Object.keys(state.assetsApply).length >= 3 ? true : false} onClick={onSelectAllAssetsApply} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"image_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\n                                            </svg>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Image Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"image_assets\" checked={Object.keys(state.assetsApply).includes(\"2,4\") ? true : false} onClick={onAssetsApply(\"2,4\")} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"video_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                <path d=\"M2 3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993zM4 5v14h16V5H4zm6.622 3.415l4.879 3.252a.4.4 0 0 1 0 .666l-4.88 3.252a.4.4 0 0 1-.621-.332V8.747a.4.4 0 0 1 .622-.332z\" fill=\"currentColor\" />\n                                            </svg>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Video Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"video_assets\" checked={Object.keys(state.assetsApply).includes(\"3,5\") ? true : false} onClick={onAssetsApply(\"3,5\")} />\n                        </div>\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"text_assets\">\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                <path d=\"M13 6v15h-2V6H5V4h14v2z\" fill=\"currentColor\" />\n                                            </svg>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Text Assets</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"text_assets\" checked={Object.keys(state.assetsApply).includes(\"1\") ? true : false} onClick={onAssetsApply(\"1\")} />\n                        </div>\n                    </Accordion.Body>\n                </Accordion.Item>\n                </Accordion>\n    }\n}\n\nexport default AssetsTypes","\nimport React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport AndOrCondition from './AndOr'\n\nclass Collections extends Component {\n    render() {\n\n\n        const { state, onCollectionSearchFilter, onCollectionSelectAll, onCollectionApply, conditionApply, filterApply, filterKey, indexFilter, isLast, onSelectActive } = this.props\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey) ? onSelectActive(filterKey) : null}>\n            <Accordion.Item eventKey={'collection'} className=\"pb-2\">\n                <div className=\"d-flex\">\n                    <Accordion.Header className=\"me-1\">\n                        <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                            <span className=\"svg-icon svg-icon-4 text-gray-800\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2zM8 19h12v-8H8v8zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2z\" fill=\"currentColor\" /></svg>\n                            </span>\n                            <div className=\"fs-8 text-gray-800 fw-semibold\">Collection</div>\n                        </div>\n                        <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\n                    </Accordion.Header>\n                    <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                </div>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {state.collectionList && Object.keys(state.collectionList).length > 0 ?\n                        <>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"searchCollection\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Search Collection</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onCollectionSelectAll} checked={Object.keys(state.selectedCollection).length >= state.collectionList.length ? true : false} />\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchCollection\" placeholder=\"Search your collection...\" onChange={onCollectionSearchFilter} />\n                            </div>\n                            <div className=\"\">\n                                {\n                                    state.collectionList.map((item) => <div className=\"dropdown-item px-0\">\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`coolection_${item.id}`}>\n                                            <span className=\"symbol symbol-22\">\n                                                <img className=\"object-center-cover\" src={item.thumbnails} height={20} width={20} alt=\"\" />\n                                            </span>\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                        </label>\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"\" id={`coolection_${item.id}`} checked={Object.keys(state.selectedCollection).includes(`${item.id}`) ? true : false} onClick={onCollectionApply(item.id)} />\n                                    </div>)\n                                }\n                            </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Collections Available</h6>\n                        </div>\n                    }\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    }\n}\n\nexport default Collections\n","\nimport React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\nimport AndOrCondition from './AndOr'\nclass Network extends Component {\n\n\n    render() {\n        const { state, onNetworkApply, onClickSelectAll, onSearchFilter, filterApply, filterKey, conditionApply, indexFilter,isLast,onSelectActive } = this.props\n\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                <Accordion.Item eventKey={'source'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                        <path id=\"Path_1\" data-name=\"Path 1\" d=\"M0,0H24V24H0Z\" fill=\"none\" />\n                                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M8.365,20.286A9.309,9.309,0,0,1,2.9,14.82a3.246,3.246,0,0,1,0-6.455A9.309,9.309,0,0,1,8.365,2.9a3.246,3.246,0,0,1,6.455,0,9.309,9.309,0,0,1,5.465,5.466,3.246,3.246,0,0,1,0,6.455,9.311,9.311,0,0,1-5.466,5.465,3.246,3.246,0,0,1-6.455,0Zm1.836-.347a1.391,1.391,0,0,0,2.782.048v-.1a1.391,1.391,0,0,0-2.782.048ZM6.328,16.818a7.393,7.393,0,0,0,2.388,1.614,3.247,3.247,0,0,1,5.751,0,7.444,7.444,0,0,0,3.965-3.963,3.247,3.247,0,0,1,0-5.752,7.447,7.447,0,0,0-3.964-3.964,3.247,3.247,0,0,1-5.752,0A7.444,7.444,0,0,0,4.752,8.716a3.247,3.247,0,0,1,0,5.752A7.427,7.427,0,0,0,6.328,16.818Zm12.22-5.226a1.391,1.391,0,1,0,1.39-1.391A1.392,1.392,0,0,0,18.548,11.592Zm-15.3,1.391a1.391,1.391,0,1,0-1.391-1.391A1.393,1.393,0,0,0,3.246,12.983ZM10.2,3.246a1.391,1.391,0,0,0,2.782.048V3.2a1.391,1.391,0,0,0-2.782.048Z\" transform=\"translate(0.408 0.408)\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                                <div className=\"fs-8 text-gray-800 fw-semibold\">Network</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Search Network</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" onClick={onClickSelectAll} checked={Object.keys(state.selectedNetwork).length >= state.networkData.length ? true : false} />\n                        </div>\n                        <div className=\"form-group mb-2\">\n                            <input type=\"text\" className=\"form-control form-control-sm\" id=\"searchNetwork\" placeholder=\"Search your network...\" onChange={onSearchFilter} />\n                        </div>\n                        <div className=\"\">\n                            {\n                                state.networkData.map((item) => {\n                                    return <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                        <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`filter_${GET_NETWORK_ICON(item.id)}`}>\n                                            <span className=\"symbol symbol-22\">\n                                                <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.id)}.svg`)} height={20} width={20} alt={item.name} />\n                                            </span>\n                                            <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                        </label>\n                                        <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" name=\"\" value=\"phone\" id={`filter_${GET_NETWORK_ICON(item.id)}`} checked={Object.keys(state.selectedNetwork).includes(`${item.id}`) ? true : false} onClick={onNetworkApply(item.id)} />\n                                    </div>\n                                })\n                            }\n\n                        </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Networks Available</h6>\n                        </div>\n                        }\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n    }\n}\n\nexport default Network;","import React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport AndOrCondition from './AndOr'\nclass UgcRights extends Component {\n    render() {\n        const { onSelectAllUgcRigths, onUgcRigths, state, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'ugcrights'} className=\"pb-2\">\n                        <div className=\"d-flex\">\n                            <Accordion.Header className=\"me-1\">\n                                <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                    <span className=\"svg-icon svg-icon-4 text-gray-800\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\n                                            <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                            <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                        </svg>\n                                    </span>\n                                    <div className=\"fs-8 text-gray-800 fw-semibold\">UGC Rights</div>\n                                </div>\n                                <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\n                            </Accordion.Header>\n                            <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                        </div>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className=\"navi-item d-flex align-items-center border-bottom pt-2 pb-3 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1\" htmlFor=\"selectAllugc\">\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Select All</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"selectAllugc\" checked={Object.keys(state.ugcRigths).length >= 3 ? true : false} onClick={onSelectAllUgcRigths} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_approved\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\n                                                    <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                    <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Approved</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_approved\" checked={Object.keys(state.ugcRigths).includes(\"2\") ? true : false} onClick={onUgcRigths(\"2\")} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_pending\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.235\" height=\"11.896\" viewBox=\"0 0 10.235 11.896\">\n                                                    <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                    <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.541,7.541,0,0,1-3.436-2.79A7.531,7.531,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.029,1.029,0,0,1,.4-.08,1.018,1.018,0,0,1,.4.082l4.065,1.688a1.039,1.039,0,0,1,.647.968v2.054a7.529,7.529,0,0,1-1.285,4.235,7.541,7.541,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.061,1.061,0,0,1-564.279-307.182ZM-563.9-318l-4.073,1.692a.047.047,0,0,0-.031.044v2.055a6.534,6.534,0,0,0,1.115,3.677,6.529,6.529,0,0,0,2.983,2.422.066.066,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.548,6.548,0,0,0,2.986-2.422,6.549,6.549,0,0,0,1.115-3.677v-2.055a.045.045,0,0,0-.029-.044l-4.07-1.69a.041.041,0,0,0-.02-.005Zm.867,6.986h0l-1.291-1.294a.6.6,0,0,1-.176-.41v-1.955a.593.593,0,0,1,.59-.591.593.593,0,0,1,.592.59v1.71l1.117,1.117a.583.583,0,0,1,.172.415.584.584,0,0,1-.172.416.584.584,0,0,1-.416.172A.583.583,0,0,1-563.029-311.012Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Pending</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_pending\" checked={Object.keys(state.ugcRigths).includes(\"1\") ? true : false} onClick={onUgcRigths(\"1\")} />\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"ugc_rejected\">\n                                    <div className=\"symbol symbol-30 bg-light me-2\">\n                                        <div className=\"symbol-label\">\n                                            <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.235\" height=\"11.896\" viewBox=\"0 0 10.235 11.896\">\n                                                    <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                    <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.541,7.541,0,0,1-3.436-2.79A7.531,7.531,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.029,1.029,0,0,1,.4-.08,1.018,1.018,0,0,1,.4.082l4.065,1.688a1.039,1.039,0,0,1,.647.968v2.054a7.529,7.529,0,0,1-1.285,4.235,7.541,7.541,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.061,1.061,0,0,1-564.279-307.182ZM-563.9-318l-4.073,1.692a.047.047,0,0,0-.031.044v2.055a6.534,6.534,0,0,0,1.115,3.677,6.529,6.529,0,0,0,2.983,2.422.066.066,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.548,6.548,0,0,0,2.986-2.422,6.549,6.549,0,0,0,1.115-3.677v-2.055a.045.045,0,0,0-.029-.044l-4.07-1.69a.041.041,0,0,0-.02-.005Zm-1.595,6.866a.432.432,0,0,1-.313-.314.432.432,0,0,1,.125-.42l1.186-1.186-1.186-1.186a.431.431,0,0,1-.125-.42.43.43,0,0,1,.313-.313.411.411,0,0,1,.105-.013.431.431,0,0,1,.315.137l1.186,1.187,1.187-1.187a.438.438,0,0,1,.42-.124.43.43,0,0,1,.313.313.431.431,0,0,1-.125.42l-1.186,1.186,1.186,1.185a.432.432,0,0,1,.125.42.432.432,0,0,1-.313.314.438.438,0,0,1-.42-.125l-1.186-1.186-1.187,1.187a.437.437,0,0,1-.319.137A.431.431,0,0,1-565.491-311.132Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"navi-text\">\n                                        <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Rejected</p>\n                                    </div>\n                                </label>\n                                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" id=\"ugc_rejected\" checked={Object.keys(state.ugcRigths).includes(\"3\") ? true : false} onClick={onUgcRigths(\"3\")} />\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n    }\n}\n\nexport default UgcRights\n","\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport CreatableSelect from 'react-select/creatable';\nimport AndOrCondition from './AndOr'\n\nclass Tags extends Component {\n    state = {\n        tagString: [],\n        newTag: \"\",\n        listTags: [],\n        selectedOption: null\n    };\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString })\n\n    }\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n\n    }\n    componentDidMount() {\n        const { modalAssetData } = this.props\n        if (modalAssetData && Object.keys(modalAssetData).length > 0) {\n            if (modalAssetData.tags && String(modalAssetData.tags).length > 0) this.setState({ tagString: String(modalAssetData.tags).split(\",\") })\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalAssetData } = this.props\n        if (newTag && String(newTag).length >= 3) {\n            tagString.push(newTag)\n            this.setState({ tagString, newTag: \"\", selectedOption: null })\n        }\n        else {\n\n        }\n    }\n    addNewTag = event => this.setState({ newTag: event.target.value })\n\n\n    setNewTags = (selectedOption) => {\n        if (selectedOption.value) {\n            this.setState({ newTag: \"\", selectedOption: null }, () => this.props.onTagApply(selectedOption.value))\n        }\n    };\n\n    render() {\n        const { tagString, newTag, listTags, selectedOption } = this.state\n        const { state, onTagRemove, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n\n        return  <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                    <Accordion.Item eventKey={'tags'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm.707 2.122L3.828 12l8.486 8.485 7.778-7.778-1.06-7.425-7.425-1.06zm2.12 6.364a2 2 0 1 1 2.83-2.829 2 2 0 0 1-2.83 2.829z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                                <div className=\"fs-8 text-gray-800 fw-semibold\">Tags</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                        <div className=\"form-group mb-2\">\n                            <CreatableSelect isClearable options={listTags} onChange={this.setNewTags} value={selectedOption} />\n                        </div>\n                        <div className=\"tags-group tags-group-sm d-flex align-items-center flex-wrap\">\n                            {\n                                state.tagApply ? state.tagApply.map((tagItem, tagKey) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-1 mb-1\">\n                                    {tagItem}\n                                    <button className=\"btn p-0 ms-1\" onClick={onTagRemove(tagKey)}>\n                                        <span className=\"svg-icon me-0\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" />\n                                            </svg>\n                                        </span>\n                                    </button>\n                                </div>) : null\n                            }\n                        </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Tags Available</h6>\n                        </div>\n                        }\n                    </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        tagList: state.tags.tagList\n    }\n}\n\nexport default connect(mapStateToProps)(Tags);\n","\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Accordion } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { GET_NETWORK_ICON } from '../../../../../Services/Utils/utils';\nimport AndOrCondition from './AndOr'\n\nclass Connection extends Component {\n\n\n    render() {\n        const { state, onconnectionApply, onConnectionSelectAll, onConnectionSearchFilter, conditionApply, filterApply, filterKey, indexFilter,isLast,onSelectActive } = this.props\n        console.log('state.feedData', state.feedData)\n        return <Accordion activeKey={state.activeKey} onSelect={onSelectActive(filterKey)?onSelectActive(filterKey):null}>\n                <Accordion.Item eventKey={'connection'} className=\"pb-2\">\n                    <div className=\"d-flex\">\n                        <Accordion.Header className=\"me-1\">\n                            <div className=\"d-flex flex-grow-1 align-items-center pe-4\">\n                                <span className=\"svg-icon svg-icon-4 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                        <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                        <g><path id=\"Path_2321\" data-name=\"Path 2321\" d=\"M21,14v5a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V5A2,2,0,0,1,5,3h5V5H5V19H19V14Z\" fill=\"#313a53\" />\n                                            <path id=\"Path_2322\" data-name=\"Path 2322\" d=\"M21,7H17V3H15V7H11V9h4v4h2V9h4\" fill=\"currentColor\" /></g>\n                                    </svg>\n                                </span>\n                                <div className=\"fs-8 text-gray-800 fw-semibold\">Connections</div>\n                            </div>\n                            <button type=\"button\" className=\"close_filter btn btn-icon position-absolute end-0\" onClick={filterApply(filterKey)}></button>\n                        </Accordion.Header>\n                        <AndOrCondition condition={state.condition} conditionApply={conditionApply} />\n                    </div>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        {state.feedData && Object.keys(state.feedData).length > 0 ?\n                        <>\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                            <label className=\"form-check flex-grow-1\" htmlFor=\"searchNetwork\">\n                                <div className=\"navi-text\">\n                                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Search Connection</p>\n                                </div>\n                            </label>\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"\" onClick={onConnectionSelectAll} checked={Object.keys(state.selectedConnection).length >= state.feedData.length ? true : false} />\n                        </div>\n                        <div className=\"\">\n                            {\n                                state.feedData.map((item) => <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                    <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`connection`}>\n                                        <span className=\"symbol symbol-22\">\n                                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(item.networkId)}.svg`)} height={20} width={20} alt={'twitter'} />\n                                        </span>\n                                        <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                    </label>\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"checkbox\" id={item.feedId} name={item.feedId} value={item.feedId} onClick={onconnectionApply(item.feedId)} checked={Object.keys(state.selectedConnection).includes(`${item.feedId}`) ? true : false} />\n                                </div>)\n                            }\n                            </div>\n                        </>\n                        :\n                        <div className=\"py-4\">\n                            <h6 className=\"text-center fs-8 mb-0\">No Connections Available</h6>\n                        </div>\n                        }\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            </Accordion>\n    }\n}\nexport default Connection;","import React, { Component } from 'react';\nimport AssetsTypes from './AssetsTypes';\nimport Collections from './Collections';\nimport Network from './Network';\nimport UgcRights from './UgcRights';\nimport Tags from './Tags';\nimport Connection from './Connection';\n\n\n\nclass Filters extends Component {\n    render() {\n\n        const { filterKey, isLast } = this.props\n\n        return <div className=\"publish_filters\">\n            {filterKey == \"collection\" ? <Collections {...this.props} />\n                : filterKey == \"source\" ? <Network {...this.props} />\n                    : filterKey == \"assetsType\" ? <AssetsTypes {...this.props} />\n                        : filterKey == \"tags\" ? <Tags {...this.props} />\n                            : filterKey == \"ugcrights\" ? <UgcRights {...this.props} />\n                                : filterKey == \"connection\" ? <Connection {...this.props} /> : null\n            }\n        </div>\n    }\n}\n\nexport default Filters","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport { getTemplateList, getTemplateListDispatch } from \"../../../../../Services/Actions/templateAction\";\n\nconst removeDuplicate = (data) => {\n    try {\n        var updateFilter = []\n        var updateKey = {}\n        data.map((item) => {\n            if (!updateKey[item.id]) {\n                updateFilter.push(item)\n                updateKey[item.id] = true\n            }\n\n        })\n        return updateFilter\n    }\n    catch (ex) {\n        return data\n    }\n}\n\nclass Templates extends Component {\n    state = {\n        templeteList: [],\n    }\n    componentWillMount() {\n        this.onLoad()\n    }\n    onLoad = () => {\n        var self = this\n        const { templeteList } = this.props\n        console.log(\"templeteList\", templeteList, this.props)\n        if (templeteList && templeteList.length > 0) {\n            self.setState({ templeteList: removeDuplicate(templeteList) })\n        }\n        else {\n            getTemplateList({ type: 1 }).then((Response) => {\n                const { responseData } = Response.data\n                self.setState({ templeteList: removeDuplicate(responseData.templates) })\n                self.props.getTemplateListDispatch(removeDuplicate(responseData.templates))\n            })\n        }\n    }\n    onFiltertemplateName = (id) => {\n        const { templeteList } = this.state;\n\n        if (templeteList && templeteList.length > 0) {\n            const updated = templeteList.filter((item) => item.id == id)\n            if (updated && updated.length > 0) {\n                return updated[0].name\n            }\n            else return \"\"\n        }\n        else return \"\"\n\n    }\n    render() {\n        const { templeteList } = this.state;\n        const { onSelectTemplate, state } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Template</label>\n            <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-8 fw-medium\">{state.selectedTemplate ? state.selectedTemplate.name ? state.selectedTemplate.name : this.onFiltertemplateName(state.selectedTemplate.id) : `Please select template.`}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    {templeteList && templeteList.length > 0 ?\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100 pb-2\" name=\"options\" defaultValue={0}>\n                            {templeteList.map((temp, index) => {\n                                return <><ToggleButton key={`template_id_${index}`} className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"tbg-radio-1\" value={index} onClick={onSelectTemplate(temp)}>\n                                    <div className=\"card-body p-2\">\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"symbol symbol-50 flex-shrink-0 me-2\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/images/themes/ModernCard.png`)} height={50} width={50} alt=\"ModernCard\" />\n                                            </div>\n                                            <div className=\"overflow-hidden text-start\">\n                                                <p className={`fs-7 fw-semibold mb-1 text-ellipsis text-gray-dark`}>{temp.name}</p>\n                                                <p className=\"fs-9 fw-semibold mb-0 text-gray-600 text-ellipsis\">{temp.Theme.name}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ToggleButton></>\n                            })}\n                        </ToggleButtonGroup>\n                        : null}\n                    <div className=\"text-center\">\n                        <Link to={'/template/add'} className=\"btn btn-sm p-0\">\n                            <span className=\"svg-icon\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                    <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\n                                </svg>\n                            </span>\n                            Create New Template\n                        </Link>\n                    </div>\n                </Accordion.Body>\n            </Accordion.Item>\n\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        templeteList: state.templates.templeteList\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTemplateListDispatch: (templates) => dispatch(getTemplateListDispatch(templates))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Templates);","import React, { Component } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\n\nclass Platforms extends Component {\n\n    render() {\n        const { onSelectedPlatform, state } = this.props\n        return <>\n            <label className=\"text-gray-800 mb-2\">Select Display Platform</label>\n            <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100 d-flex align-items-center\">\n                    <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">{`${state.selectedPlatform == 's-projector' ? `Projector / TV` : state.selectedPlatform == 's-signage' ? `Digital Signage` : state.selectedPlatform == 's-event' ? `Virtual / Hybrid Events` : `Select Display Platform`}`}</p>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"select-platform\" value={state.selectedPlatform} onChange={onSelectedPlatform}>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"s-projector\" value={'s-projector'}>\n                            <div className=\"card-body p-2 d-flex align-items-center\">\n                                <span className=\"svg-icon svg-icon-3 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path d=\"M2 4.00087C2 3.44811 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44463 22 4.00087V17.9991C22 18.5519 21.5447 19 21.0082 19H2.9918C2.44405 19 2 18.5554 2 17.9991V4.00087ZM4 5V17H20V5H4ZM5 20H19V22H5V20Z\" fill=\"currentColor\"></path>\n                                    </svg>\n                                </span>\n                                <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Projector / TV</p>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"s-signage\" value={'s-signage'} >\n                            <div className=\"card-body p-2 d-flex align-items-center\">\n                                <span className=\"svg-icon svg-icon-3 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                        <path d=\"M6 4V20H18V4H6ZM5 2H19C19.5523 2 20 2.44772 20 3V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V3C4 2.44772 4.44772 2 5 2ZM12 17C12.5523 17 13 17.4477 13 18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18C11 17.4477 11.4477 17 12 17Z\" fill=\"currentColor\"></path>\n                                    </svg>\n                                </span>\n                                <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Digital Signage</p>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"s-event\" value={'s-event'} >\n                            <div className=\"card-body p-2 d-flex align-items-center\">\n                                <span className=\"svg-icon svg-icon-3 text-gray-800\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                        <path d=\"M21 3C21.5523 3 22 3.44772 22 4V11H20V5H4V19H10V21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3H21ZM21 13C21.5523 13 22 13.4477 22 14V20C22 20.5523 21.5523 21 21 21H13C12.4477 21 12 20.5523 12 20V14C12 13.4477 12.4477 13 13 13H21ZM20 15H14V19H20V15Z\" fill=\"currentColor\"></path>\n                                    </svg>\n                                </span>\n                                <p className=\"fs-8 text-gray-800 fw-semibold mb-0\">Virtual / Hybrid Events</p>\n                            </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item>\n            {state.selectedPlatform == 's-projector' ? <Accordion.Item eventKey=\"10\" className=\"pb-3\">\n                <Accordion.Header className=\"w-100\">\n                    <span className=\"fs-7 fw-medium\">{'Cast'}</span>\n                </Accordion.Header>\n                <Accordion.Body className=\"border rounded-1 mt-1\">\n                    <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"display-platform\" defaultValue={'p-cast'} onChange={e => this.embedCodeCallback(e)}>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-cast\" value={'p-cast'}>\n                            <div className=\"card-body p-2\">\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/cast.svg')} alt=\"cast\" height={26} width={80} />\n                                </div>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-chromecast\" value={'p-chromecast'}>\n                            <div className=\"card-body p-2\">\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/chromecast.svg')} alt=\"chromecast\" height={44} width={100} />\n                                </div>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-firetvstick\" value={'p-firetvstick'}>\n                            <div className=\"card-body p-2\">\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/firetvstick.svg')} alt=\"firetvstick\" height={30} width={80} />\n                                </div>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-androidtv\" value={'p-androidtv'}>\n                            <div className=\"card-body p-2\">\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/androidtv.svg')} alt=\"androidtv\" height={45} width={85} />\n                                </div>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-Aptoide\" value={'p-Aptoide'}>\n                            <div className=\"card-body p-2\">\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/Aptoide-tv.svg')} alt=\"Aptoide\" height={32} width={110} />\n                                </div>\n                            </div>\n                        </ToggleButton>\n                        <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-wired\" value={'p-wired'}>\n                            <div className=\"card-body p-2\">\n                                <div className=\"block-center text-center h-46px w-100\">\n                                    <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/wired.svg')} alt=\"wired\" height={30} width={86} />\n                                </div>\n                            </div>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Accordion.Body>\n            </Accordion.Item> :\n                state.selectedPlatform == 's-signage' ? <Accordion.Item eventKey=\"11\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-7 fw-medium\">{'ScreenCloud'}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-screen-cloud'} onChange={e => this.embedCodeCallback(e)}>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-screen-cloud\" value={'p-screen-cloud'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/screen-cloud.svg')} alt=\"screen-cloud\" height={26} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-yodeck\" value={'p-yodeck'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/yodeck.svg')} alt=\"yodeck\" height={44} width={100} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-onsign\" value={'p-onsign'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/onsign-tv.svg')} alt=\"onsign\" height={30} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-rise-vision\" value={'p-rise-vision'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/rise-vision.svg')} alt=\"rise-vision\" height={40} width={75} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-optisign\" value={'p-optisign'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/optisign.svg')} alt=\"optisign\" height={32} width={110} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-raydiant\" value={'p-raydiant'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/raydiant.svg')} alt=\"raydiant\" height={30} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-enplug\" value={'p-enplug'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/enplug.svg')} alt=\"enplug\" height={30} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-novi-sign\" value={'p-novi-sign'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/novi-sign.svg')} alt=\"novi-sign\" height={26} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"dp-other\" value={'dp-other'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/other.svg')} alt=\"other\" height={26} width={70} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : state.selectedPlatform == 's-event' ? <Accordion.Item eventKey=\"12\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-7 fw-medium\">{'6connex'}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"digital-signage\" defaultValue={'p-6connex'} onChange={e => this.embedCodeCallback(e)}>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-6connex\" value={'p-6connex'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/6connex.svg')} alt=\"6connex\" height={26} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-zuddl\" value={'p-zuddl'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/zuddl.svg')} alt=\"zuddl\" height={44} width={100} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-gevme\" value={'p-gevme'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/gevme.svg')} alt=\"gevme\" height={30} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-vfairs\" value={'p-vfairs'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/vfairs.svg')} alt=\"vfairs\" height={40} width={75} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-workcast\" value={'p-workcast'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/workcast.svg')} alt=\"workcast\" height={32} width={110} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <label className=\"text-gray-800 mb-2\">Other Platforms:</label>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-pathable\" value={'p-pathable'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/pathable.svg')} alt=\"pathable\" height={30} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-hubilo\" value={'p-hubilo'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/hubilo.svg')} alt=\"hubilo\" height={26} width={80} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"ev-other\" value={'ev-other'}>\n                                <div className=\"card-body p-2\">\n                                    <div className=\"block-center text-center h-46px w-100\">\n                                        <img className=\"img-fluid\" src={baseUrl('media/images/display-platform/other.svg')} alt=\"other\" height={26} width={70} />\n                                    </div>\n                                </div>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Accordion.Body>\n                </Accordion.Item> : null}\n\n        </>\n    }\n}\n\nexport default Platforms;","import React, { Component, Suspense } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Tab } from 'react-bootstrap';\nimport { getCollectionList } from '../../../Services/Actions/homeActions'\nimport { updatePublishRequest, getPublishList, publishDeleteRequest } from '../../../Services/Actions/publishActions'\n\nimport { capitalizeFirstLetter } from '../../../Services/Utils/utils';\nimport { id } from 'date-fns/locale';\nconst HtmlEmbed = React.lazy(() => import('./Components/DisplayPlatforms/CastUrl'));\nconst WordPressEmbed = React.lazy(() => import('./Components/DisplayPlatforms/WiredUrl'));\nconst WixEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AptoideCode'));\nconst SquarespaceEmbed = React.lazy(() => import('./Components/DisplayPlatforms/AndroidTvCode'));\nconst ShopifyEmbed = React.lazy(() => import('./Components/DisplayPlatforms/FireStickCode'));\nconst OtherEmbed = React.lazy(() => import('./Components/DisplayPlatforms/ChromecastUrl'));\n\nconst DisplayScreenAside = React.lazy(() => import('./Components/DisplayScreenAside'));\n// const EditWebEmbedAside = React.lazy(() => import('./Components/EditWebEmbedAside'));\n\nconst dataWithComma = (updateData) => {\n    var dataCollection = {}\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection[item] = true\n        })\n    return dataCollection\n}\nconst tagDataWithComma = (updateData) => {\n    var dataCollection = []\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection.push(item)\n        })\n    return dataCollection\n}\nconst assetsData = (data) => {\n    var dataCollection = {}\n    if (data && String(data).length > 0) {\n        if (String(data).includes(\"2,4\")) {\n            dataCollection[\"2,4\"] = true\n        }\n        else if (String(data).includes(\"3,5\")) {\n            dataCollection[\"3,5\"] = true\n        }\n        if (String(data).includes(\"1\")) {\n            dataCollection[\"1\"] = true\n        }\n    }\n\n    return dataCollection\n}\n\nconst chooseActiveFilter = (assetsType, collection, connection, source, tags, ugcrights) => {\n    var dataCollection = {}\n    if (assetsType) {\n        dataCollection[\"assetsType\"] = true\n    }\n    if (collection) {\n        dataCollection[\"collection\"] = true\n    }\n    if (connection) {\n        dataCollection[\"connection\"] = true\n    }\n    if (source) {\n        dataCollection[\"source\"] = true\n    }\n    if (tags) {\n        dataCollection[\"tags\"] = true\n    }\n    if (ugcrights) {\n        dataCollection[\"ugcrights\"] = true\n    }\n    return dataCollection\n}\n\nclass WebEmbed extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"CommonComponents/Breadcrumbs Edit\", props)\n        const { item } = props\n        this.state = {\n            showGenratedCode: 'p-cast',\n            chooseFilter: chooseActiveFilter(item.assets_type, item.collection, item.source, item.network, item.tags, item.ugc_status),\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: assetsData(item.assets_type),\n            tagApply: tagDataWithComma(item.tags),\n            ugcRigths: {},\n            selectedPlatform: null,\n            selectedTemplate: { id: item.template },\n            condition: String(item.filterType).toLowerCase(),\n            networkData: [],\n            feedData: [],\n            selectedNetwork: dataWithComma(item.network),\n            selectedConnection: dataWithComma(item.source),\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            collectionList: [],\n            collectionCompleteList: [],\n            selectedCollection: dataWithComma(item.collection),\n            collectionSearch: \"\",\n            genrateCode: false,\n            publishList: [],\n            responseData: item,\n            activeFilter: null,\n            selectedWebEmbed: null,\n            publishCodeName: item.Publish && item.Publish.name ? item.Publish.name : \"Untitled-1\",\n            id: item.id\n        };\n    }\n\n    timeout = 0;\n    componentWillMount() {\n        this.onLoadCollectionList()\n    }\n    componentDidMount() {\n        const { networks, feedData } = this.props\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n\n    }\n    componentWillReceiveProps(nextProps) {\n        const { networks, feedData } = nextProps\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n    }\n\n\n    onClickToDelete = (data) => event => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You want to delete this\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                var self = this;\n                publishDeleteRequest(data).then((response) => {\n                    self.onLoadPublish()\n                    toast.success('Your widget has been deleted.')\n\n                })\n\n\n            }\n        })\n\n    }\n\n    onTagApply = (value) => {\n        const { tagApply } = this.state\n        tagApply.push(value)\n        this.setState({ tagApply })\n    }\n    onTagRemove = (index) => event => {\n        let { tagApply } = this.state;\n        tagApply.splice(index, 1)\n        this.setState({ tagApply })\n    }\n\n    conditionApply = (condition) => event => {\n        this.setState({ condition })\n    }\n    filterApply = (filterKey) => event => {\n        const { chooseFilter } = this.state;\n        if (chooseFilter[filterKey]) {\n            delete chooseFilter[filterKey]\n            this.setState({ chooseFilter: chooseFilter })\n        }\n        else {\n            chooseFilter[filterKey] = true;\n            this.setState({ chooseFilter })\n        }\n\n    }\n    onSelectActive = (activeKey) => event => {\n        this.setState({ activeKey: this.state.activeKey == activeKey ? \"\" : activeKey })\n    }\n    shareEmbedModal = event => this.setState({\n        showGenratedCode: true\n    })\n    genratedCodeCallback = event => {\n        this.setState({\n            showGenratedCode: event\n        })\n    }\n    renderSwitch = (platform) => {\n        const { responseData } = this.state\n\n        switch (platform) {\n            case 'p-html':\n                return <HtmlEmbed data={responseData} />;\n            case 'p-wordpress':\n                return <WordPressEmbed data={responseData} />;\n            case 'p-wix':\n                return <WixEmbed data={responseData} />;\n            case 'p-squarespace':\n                return <SquarespaceEmbed data={responseData} />;\n            case 'p-shopify':\n                return <ShopifyEmbed data={responseData} />;\n            case 'p-other':\n                return <OtherEmbed data={responseData} />;\n            default:\n                return <HtmlEmbed data={responseData} />;\n        }\n\n    }\n\n\n    onSelectTemplate = (template) => event => this.setState({ selectedTemplate: template })\n    onSelectedPlatform = event => {\n        console.log(\"onSelectedPlatform\", event)\n        this.setState({ selectedPlatform: event })\n    }\n\n    onUgcRigths = (value) => event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths[value]) {\n            delete ugcRigths[value]\n            this.setState({ ugcRigths: ugcRigths })\n        }\n        else {\n            ugcRigths[value] = true;\n            this.setState({ ugcRigths })\n        }\n    }\n    onSelectAllUgcRigths = event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths && Object.keys(ugcRigths).length >= 3) {\n            this.setState({ ugcRigths: {} })\n        }\n        else {\n            this.setState({\n                ugcRigths: {\n                    \"1\": true, \"2\": true, \"3\": true\n                }\n            })\n        }\n    }\n\n    onconnectionApply = (value) => event => {\n        const { selectedConnection } = this.state;\n        if (selectedConnection[value]) {\n            delete selectedConnection[value]\n            this.setState({ selectedConnection: selectedConnection })\n        }\n        else {\n            selectedConnection[value] = true;\n            this.setState({ selectedConnection })\n        }\n    }\n    onConnectionSelectAll = event => {\n        const { selectedConnection, feedData } = this.state;\n        if (selectedConnection && Object.keys(selectedConnection).length >= feedData.length) {\n            this.setState({ selectedConnection: {} })\n        }\n        else {\n            var dataNetwork = {}\n            feedData.map((item) => {\n                dataNetwork[item.feedId] = true\n            })\n            this.setState({\n                selectedConnection: dataNetwork\n            })\n        }\n    }\n    onConnectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        console.log(\"searchText\", searchText)\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textConnectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadConnectionFilterData())\n        }, 1000);\n    }\n    onLoadConnectionFilterData = () => {\n        const { feedData } = this.props\n        const { textConnectionSearch } = this.state;\n        console.log(\"textConnectionSearch\", textConnectionSearch)\n        const searchData = feedData.filter((item) => String(item.name).toLowerCase().includes(textConnectionSearch))\n        this.setState({ feedData: searchData })\n    }\n    onAssetsApply = (value) => event => {\n        const { assetsApply } = this.state;\n        if (assetsApply[value]) {\n            delete assetsApply[value]\n            this.setState({ assetsApply: assetsApply })\n        }\n        else {\n            assetsApply[value] = true;\n            this.setState({ assetsApply })\n        }\n    }\n\n    onSelectAllAssetsApply = event => {\n        const { assetsApply } = this.state;\n        if (assetsApply && Object.keys(assetsApply).length >= 3) {\n            this.setState({ assetsApply: {} })\n        }\n        else {\n            this.setState({\n                assetsApply: {\n                    \"1\": true, \"2,4\": true, \"3,5\": true\n                }\n            })\n        }\n    }\n\n    onNetworkApply = (value) => event => {\n        const { selectedNetwork } = this.state;\n        if (selectedNetwork[value]) {\n            delete selectedNetwork[value]\n            this.setState({ selectedNetwork: selectedNetwork })\n        }\n        else {\n            selectedNetwork[value] = true;\n            this.setState({ selectedNetwork })\n        }\n    }\n    onClickSelectAll = event => {\n        const { selectedNetwork, networkData } = this.state;\n        if (selectedNetwork && Object.keys(selectedNetwork).length >= networkData.length) {\n            this.setState({ selectedNetwork: {} })\n        }\n        else {\n            var dataNetwork = {}\n            networkData.map((item) => {\n                dataNetwork[item.id] = true\n            })\n            this.setState({\n                selectedNetwork: dataNetwork\n            })\n        }\n    }\n    onSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadFilterData())\n        }, 1000);\n    }\n    onLoadFilterData = () => {\n        const { networks } = this.props\n        const { textSearch } = this.state;\n        const searchData = networks.filter((item) => String(item.name).toLowerCase().includes(textSearch))\n        this.setState({ networkData: searchData })\n    }\n\n    onLoadCollectionList = () => {\n        var self = this;\n        const { collectionData } = this.props;\n        if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList.length > 0) {\n            self.setState({ collectionList: collectionData.collectionList, collectionCompleteList: collectionData.collectionList, assetsCount: collectionData.assetsCount })\n        }\n        else {\n            getCollectionList().then((response) => {\n                const { responseData } = response.data;\n                if (responseData && Object.keys(responseData).length > 0) {\n                    self.setState({ collectionList: responseData.collection, collectionCompleteList: responseData.collection })\n                }\n            }).catch((ex) => {\n\n            })\n        }\n\n    }\n\n    onCollectionApply = (value) => event => {\n        const { selectedCollection } = this.state;\n        if (selectedCollection[value]) {\n            delete selectedCollection[value]\n            this.setState({ selectedCollection: selectedCollection })\n        }\n        else {\n            selectedCollection[value] = true;\n            this.setState({ selectedCollection })\n        }\n    }\n    onCollectionSelectAll = event => {\n        const { selectedCollection, collectionList } = this.state;\n        if (selectedCollection && Object.keys(selectedCollection).length >= collectionList.length) {\n            this.setState({ selectedCollection: {} })\n        }\n        else {\n            var dataCollection = {}\n            collectionList.map((item) => {\n                dataCollection[item.id] = true\n            })\n            this.setState({\n                selectedCollection: dataCollection\n            })\n        }\n    }\n    onCollectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ collectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadCollectionFilterData())\n        }, 1000);\n    }\n    onLoadCollectionFilterData = () => {\n        const { collectionSearch, collectionCompleteList } = this.state;\n        const searchData = collectionCompleteList.filter((item) => String(item.name).toLowerCase().includes(collectionSearch))\n        this.setState({ collectionList: searchData })\n    }\n    onChangeName = event => {\n        this.setState({ publishCodeName: event.target.value })\n    }\n    onRequestPublish = event => {\n        const { id, selectedTemplate, selectedCollection, selectedConnection, selectedNetwork, condition, showGenratedCode, ugcRigths, assetsApply, publishCodeName } = this.state\n        var self = this;\n\n        var collection = []\n        var template = \"\"\n        var source = []\n        var tags = []\n        var network = []\n        var ugcRigthsU = []\n\n        if (ugcRigths && Object.keys(ugcRigths).length > 0) {\n            Object.keys(ugcRigths).map((item) => {\n                ugcRigthsU.push(item)\n            })\n        }\n        if (selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) {\n            template = selectedTemplate.id\n        }\n\n        if (selectedNetwork && Object.keys(selectedNetwork).length > 0) {\n            Object.keys(selectedNetwork).map((item) => {\n                network.push(item)\n            })\n        }\n        if (selectedCollection && Object.keys(selectedCollection).length > 0) {\n            Object.keys(selectedCollection).map((item) => {\n                collection.push(item)\n            })\n        }\n        if (selectedConnection && Object.keys(selectedConnection).length > 0) {\n            Object.keys(selectedConnection).map((item) => {\n                source.push(item)\n            })\n        }\n        if (assetsApply && Object.keys(assetsApply).length > 0) {\n            Object.keys(assetsApply).map((item) => {\n                tags.push(item)\n            })\n        }\n        if ((selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) && (collection.length > 0 || source.length > 0 || tags.length > 0 || ugcRigthsU.length > 0 || network.length > 0)) {\n            const data = {\n                id: id,\n                name: publishCodeName,\n                \"template\": template,\n                \"collection\": collection.join(\",\"),\n                \"source\": source.join(\",\"),\n                \"assets_type\": tags.join(\",\"),\n                \"tags\": \"\",\n                \"ugc_status\": ugcRigthsU.join(\",\"),\n                \"publish_type\": 1,\n                \"campaign_type\": \"\",\n                \"screen_type\": \"\",\n                \"platform\": \"\",\n                network: network.join(\",\"),\n                filterType: String(condition).toUpperCase()\n\n            }\n            updatePublishRequest(data).then((response) => {\n                const { status, response_code, response_message } = response.data\n                if (status == \"success\") {\n                    toast.success(\"Publish widget successfully updated.\")\n                    self.setState({ responseData: response.data }, () => self.props.onLoadPublish())\n                }\n                else toast.error(response_message)\n                console.log(\"response\", response)\n\n            }).catch((ex) => {\n\n            })\n        }\n    }\n    onResetFilter = event => {\n        this.setState({\n            showGenratedCode: 'p-cast',\n            chooseFilter: {},\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: {},\n            tagApply: [],\n            ugcRigths: {},\n            selectedTemplate: null,\n            selectedPlatform: null,\n            condition: \"or\",\n            selectedNetwork: {},\n            selectedConnection: {},\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            selectedCollection: {},\n            collectionSearch: \"\",\n            genrateCode: false,\n            responseData: null,\n            activeFilter: null,\n            publishCodeName: \"\"\n\n        })\n    }\n    onUpdateReponseData = (data) => {\n        this.setState({ responseData: data })\n    }\n\n    render() {\n        const { showGenratedCode, chooseFilter, genrateCode, responseData, activeFilter } = this.state\n\n        const { networks, history } = this.props\n        return <>\n            {networks && networks.length > 0 ? <DisplayScreenAside genratedCodeCallback={this.genratedCodeCallback} genratedCodeModal={showGenratedCode} filterApply={this.filterApply} state={this.state} onSelectTemplate={this.onSelectTemplate} onSelectedPlatform={this.onSelectedPlatform} onSelectAllUgcRigths={this.onSelectAllUgcRigths} onUgcRigths={this.onUgcRigths} onTagRemove={this.onTagRemove} onTagApply={this.onTagApply} onAssetsApply={this.onAssetsApply} onconnectionApply={this.onconnectionApply} onSelectAllAssetsApply={this.onSelectAllAssetsApply} onNetworkApply={this.onNetworkApply} onClickSelectAll={this.onClickSelectAll} onSearchFilter={this.onSearchFilter} onCollectionSearchFilter={this.onCollectionSearchFilter}\n                onCollectionSelectAll={this.onCollectionSelectAll}\n                onCollectionApply={this.onCollectionApply} conditionApply={this.conditionApply} onConnectionSearchFilter={this.onConnectionSearchFilter} onConnectionSelectAll={this.onConnectionSelectAll} onClickToDelete={this.onClickToDelete} onResetFilter={this.onResetFilter} activeFilter={activeFilter} history={history} onChangeName={this.onChangeName} onUpdateReponseData={this.onUpdateReponseData} onLoadPublish={this.onLoadPublish} onSelectActive={this.onSelectActive} onRequestPublish={this.onRequestPublish} isPublishEdit={true} key={\"edit_filter\"} /> : null}\n        </>\n\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        networks: state.networks.networkData,\n        feedData: state.feedData.filterList,\n        collectionData: state.collection\n\n    }\n}\n\nexport default connect(mapStateToProps)(WebEmbed);","import React, { Component, Suspense } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditWebEmbed from '../../EditWebEmbed'\n\nclass EmbedList extends Component {\n    state = {\n        active: null\n    }\n    onChange = (value, item) => event => {\n        const { active } = this.state\n        this.setState({ active: active == value ? null : value }, () => this.props.onUpdateReponseData(item))\n    }\n    render() {\n        const { state, history } = this.props\n        const { active } = this.state\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\n                return <Accordion.Item eventKey={pIndex}>\n                    <div className=\"menu-item\" key={`di_sc${pIndex}`}>\n                        <Accordion.Header className=\"w-100 disable_arrow\">\n                            <div className=\"d-flex justify-content-between align-items-center w-100\">\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px me-2\"\n                                            onClick={this.onChange(`p_code${pIndex}`, item)}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px\"\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id })}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Accordion.Header>\n                    </div>\n                    <Accordion.Body className=\"p-0 pt-3\">\n                        <EditWebEmbed history={history} item={item} key={`edit_digital_screen${pIndex}`} />\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            })\n            }\n        </Accordion>\n    }\n\n}\nexport default EmbedList\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n//import Select from 'react-select';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport Filters from './Filters';\nimport Templates from './Template';\nimport Platforms from './Platforms';\nimport EmbedList from './EmbedList'\n\nclass DisplayScreenAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n\n\n    handleSelect(date) {\n        console.log(date); // native Date object\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName, isPublishEdit } = this.props\n        console.log(\"this.props\", this.props.isPublishEdit)\n        return <div className=\"card-body\">\n            <PerfectScrollbar>\n                <div className=\"innerAsideWrapper\">\n                    <div className=\"d-flex align-items-start justify-content-between\">\n                        <h6 className=\"fs-7 fw-boldest mb-0\">{`${isPublishEdit ? `Edit` : `Add`} Filter`}</h6>\n                        {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\n                    </div>\n                    <Tab.Container id=\"billing_tab_panel\" defaultActiveKey=\"aside-assets_filter\">\n                        <Nav variant=\"nav\" className=\"border-bottom mb-3\">\n                            <Nav.Item className=\"\">\n                                <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\n                            </Nav.Item>\n                            {!isPublishEdit ? <Nav.Item className=\"\">\n                                <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n                            </Nav.Item> : null}\n                        </Nav>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"aside-assets_filter\">\n                                <label className=\"text-gray-800 mb-2\">Name</label>\n                                <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n                                {\n                                    state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                                }\n\n                                <Accordion defaultActiveKey={\"0\"}>\n                                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                                        <Accordion.Header className=\"add_fillter_btn\">\n                                            <span className=\"svg-icon svg-icon-3 text-gray-800\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11 11V5H13V11H19V13H13V19H11V13H5V11H11Z\" fill=\"currentColor\"></path></svg>\n                                            </span>\n                                            <span className=\"fs-8 text-gray-800 fw-semibold\">Choose Filter</span>\n                                        </Accordion.Header>\n                                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2zM8 19h12v-8H8v8zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2z\" fill=\"currentColor\" /></svg>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Collection</p>\n                                                    <span className=\"fs-9 text-gray-500\">Select the preferred collection</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none  disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M0,0H24V24H0Z\" fill=\"none\" />\n                                                                <path id=\"Path_4\" data-name=\"Path 4\" d=\"M8.365,20.286A9.309,9.309,0,0,1,2.9,14.82a3.246,3.246,0,0,1,0-6.455A9.309,9.309,0,0,1,8.365,2.9a3.246,3.246,0,0,1,6.455,0,9.309,9.309,0,0,1,5.465,5.466,3.246,3.246,0,0,1,0,6.455,9.311,9.311,0,0,1-5.466,5.465,3.246,3.246,0,0,1-6.455,0Zm1.836-.347a1.391,1.391,0,0,0,2.782.048v-.1a1.391,1.391,0,0,0-2.782.048ZM6.328,16.818a7.393,7.393,0,0,0,2.388,1.614,3.247,3.247,0,0,1,5.751,0,7.444,7.444,0,0,0,3.965-3.963,3.247,3.247,0,0,1,0-5.752,7.447,7.447,0,0,0-3.964-3.964,3.247,3.247,0,0,1-5.752,0A7.444,7.444,0,0,0,4.752,8.716a3.247,3.247,0,0,1,0,5.752A7.427,7.427,0,0,0,6.328,16.818Zm12.22-5.226a1.391,1.391,0,1,0,1.39-1.391A1.392,1.392,0,0,0,18.548,11.592Zm-15.3,1.391a1.391,1.391,0,1,0-1.391-1.391A1.393,1.393,0,0,0,3.246,12.983ZM10.2,3.246a1.391,1.391,0,0,0,2.782.048V3.2a1.391,1.391,0,0,0-2.782.048Z\" transform=\"translate(0.408 0.408)\" fill=\"currentColor\" />\n                                                            </svg>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Network</p>\n                                                    <span className=\"fs-9 text-gray-500\">Choose the required network</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                                <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                                <g><path id=\"Path_2321\" data-name=\"Path 2321\" d=\"M21,14v5a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V5A2,2,0,0,1,5,3h5V5H5V19H19V14Z\" fill=\"#313a53\" />\n                                                                    <path id=\"Path_2322\" data-name=\"Path 2322\" d=\"M21,7H17V3H15V7H11V9h4v4h2V9h4\" fill=\"currentColor\" /></g>\n                                                            </svg>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Connections</p>\n                                                    <span className=\"fs-9 text-gray-500\">Select the connection type</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                                <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\n                                                            </svg>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Assets Type</p>\n                                                    <span className=\"fs-9 text-gray-500\">Choose the type of asset</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                                <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm.707 2.122L3.828 12l8.486 8.485 7.778-7.778-1.06-7.425-7.425-1.06zm2.12 6.364a2 2 0 1 1 2.83-2.829 2 2 0 0 1-2.83 2.829z\" fill=\"currentColor\" />\n                                                            </svg>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Tag</p>\n                                                    <span className=\"fs-9 text-gray-500\">Select collection and filter assets</span>\n                                                </div>\n                                            </div>\n                                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                                    <div className=\"symbol-label\">\n                                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\n                                                                <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                                            </svg>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                                <div className=\"\">\n                                                    <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>UGC Rights</p>\n                                                    <span className=\"fs-9 text-gray-500\">Select collection and filter assets</span>\n                                                </div>\n                                            </div>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                    <Templates {...this.props} />\n                                    <Platforms {...this.props} />\n                                </Accordion>\n                                <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                    {isPublishEdit ? <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.props.onRequestPublish}>Save Changes</button> : <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>}\n                                </div>\n\n\n\n                            </Tab.Pane>\n                            {!isPublishEdit ? <Tab.Pane eventKey=\"filter-assets_published\">\n                                <EmbedList {...this.props} />\n                            </Tab.Pane> : null}\n                        </Tab.Content>\n                    </Tab.Container>\n                </div>\n            </PerfectScrollbar>\n        </div>\n\n    }\n}\n\nexport default DisplayScreenAside;"],"names":["AndOrCondition","this","props","condition","conditionApply","Dropdown","align","className","variant","capitalizeFirstLetter","onClick","Component","AssetsTypes","onAssetsApply","onSelectAllAssetsApply","state","filterApply","filterKey","onSelectActive","indexFilter","isLast","Accordion","activeKey","onSelect","eventKey","xmlns","viewBox","width","height","fill","d","type","AndOr","htmlFor","name","value","id","checked","Object","keys","assetsApply","length","includes","Collections","onCollectionSearchFilter","onCollectionSelectAll","onCollectionApply","collectionList","selectedCollection","placeholder","onChange","map","item","src","thumbnails","alt","Network","onNetworkApply","onClickSelectAll","onSearchFilter","transform","feedData","selectedNetwork","networkData","GET_NETWORK_ICON","baseUrl","UgcRights","onSelectAllUgcRigths","onUgcRigths","ugcRigths","Tags","tagString","newTag","listTags","selectedOption","onClickToRemoveTag","index","event","splice","setState","onClickNewAddTag","modalAssetData","String","push","addNewTag","target","setNewTags","onTagApply","tagList","label","tags","split","onTagRemove","isClearable","options","tagApply","tagItem","tagKey","connect","Connection","onconnectionApply","onConnectionSelectAll","onConnectionSearchFilter","console","log","selectedConnection","networkId","feedId","Filters","removeDuplicate","data","updateFilter","updateKey","ex","Templates","templeteList","onLoad","self","getTemplateList","then","Response","responseData","templates","getTemplateListDispatch","onFiltertemplateName","updated","filter","onSelectTemplate","selectedTemplate","ToggleButtonGroup","defaultValue","temp","ToggleButton","Theme","to","dispatch","Platforms","onSelectedPlatform","selectedPlatform","e","embedCodeCallback","HtmlEmbed","React","WordPressEmbed","WixEmbed","SquarespaceEmbed","ShopifyEmbed","OtherEmbed","DisplayScreenAside","dataWithComma","updateData","dataCollection","tagDataWithComma","assetsData","chooseActiveFilter","assetsType","collection","connection","source","ugcrights","WebEmbed","timeout","onClickToDelete","Swal","title","text","icon","showCancelButton","confirmButtonText","result","isConfirmed","publishDeleteRequest","response","onLoadPublish","toast","chooseFilter","shareEmbedModal","showGenratedCode","genratedCodeCallback","renderSwitch","platform","template","dataNetwork","searchText","clearTimeout","setTimeout","textConnectionSearch","toLowerCase","onLoadConnectionFilterData","searchData","textSearch","onLoadFilterData","networks","onLoadCollectionList","collectionData","collectionCompleteList","assetsCount","getCollectionList","catch","collectionSearch","onLoadCollectionFilterData","onChangeName","publishCodeName","onRequestPublish","network","ugcRigthsU","join","filterType","toUpperCase","updatePublishRequest","status","response_message","response_code","onResetFilter","collectionApply","sourceApply","genrateCode","activeFilter","onUpdateReponseData","assets_type","ugc_status","publishList","selectedWebEmbed","Publish","feeds","nextProps","history","genratedCodeModal","isPublishEdit","filterList","EmbedList","active","defaultActiveKey","pIndex","OverlayTrigger","placement","overlay","Tooltip","EditWebEmbed","showModal","date","Tab","Nav","Template"],"sourceRoot":""}