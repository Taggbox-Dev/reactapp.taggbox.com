{"version":3,"file":"static/js/9694.01658f7b.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsModalAside.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\nimport $ from 'jquery';\nimport FileSaver from \"file-saver\";\nimport moment from 'moment'\nimport { Nav, Tab } from 'react-bootstrap';\nimport { baseUrl } from \"../../../../../Assets/AssetsHelper\";\nimport { Uppy } from \"@uppy/core\";\nimport { ugcActionRquest } from '../../../../../Services/Actions/ugcRightsActions'\n//import FileInput from \"@uppy/react/lib/FileInput\";\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from '@uppy/google-drive';\nimport Url from '@uppy/url';\nconst GetRightsGenralRequest = React.lazy(() => import('./GetRightsSteps/GetRightsGenralRequest'));\nconst GetRightsSocialAccount = React.lazy(() => import('./GetRightsSteps/GetRightsSocialAccount'));\nconst GetRightsCopyUrl = React.lazy(() => import('./GetRightsSteps/GetRightsCopyUrl'));\nconst GetRightsPendingAndExpire = React.lazy(() => import('./GetRightsStatus/GetRightsPendingAndExpire'));\nconst GetRightsDownload = React.lazy(() => import('./GetRightsStatus/GetRightsDownload'));\nconst GetRightsRejected = React.lazy(() => import('./GetRightsStatus/GetRightsRejected'));\n\nconst uppyConfig = {\n    uppyKey: '0701d3d7f8d94e92a65a9cba388b1d96',\n    uppyBucket: 'cloud.taggbox.com',\n    uppyAwsKey: '47ABVORKG52UYE1KB28S',\n    uppyAwsSecret: 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v',\n    companionUrl: 'https://test.taggbox.com'\n}\n\n\n\nclass AssetsModalAside extends Component {\n    constructor(props) {\n        super(props)\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['image/*'] } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: uppyConfig.uppyKey\n                    },\n                    steps: {\n                        store: {\n                            robot: \"/wasabi/store\",\n                            bucket_region: \"us-west-1\",\n                            bucket: uppyConfig.uppyBucket,\n                            key: uppyConfig.uppyAwsKey,\n                            secret: uppyConfig.uppyAwsSecret,\n                            path: 'postimage/${file.id}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n\n        this.uppyPostEdit = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 5000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: ['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'] } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: uppyConfig.uppyKey\n                    },\n                    steps: {\n                        store: {\n                            robot: \"/wasabi/store\",\n                            bucket_region: \"us-west-1\",\n                            bucket: uppyConfig.uppyBucket,\n                            key: uppyConfig.uppyAwsKey,\n                            secret: uppyConfig.uppyAwsSecret,\n                            path: 'test/${file.id}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: uppyConfig.companionUrl })\n    }\n    state = {\n        step: 1,\n        client_logo: null,\n        client_logo_name: null,\n        comment: 'What a fantastic shot! We loved your post. Would you mind us utilizing it for our brand?',\n        tncName: \"termAndConditions.docx\",\n        tncUrl: \"termAndConditions.docx\",\n        tnc: false,\n        logoModal: false,\n        fileModal: false,\n        activeKey: 'ugc-genralRequest',\n        connectedAccount: null,\n        commentError: null,\n        tncUrlError: null,\n        tncError: null,\n        requestedRespone: null\n\n    }\n\n    onClickToChange = (step) => event => {\n        if (this.state.step == 1) {\n            // ugc-copyUrl\n            if (this.state.comment && this.state.tncUrl && this.state.tnc) {\n                this.setState({ step, activeKey: \"ugc-socialAccount\" })\n            }\n            else {\n\n                if (!this.state.comment || String(this.state.comment).length == 0) this.setState({ commentError: true })\n                if (!this.state.tncUrl) this.setState({ tncUrlError: true })\n                if (!this.state.tnc) this.setState({ tncError: true })\n            }\n        }\n        else if (this.state.step == 2) {\n            if (this.state.connectedAccount) {\n                this.setState({ step, activeKey: \"ugc-copyUrl\" }, () => this.onClicktoSendRequest())\n            }\n        }\n        else if (this.state.step == 3) {\n\n        }\n\n    }\n    onClickToRemoveLogo = event => this.setState({\n        client_logo: null, client_logo_name: null,\n    })\n\n\n    componentDidMount() {\n        this.uppyPostEdit.on('transloadit:result', (stepName, result) => {\n            console.log(\"client_logo\", stepName, result)\n            var imgpath = result.url.split('/');\n            var imglength = imgpath.length;\n            var filename = imgpath[imglength - 1];\n            let { tncName, tncUrl } = this.state;\n            tncUrl = result.id\n            tncName = result.name\n            console.log(\"client_logo\", tncUrl, tncName)\n            this.setState({ tncName, tncUrl, selectedFile: result.id, filename: `https://cloud.taggbox.com/test/${result.id}`, selected: `https://cloud.taggbox.com/test/${result.id}` }, () => {\n                setTimeout(() => {\n                    this.uppyPostEdit.cancelAll()\n                    this.setState({ fileModal: false })\n                }, 300)\n            })\n\n        })\n\n        this.uppy.on('transloadit:result', (stepName, result) => {\n            let { client_logo, client_logo_name } = this.state\n\n            client_logo = `https://cloud.taggbox.com/postimage/${result.id}`\n            client_logo_name = result.name\n            console.log(\"client_logo\", client_logo, client_logo_name)\n            this.setState({ client_logo, client_logo_name, selectedlogoFile: result.id, logofilename: `https://cloud.taggbox.com/postimage/${result.id}`, logoselected: `https://cloud.taggbox.com/postimage/${result.id}` }, () => {\n                setTimeout(() => {\n                    this.uppy.cancelAll()\n                    this.setState({ logoModal: false })\n                }, 300)\n            })\n\n        })\n    }\n\n\n    onClickClearFile = event => {\n        this.setState({ tncName: \"\", tncUrl: \"\" })\n    }\n\n    componentWillUnmount() {\n        this.uppy.close();\n    }\n    termsFileDownload = () => {\n        //var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx'), \"Terms&ConditionsforuseofUGC.docx\");\n    }\n    modalClose = (step) => event => {\n        console.log(\"step-close\", step)\n        if (step == 2) this.setState({ step: 1, activeKey: \"ugc-genralRequest\" })\n        else this.props.modalClose(false)\n    }\n    onChangeComment = event => this.setState({ comment: event.target.value })\n    onClicktnc = event => {\n        const { tnc } = this.state\n        this.setState({ tnc: !tnc, tncError: null })\n    }\n\n    onLogoClose = event => {\n        this.uppy.cancelAll()\n        this.setState({ logoModal: false })\n    }\n    onLogoOpen = event => this.setState({ logoModal: true }, () => {\n        $(\".uppy-Dashboard-close\").click(() => {\n            this.uppy.cancelAll()\n            this.setState({ logoModal: false })\n        })\n    })\n\n    onFileOpen = event => {\n        this.setState({ fileModal: true }, () => {\n            $(\".uppy-Dashboard-close\").click(() => {\n                this.uppyPostEdit.cancelAll()\n                this.setState({ fileModal: false })\n            })\n        })\n\n    }\n\n    onFileClose = () => {\n        this.uppyPostEdit.cancelAll()\n        this.setState({ fileModal: false })\n    }\n    onSelected = (key) => {\n        this.setState({ activeKey: key })\n    }\n    onClicktoSendRequest = () => {\n        const { modalAssetData } = this.props;\n        const { comment, tncUrl, tncName, client_logo, connectedAccount } = this.state;\n        var self = this;\n        const requestedData = {\n            \"feedId\": modalAssetData.feedId,\n            \"custom_message\": comment,\n            \"networkId\": modalAssetData.networkId,\n            \"brandlink\": client_logo ? client_logo : \"\",\n            \"termslink\": tncUrl,\n            \"custom_term_type\": tncName,\n            \"assets\": [{ \"referenceId\": modalAssetData.referenceId, \"username\": connectedAccount.data[0].email ? connectedAccount.data[0].email : connectedAccount.data[0].id, \"media\": modalAssetData.postFile, \"video\": modalAssetData.mediaFile }]\n        }\n        ugcActionRquest(requestedData).then((response) => {\n            console.log(\"response\", response)\n            self.setState({ requestedRespone: response.data })\n        })\n        console.log(\"connectedAccountdsd sdfsd\", connectedAccount, requestedData)\n    }\n    onUpdateData = (provider, data) => {\n\n        this.setState({ connectedAccount: { provider, data } })\n    }\n    render() {\n        const { modalAssetData } = this.props\n        const { step, activeKey, connectedAccount, requestedRespone, comment } = this.state\n        console.log(\"connectedAccount\", connectedAccount)\n        return modalAssetData && Object.keys(modalAssetData).length > 0 ? <div className=\"rights_modal_sidebar position-relative\">\n            <div className=\"rights_modal_aside_wrap\">\n                {modalAssetData.ugcRights == null ? <Tab.Container activeKey={activeKey} onSelect={this.onSelected}>\n                    <div className=\"ugc-wizard-nav\">\n                        <Nav variant=\"nav\" className=\"bg-light justify-content-between row gx-0\">\n                            <Nav.Item className=\"col-4\">\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 1 || step == 2 || step == 3 ? `active` : ``}`} eventKey=\"ugc-genralRequest\">\n                                    <span className=\"svg-icon text-success\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                            <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\n                                        </svg>\n                                    </span>\n                                    <span className=\"fw-bold text-nowrap\">General Request</span>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"col-4\">\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 2 || step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-socialAccount\">\n                                    <span className=\"svg-icon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                            <path className=\"checkIco\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-.997-4L6.76 11.757l1.414-1.414 2.829 2.829 5.656-5.657 1.415 1.414L11.003 16z\" fill=\"currentColor\" />\n                                            <path className=\"checkIcoFilled\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\n                                        </svg>\n                                    </span>\n                                    <span className=\"fw-bold text-nowrap\">Social Account</span>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"col-4\">\n                                <Nav.Link className={`py-3 py-xl-4 block-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\n                                    <span className=\"svg-icon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                            <path className=\"checkIco\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-.997-4L6.76 11.757l1.414-1.414 2.829 2.829 5.656-5.657 1.415 1.414L11.003 16z\" fill=\"currentColor\" />\n                                            <path className=\"checkIcoFilled\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\n                                        </svg>\n                                    </span>\n                                    <span className=\"fw-bold text-nowrap\">Copy URL</span>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </div>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"ugc-genralRequest\">\n                            <Suspense fallback={<></>}>\n                                <GetRightsGenralRequest state={this.state} onChangeComment={this.onChangeComment} onClicktnc={this.onClicktnc} onClickClearFile={this.onClickClearFile} uppyPostEdit={this.uppyPostEdit} uppy={this.uppy} onLogoClose={this.onLogoClose} onLogoOpen={this.onLogoOpen} onClickToRemoveLogo={this.onClickToRemoveLogo} onFileOpen={this.onFileOpen} onFileClose={this.onFileClose} />\n                            </Suspense>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"ugc-socialAccount\">\n                            <Suspense fallback={<></>}>\n                                <GetRightsSocialAccount modalAssetData={modalAssetData} onUpdateData={this.onUpdateData} connectedAccount={connectedAccount} />\n                            </Suspense>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"ugc-copyUrl\">\n                            <Suspense fallback={<></>}>\n                                <GetRightsCopyUrl requestedRespone={requestedRespone} comment={comment} />\n                            </Suspense>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n                    :\n                    modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 1 ?\n                        <Suspense fallback={<></>}>\n                            <GetRightsPendingAndExpire days={parseInt(30) - parseInt((parseInt((moment().diff(moment(modalAssetData.ugcRights.created), 'days')))))} expireStatus={true} modalAssetData={modalAssetData} />\n                        </Suspense>\n                        : modalAssetData.ugcRights && Object.keys(modalAssetData.ugcRights).length > 0 && modalAssetData.ugcRights.status == 2 ?\n                            <Suspense fallback={<></>}>\n                                <GetRightsDownload modalAssetData={modalAssetData} />\n                            </Suspense> : null}\n\n                {/*      <Suspense fallback={<></>}>\n                    <GetRightsRejected modalAssetData={modalAssetData} />\n                </Suspense> */}\n            </div>\n            {modalAssetData.ugcRights == null ? <div className=\"rights_modal_actions text-center modal-footer w-100\">\n                {step == 1 || step == 2 ? <><button type=\"button\" className=\"btn btn-secondary me-2\" onClick={this.modalClose(step)}>{step == 1 ? `Cancel` : step == 2 ? `Back` : ``}</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClickToChange(step == 1 ? 2 : step == 2 ? 3 : 4)}>Next Step</button>\n                </> : null}\n\n                {step == 3 ? <button type=\"button\" className=\"btn btn-secondary me-2\" onClick={this.modalClose}>Done</button> : null}\n            </div> : null}\n        </div> : null\n    }\n}\n\nexport default AssetsModalAside;"],"names":["GetRightsGenralRequest","React","GetRightsSocialAccount","GetRightsCopyUrl","GetRightsPendingAndExpire","GetRightsDownload","uppyConfig","AssetsModalAside","props","state","step","client_logo","client_logo_name","comment","tncName","tncUrl","tnc","logoModal","fileModal","activeKey","connectedAccount","commentError","tncUrlError","tncError","requestedRespone","onClickToChange","event","setState","String","length","onClicktoSendRequest","onClickToRemoveLogo","onClickClearFile","termsFileDownload","FileSaver","baseUrl","modalClose","console","log","onChangeComment","target","value","onClicktnc","onLogoClose","uppy","cancelAll","onLogoOpen","$","click","onFileOpen","uppyPostEdit","onFileClose","onSelected","key","modalAssetData","self","requestedData","feedId","networkId","referenceId","data","email","id","postFile","mediaFile","ugcActionRquest","then","response","onUpdateData","provider","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","params","auth","steps","store","robot","bucket_region","bucket","secret","path","waitForEncoding","GoogleDrive","companionUrl","Url","this","on","stepName","result","imgpath","url","split","name","selectedFile","filename","selected","setTimeout","selectedlogoFile","logofilename","logoselected","close","Object","keys","className","ugcRights","onSelect","variant","eventKey","xmlns","viewBox","width","height","fill","d","Suspense","fallback","status","days","parseInt","moment","diff","created","expireStatus","type","onClick","Component"],"sourceRoot":""}