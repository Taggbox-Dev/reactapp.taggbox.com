{"version":3,"file":"static/js/1410.85db6800.chunk.js","mappings":"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","sources":["Layouts/Main/SocialLogin/YouTube/index.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsSocialAccount.js"],"sourcesContent":["import { Component, useState, useCallback } from 'react';\nimport {\n    LoginSocialGoogle,\n\n} from 'reactjs-social-login';\nimport {\n    GoogleLoginButton,\n} from 'react-social-login-buttons';\nimport { baseUrl } from \"../../../../Assets/AssetsHelper\";\nimport { GET_NETWORK_ICON } from '../../../../Services/Utils/utils'\n\nconst REDIRECT_URI = 'https://ugc.taggbox.com/login';\nconst SocialGoogleLogin = (props) => {\n    const [provider, setProvider] = useState('');\n    const [profile, setProfile] = useState();\n\n    const onLoginStart = useCallback(() => {\n        alert('login start');\n    }, []);\n\n    const onLogoutSuccess = useCallback(() => {\n        setProfile(null);\n        setProvider('');\n        alert('logout success');\n    }, []);\n\n    const onLogout = useCallback(() => { }, []);\n    console.log(\"provider\", provider, profile)\n    return (\n        <>\n            <LoginSocialGoogle\n                client_id={'95564504779-0hejo69vc4apo6p0avpafasvbcfhlvom.apps.googleusercontent.com'}\n                onLoginStart={onLoginStart}\n                redirect_uri={REDIRECT_URI}\n                scope=\"openid profile email\"\n                discoveryDocs=\"claims_supported\"\n                access_type=\"offline\"\n                onResolve={({ provider, data }) => props.onUpdateData(provider, data)}\n                onReject={err => {\n                    console.log(err);\n                }}\n            >\n                <div className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\">\n                    <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                        <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                        <div className=\"w-75 overflow-hidden\">\n                            <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex\">\n                        <span className=\"h-20px w-20px\">\n                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(7)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                        </span>\n                    </div>\n                </div>\n            </LoginSocialGoogle>\n        </>\n    );\n};\n\nexport default SocialGoogleLogin;","import React, { Component } from \"react\";\nimport Swal from 'sweetalert2';\nimport { HOST_DOMAIN, INSTA_CLIENT_ID } from '../../../../../../Services/Api'\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport SocialLoginFacebook from '../../../../SocialLogin/Facebook'\nimport SocialGoogleLogin from '../../../../SocialLogin/YouTube'\nimport { GET_NETWORK_ICON } from '../../../../../../Services/Utils/utils'\nimport { twitterConnect, flickrConnect, yammerConnect, tumblerConnect, vimeoConnect, facebookConnect } from '../../../../SocialLogin/auth'\nimport { getTwitterAuthUrl, getFbAuthUrl } from '../../../../../../Layouts/Main/AuthCallback/AuthSocialAcc'\nimport { addFacebookAccount, addInstaAccount } from '../../../../../../Layouts/Main/AuthCallback/connectSocialAcc'\nimport { sendPublishRequest, publishDeleteRequest, getInstagramDetails, InstagramPostPublish, getFacebookDetails, FacebookPublish } from '../../../../../../Services/Actions/publishActions'\nconst channel = new BroadcastChannel('connect');\nclass GetRightsSocialAccount extends Component {\n    state = {\n        connected: null,\n        showConfirm: false\n    }\n    componentDidMount() {\n        channel.addEventListener(\"message\", this.readAuthenticationCode);\n    }\n\n    readAuthenticationCode = (event) => {\n        const response = JSON.parse(event.data);\n        const { data, networkId, type } = response;\n\n        var self = this\n        if (type == \"get-rights\") {\n\n            const responseToken = JSON.parse(event.data);\n            const { modalAssetData } = this.props\n            //getFacebookDetails, FacebookPublish\n            if (modalAssetData.networkId == 2 || modalAssetData.networkId == 18) {\n                if (modalAssetData.networkId == 18) {\n                    addFacebookAccount(data, networkId, (data) => {\n                        getInstagramDetails({ access_token: data.token }).then((response) => {\n                            const { accounts } = response.data\n                            console.log(\"response.data\", response.data, accounts)\n                            var accountsData = [];\n                            if (accounts && accounts.length > 0) {\n                                accounts.map((item) => {\n                                    accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                                })\n                            }\n\n                            self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                        })\n                    })\n                }\n                else if (modalAssetData.networkId == 2) {\n                    addInstaAccount(data, networkId, (data) => {\n                        getInstagramDetails({ access_token: data.token }).then((response) => {\n                            const { accounts } = response.data\n                            console.log(\"response.data\", response.data, accounts)\n                            var accountsData = [];\n                            if (accounts && accounts.length > 0) {\n                                accounts.map((item) => {\n                                    accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                                })\n                            }\n\n                            self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"instagram\", accountsData))\n                        })\n                    })\n                }\n\n            }\n            else if (modalAssetData.networkId == 3) {\n                addFacebookAccount(data, networkId, (data) => {\n                    getFacebookDetails({ access_token: data.token }).then((response) => {\n                        const { pages } = response.data\n                        console.log(\"response.data\", response.data, pages)\n                        var accountsData = [];\n                        if (pages && pages.length > 0) {\n                            pages.map((item) => {\n                                accountsData.push({ id: item.id, name: item.name, access_token: item.access_token, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                            })\n                        }\n\n                        self.setState({ access_token: data.token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"facebook\", accountsData))\n                    })\n                })\n            }\n            else if (modalAssetData.networkId == 1) {\n                getInstagramDetails({ access_token: data.token }).then((response) => {\n                    const { accounts } = response.data\n                    console.log(\"response.data\", response.data, accounts[0].id)\n                    var accountsData = [];\n                    if (accounts && accounts.length > 0) {\n                        accounts.map((item) => {\n                            accountsData.push({ id: item.id, name: item.username, picture: baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`) })\n                        })\n                    }\n\n                    self.setState({ access_token: responseToken.data.access_token, socialData: response.data, accountsData }, () => this.props.onUpdateData(\"twitter\", accountsData))\n                })\n            }\n\n        }\n    }\n\n\n    componentWillUnmount() {\n        channel.removeEventListener(\"message\", this.readAuthenticationCode);\n    }\n    handleYes = event => {\n        this.setState({ showConfirm: true })\n    }\n    handleNo = event => {\n        this.setState({ showConfirm: true })\n    }\n    onClickSocialConnect = (data) => event => {\n        if (data && Object.keys(data).length > 0) {\n            Swal.fire({\n                imageUrl: baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(data.networkId)}.svg`),\n                title: `<strong>${GET_NETWORK_ICON(data.networkId)}</strong>`,\n                html: `Connect to ${GET_NETWORK_ICON(data.networkId)} and start collecting assets.`,\n                showCloseButton: true,\n                showCancelButton: false,\n                focusConfirm: true,\n                confirmButtonText: `Continue with ${GET_NETWORK_ICON(data.networkId)}`,\n                confirmButtonAriaLabel: `Continue with ${GET_NETWORK_ICON(data.networkId)}`,\n                cancelButtonText: '<i className=\"fa fa-thumbs-down\"></i>',\n                cancelButtonAriaLabel: 'Thumbs down'\n            }).then((result) => {\n                localStorage.setItem(\"networkId\", data.networkId);\n                localStorage.setItem(\"connectionType\", \"get-rights\");\n                switch (data.networkId) {\n                    case 1:\n                        getTwitterAuthUrl();\n                        break;\n                    case 6:\n                        flickrConnect(6);\n                        break;\n                    case 21:\n                        yammerConnect(\"yammer\", null, true);\n                        break;\n                    case 11:\n                        tumblerConnect(11);\n                        break;\n                    case 8:\n                        vimeoConnect(true);\n                        break;\n                    case 3:\n                        getFbAuthUrl(3);\n                        break;\n                    case 2:\n                        const url = `https://api.instagram.com/oauth/authorize?client_id=${INSTA_CLIENT_ID}&redirect_uri=${HOST_DOMAIN}/instagram/feeds/authCallback/&scope=user_profile,user_media&response_type=code`\n                        window.open(url, '_blank', \"width=786,height=786\");\n                        break;\n                    case 18:\n                        getFbAuthUrl(18)\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n    }\n\n\n    render() {\n        const { showConfirm } = this.state\n        const { modalAssetData, connectedAccount } = this.props;\n        console.log(\"modalAssetData social account\", this.props)\n        return <><div className=\"p-lg-6 p-3\">\n            <div className=\"m-auto\">\n                {\n                    connectedAccount && connectedAccount.data.length > 0 ? <><h3 className=\"mb-2 pb-2 fs-7 pt-1\">\n                        <span className=\"fw-medium\">Connect Account</span>\n                    </h3>\n                        <div className=\"mb-8\">\n                            <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 border border-dark bg-white w-100\">\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <div className=\"symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden\">\n                                        <img className=\"object-center-cover\" src={connectedAccount.data[0].picture} height={40} width={40} alt=\"instagram\" />\n                                    </div>\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-dark text-ellipsis\">@{connectedAccount.data[0].name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex\">\n                                    <span className=\"h-20px w-20px\">\n                                        <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${connectedAccount.provider}.svg`)} alt=\"\" />\n                                    </span>\n                                </div>\n                            </button>\n                            <span className=\"fw-medium\">You are logged in with this account</span>\n                        </div></> : <>{\n                            modalAssetData.networkId == 3 ? <SocialLoginFacebook onUpdateData={this.props.onUpdateData} /> : modalAssetData.networkId == 7 ? <SocialGoogleLogin onUpdateData={this.props.onUpdateData} /> : <button type=\"button\" className=\"d-flex align-items-center rounded-1 mb-2 p-3 btn btn-outline-secondary w-100\" onClick={this.onClickSocialConnect(modalAssetData)}>\n                                <div className=\"d-flex align-items-center flex-grow-1 w-75\">\n                                    <div className=\"symbol symbol-40 bg-light rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div>\n                                    <div className=\"w-75 overflow-hidden\">\n                                        <span className=\"text-start fs-7 d-block fw-bolder text-ellipsis\">Add Account</span>\n                                    </div>\n                                </div>\n                                {modalAssetData.networkId ?\n                                    <div className=\"d-flex\">\n                                        <span className=\"h-20px w-20px\">\n                                            <img className=\"object-center-cover\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalAssetData.networkId)}.svg`)} alt=\"network\" style={{ filter: 'grayscale(1)', opacity: '.5' }} />\n                                        </span>\n                                    </div>\n                                    : null}\n                            </button>\n                        }</>\n                }\n\n            </div>\n        </div>\n\n\n        </>\n    }\n}\n\nexport default GetRightsSocialAccount;"],"names":["props","useState","provider","setProvider","profile","setProfile","onLoginStart","useCallback","alert","console","log","client_id","redirect_uri","scope","discoveryDocs","access_type","onResolve","data","onUpdateData","onReject","err","className","src","baseUrl","GET_NETWORK_ICON","alt","style","filter","opacity","channel","BroadcastChannel","GetRightsSocialAccount","state","connected","showConfirm","readAuthenticationCode","event","response","JSON","parse","networkId","type","self","responseToken","modalAssetData","addFacebookAccount","getInstagramDetails","access_token","token","then","accounts","accountsData","length","map","item","push","id","name","username","picture","setState","socialData","addInstaAccount","getFacebookDetails","pages","handleYes","handleNo","onClickSocialConnect","Object","keys","Swal","imageUrl","title","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","result","localStorage","setItem","getTwitterAuthUrl","flickrConnect","yammerConnect","tumblerConnect","vimeoConnect","getFbAuthUrl","url","INSTA_CLIENT_ID","HOST_DOMAIN","window","open","addEventListener","this","removeEventListener","connectedAccount","height","width","onClick","Component"],"sourceRoot":""}