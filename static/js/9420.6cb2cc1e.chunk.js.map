{"version":3,"file":"static/js/9420.6cb2cc1e.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/Components/Elements/MediaOptions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nexport default class MediaOptions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageError:false\n        }\n    }\n    componentWillMount(){\n        this.checkImage(this.props.asset.postFile)  \n    }\n    componentWillReceiveProps(nextProps){\n        this.checkImage(nextProps.asset.postFile)\n    }\n\n    checkImage = (url) =>{\n        const img = new Image()\n        img.src = url\n        img.onload = () => this.setState({imageError:false})\n        img.onerror = () => this.setState({imageError:true})\n    }\n\n    render() {\n        const { postPinToTop, asset, rightsHandleModalShow, onClickToSingleCheck, updateIndex, postStatusUpdate, postRefresh } = this.props\n        const {imageError} = this.state\n        return <div className=\"d-flex align-items-center\">\n            <label className=\"form-check me-2\">\n                <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" checked={asset.isChecked ? asset.isChecked : false} onChange={onClickToSingleCheck(asset.id, updateIndex)} />\n            </label>\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{asset.pin == 1 ? \"Unpin\" : \"Pin To Top\"}</Tooltip>}>\n                <button type=\"button\" className=\"btn p-0 border-0 me-2 d-flex\" onClick={postPinToTop(asset)}>\n                    <i className={`ri-pushpin-2-fill icon-6 me-0 ${asset.pin == 1 ? 'text-success' : 'text-gray-800'}`}></i>\n                </button>\n            </OverlayTrigger>\n            {asset.Feed && Object.keys(asset.Feed).length > 0 && ((asset.Feed.networkId == 32) || asset.networkId == 1 || (asset.networkId == 3 && asset.Feed.filterId == 62) || asset.networkId == 7 || asset.networkId == 8 || asset.networkId == 6 || asset.networkId == 11 || asset.networkId == 21 || (asset.networkId == 18 && (asset.Feed.filterId == 24 || asset.Feed.filterId == 25 || asset.Feed.filterId == 26)) || asset.networkId == 28) && asset.ugcstatus == null && asset.type != 1 ? <OverlayTrigger placement=\"top\" overlay={<Tooltip>Get Rights</Tooltip>}>\n                <button type=\"button\" className=\"btn p-0 border-0 me-2\" onClick={rightsHandleModalShow(asset)}>\n                    {asset.ugcRights == null || asset.ugcRights.status == 4 ? <span className=\"svg-icon svg-icon-6 me-0 text-gray-800\">\n                        <SVG src={baseUrl('media/icons/svg-icons/get-rights.svg')} height={16} width={16} />\n                    </span> : asset.ugcRights.status == 2 ? <span className=\"svg-icon svg-icon-6 me-0 text-success\">\n                        <SVG src={baseUrl('media/icons/svg-icons/rights-approved-fill.svg')} height={16} width={16} />\n                    </span> : asset.ugcRights.status == 1 ? <span className=\"svg-icon svg-icon-6 me-0 text-warning\">\n                        <SVG src={baseUrl('media/icons/svg-icons/rights-pending-fill.svg')} height={16} width={16} />\n                    </span> : asset.ugcRights.status == 3 ? <span className=\"svg-icon svg-icon-6 me-0 text-danger\">\n                        <SVG src={baseUrl('media/icons/svg-icons/rights-rejected-fill.svg')} height={16} width={16} />\n                    </span> : null}\n                </button>\n            </OverlayTrigger> : null}\n            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{asset.status == 2 ? 'Show' : 'Hide'}</Tooltip>}>\n                <button type=\"button\" className=\"btn p-0 border-0 me-2 d-flex\" onClick={() => postStatusUpdate(asset)}>\n                    <i className={`icon-5 me-0 ${asset.status == 2 ? 'ri-eye-off-line' : 'ri-eye-line'}`}></i>\n                </button>\n            </OverlayTrigger>\n            {asset.duplicate && asset.duplicate == 1 ? <OverlayTrigger placement=\"top\" overlay={<Tooltip>Duplicate Asset</Tooltip>}>\n                <button type=\"button\" className=\"btn p-0 border-0 me-2 d-flex position-relative\">\n                    <i className={`icon-6 me-0 ri-chat-2-line text-gray-600`}></i>\n                    <i className={`icon-6 me-0 ri-image-line start-0 top-0 position-absolute bg-white z-index-1`} style={{ marginLeft: 3, marginTop: 3 }}></i>\n                </button>\n            </OverlayTrigger> : null}\n\n\n            {asset.networkId == 18 && imageError && asset.is_carausel == 0 ? <OverlayTrigger placement=\"top\" overlay={<Tooltip>Refresh</Tooltip>}>\n                <button type=\"button\" className=\"btn p-0 border-0 me-2 d-flex\" id={`refresh_${asset.postId}`} onClick={() => postRefresh(asset)}>\n                    <i className={`icon-5 me-0 ri-refresh-line`}></i>\n                </button>\n            </OverlayTrigger> : null}\n        </div>\n    }\n}\n"],"names":["MediaOptions","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","checkImage","url","img","Image","src","onload","setState","imageError","onerror","state","_createClass","key","value","this","asset","postFile","nextProps","_this$props","postPinToTop","rightsHandleModalShow","onClickToSingleCheck","updateIndex","postStatusUpdate","postRefresh","_jsxs","className","children","_jsx","type","name","checked","isChecked","onChange","id","OverlayTrigger","placement","overlay","Tooltip","pin","onClick","concat","Feed","Object","keys","length","networkId","filterId","ugcstatus","ugcRights","status","SVG","baseUrl","height","width","duplicate","style","marginLeft","marginTop","is_carausel","postId","Component"],"sourceRoot":""}