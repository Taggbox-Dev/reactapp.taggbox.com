{"version":3,"file":"static/js/8063.be759641.chunk.js","mappings":"+VAWMA,EAAYC,EAAAA,MAAW,kBAAM,+BAAN,IACvBC,EAAiBD,EAAAA,MAAW,kBAAM,+BAAN,IAC5BE,EAAWF,EAAAA,MAAW,kBAAM,+BAAN,IACtBG,EAAmBH,EAAAA,MAAW,kBAAM,+BAAN,IAC9BI,EAAeJ,EAAAA,MAAW,kBAAM,+BAAN,IAC1BK,EAAaL,EAAAA,MAAW,kBAAM,+BAAN,IAGxBM,EAAoBN,EAAAA,MAAW,kBAAM,+BAAN,IAI/BO,EAAgB,SAACC,GACnB,IAAIC,EAAiB,CAAC,EAKtB,OAJID,GAAcE,OAAOF,GAAYG,OAAS,GAC1CD,OAAOF,GAAYI,MAAM,KAAKC,KAAI,SAACC,GAC/BL,EAAeK,IAAQ,CAC1B,IACEL,CACV,EACKM,EAAa,SAACC,GAChB,IAAIP,EAAiB,CAAC,EAatB,OAZIO,GAAQN,OAAOM,GAAML,OAAS,IAC1BD,OAAOM,GAAMC,SAAS,OACtBR,EAAe,QAAS,EAEnBC,OAAOM,GAAMC,SAAS,SAC3BR,EAAe,QAAS,GAExBC,OAAOM,GAAMC,SAAS,OACtBR,EAAe,IAAO,IAIvBA,CACV,EAEKS,EAAqB,SAACC,EAAYC,EAAYC,EAAYC,EAAQC,EAAMC,GAC1E,IAAIf,EAAiB,CAAC,EAmBtB,OAlBIU,IACAV,EAAc,YAAiB,GAE/BW,IACAX,EAAc,YAAiB,GAE/BY,IACAZ,EAAc,YAAiB,GAE/Ba,IACAb,EAAc,QAAa,GAE3Bc,IACAd,EAAc,MAAW,GAEzBe,IACAf,EAAc,WAAgB,GAE3BA,CACV,EAEKgB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAQ,IAAD,mBACf,cAAMA,IAiCVC,QAAU,EAlCS,EA+CnBC,cAAgB,WACZ,IAAIC,GAAI,WACRC,EAAAA,EAAAA,IAAe,CAAEC,aAAc,IAAKC,MAAK,SAACC,GACtCJ,EAAKK,SAAS,CAAEC,YAAaF,EAAYjB,KAAKoB,UACjD,GACJ,EApDkB,EAsDnBC,gBAAkB,SAACrB,GAAD,OAAU,SAAAsB,GACxBC,IAAAA,KAAU,CACNC,MAAO,gBACPC,KAAM,0BACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,oBACpBZ,MAAK,SAACa,GACL,GAAIA,EAAOC,YAAa,CACpB,IAAIjB,GAAI,WACRkB,EAAAA,EAAAA,IAAqB/B,GAAMgB,MAAK,SAACI,GAC7BP,EAAKD,gBACLoB,EAAAA,GAAAA,QAAc,gCAEjB,GAGJ,CACJ,GAEJ,CApBiB,EAtDC,EAiFnBC,YAAc,SAACC,GAAD,OAAW,SAAAZ,GACrB,IAAMa,EAAa,EAAKC,MAAlBD,SACNA,EAASE,OAAOH,EAAO,GACvB,EAAKhB,SAAS,CAAEiB,SAAAA,GACnB,CAJa,EAjFK,EAuFnBG,eAAiB,SAACC,GAAD,OAAe,SAAAjB,GAC5B,EAAKJ,SAAS,CAAEqB,UAAAA,GACnB,CAFgB,EAvFE,EA0FnBC,YAAc,SAACC,GAAD,OAAe,SAAAnB,GACzB,IAAQoB,EAAiB,EAAKN,MAAtBM,aACJA,EAAaD,WACNC,EAAaD,GACpB,EAAKvB,SAAS,CAAEwB,aAAcA,MAG9BA,EAAaD,IAAa,EAC1B,EAAKvB,SAAS,CAAEwB,aAAAA,IAGvB,CAXa,EA1FK,EAsGnBC,gBAAkB,SAAArB,GAAK,OAAI,EAAKJ,SAAS,CACrC0B,kBAAkB,GADC,EAtGJ,EAyGnBC,qBAAuB,SAAAvB,GACnB,EAAKJ,SAAS,CACV0B,iBAAkBtB,GAEzB,EA7GkB,EA8GnBwB,aAAe,SAACC,GACZ,IAAQC,EAAiB,EAAKZ,MAAtBY,aAER,OAAQD,GACJ,IAAK,SAYL,QACI,OAAO,SAAChE,EAAD,CAAWiB,KAAMgD,IAX5B,IAAK,cACD,OAAO,SAAC/D,EAAD,CAAgBe,KAAMgD,IACjC,IAAK,QACD,OAAO,SAAC9D,EAAD,CAAUc,KAAMgD,IAC3B,IAAK,gBACD,OAAO,SAAC7D,EAAD,CAAkBa,KAAMgD,IACnC,IAAK,YACD,OAAO,SAAC5D,EAAD,CAAcY,KAAMgD,IAC/B,IAAK,UACD,OAAO,SAAC3D,EAAD,CAAYW,KAAMgD,IAKpC,EAlIkB,EAqInBC,iBAAmB,SAACC,GAAD,OAAc,SAAA5B,GAAK,OAAI,EAAKJ,SAAS,CAAEiC,iBAAkBD,GAAtC,CAAnB,EArIA,EAuInBE,YAAc,SAACC,GAAD,OAAW,SAAA/B,GACrB,IAAQgC,EAAc,EAAKlB,MAAnBkB,UACJA,EAAUD,WACHC,EAAUD,GACjB,EAAKnC,SAAS,CAAEoC,UAAWA,MAG3BA,EAAUD,IAAS,EACnB,EAAKnC,SAAS,CAAEoC,UAAAA,IAEvB,CAVa,EAvIK,EAkJnBC,qBAAuB,SAAAjC,GACnB,IAAQgC,EAAc,EAAKlB,MAAnBkB,UACJA,GAAaE,OAAOC,KAAKH,GAAW3D,QAAU,EAC9C,EAAKuB,SAAS,CAAEoC,UAAW,CAAC,IAG5B,EAAKpC,SAAS,CACVoC,UAAW,CACP,GAAK,EAAM,GAAK,EAAM,GAAK,IAI1C,EA9JkB,EAgKnBI,kBAAoB,SAACL,GAAD,OAAW,SAAA/B,GAC3B,IAAQqC,EAAuB,EAAKvB,MAA5BuB,mBACJA,EAAmBN,WACZM,EAAmBN,GAC1B,EAAKnC,SAAS,CAAEyC,mBAAoBA,MAGpCA,EAAmBN,IAAS,EAC5B,EAAKnC,SAAS,CAAEyC,mBAAAA,IAEvB,CAVmB,EAhKD,EA2KnBC,sBAAwB,SAAAtC,GACpB,MAAyC,EAAKc,MAAtCuB,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,SAC5B,GAAIF,GAAsBH,OAAOC,KAAKE,GAAoBhE,QAAUkE,EAASlE,OACzE,EAAKuB,SAAS,CAAEyC,mBAAoB,CAAC,QAEpC,CACD,IAAIG,EAAc,CAAC,EACnBD,EAAShE,KAAI,SAACC,GACVgE,EAAYhE,EAAKiE,SAAU,CAC9B,IACD,EAAK7C,SAAS,CACVyC,mBAAoBG,GAE3B,CACJ,EAzLkB,EA0LnBE,yBAA2B,SAAA1C,GACvB,IAAI2C,EAAa3C,EAAM4C,OAAOb,MAC1B,EAAK1C,SAASwD,aAAa,EAAKxD,SACpC,EAAKA,QAAUyD,YAAW,WACtB,EAAKlD,SAAS,CAAEmD,qBAAuBJ,EAAcvE,OAAOuE,GAAYK,cAAgBL,IAAc,kBAAM,EAAKM,4BAAX,GACzG,GAAE,IACN,EAhMkB,EAiMnBA,2BAA6B,WACzB,IAAQV,EAAa,EAAKnD,MAAlBmD,SACAQ,EAAyB,EAAKjC,MAA9BiC,qBACFG,EAAaX,EAASY,QAAO,SAAC3E,GAAD,OAAUJ,OAAOI,EAAK4E,MAAMJ,cAAcrE,SAASoE,EAAnD,IACnC,EAAKnD,SAAS,CAAE2C,SAAUW,GAC7B,EAtMkB,EAuMnBG,cAAgB,SAACtB,GAAD,OAAW,SAAA/B,GACvB,IAAQsD,EAAgB,EAAKxC,MAArBwC,YACJA,EAAYvB,WACLuB,EAAYvB,GACnB,EAAKnC,SAAS,CAAE0D,YAAaA,MAG7BA,EAAYvB,IAAS,EACrB,EAAKnC,SAAS,CAAE0D,YAAAA,IAEvB,CAVe,EAvMG,EAmNnBC,uBAAyB,SAAAvD,GACrB,IAAQsD,EAAgB,EAAKxC,MAArBwC,YACJA,GAAepB,OAAOC,KAAKmB,GAAajF,QAAU,EAClD,EAAKuB,SAAS,CAAE0D,YAAa,CAAC,IAG9B,EAAK1D,SAAS,CACV0D,YAAa,CACT,GAAK,EAAM,OAAO,EAAM,OAAO,IAI9C,EA/NkB,EAiOnBE,eAAiB,SAACzB,GAAD,OAAW,SAAA/B,GACxB,IAAQyD,EAAoB,EAAK3C,MAAzB2C,gBACJA,EAAgB1B,WACT0B,EAAgB1B,GACvB,EAAKnC,SAAS,CAAE6D,gBAAiBA,MAGjCA,EAAgB1B,IAAS,EACzB,EAAKnC,SAAS,CAAE6D,gBAAAA,IAEvB,CAVgB,EAjOE,EA4OnBC,iBAAmB,SAAA1D,GACf,MAAyC,EAAKc,MAAtC2C,EAAR,EAAQA,gBAAiBE,EAAzB,EAAyBA,YACzB,GAAIF,GAAmBvB,OAAOC,KAAKsB,GAAiBpF,QAAUsF,EAAYtF,OACtE,EAAKuB,SAAS,CAAE6D,gBAAiB,CAAC,QAEjC,CACD,IAAIjB,EAAc,CAAC,EACnBmB,EAAYpF,KAAI,SAACC,GACbgE,EAAYhE,EAAKoF,KAAM,CAC1B,IACD,EAAKhE,SAAS,CACV6D,gBAAiBjB,GAExB,CACJ,EA1PkB,EA2PnBqB,eAAiB,SAAA7D,GACb,IAAI2C,EAAa3C,EAAM4C,OAAOb,MAC1B,EAAK1C,SAASwD,aAAa,EAAKxD,SACpC,EAAKA,QAAUyD,YAAW,WACtB,EAAKlD,SAAS,CAAEkE,WAAanB,EAAcvE,OAAOuE,GAAYK,cAAgBL,IAAc,kBAAM,EAAKoB,kBAAX,GAC/F,GAAE,IACN,EAjQkB,EAkQnBA,iBAAmB,WACf,IAAQC,EAAa,EAAK5E,MAAlB4E,SACAF,EAAe,EAAKhD,MAApBgD,WACFZ,EAAac,EAASb,QAAO,SAAC3E,GAAD,OAAUJ,OAAOI,EAAK4E,MAAMJ,cAAcrE,SAASmF,EAAnD,IACnC,EAAKlE,SAAS,CAAE+D,YAAaT,GAChC,EAvQkB,EAyQnBe,qBAAuB,WACnB,IAAI1E,GAAI,WACR2E,EAAAA,EAAAA,MAAoBxE,MAAK,SAACI,GACtB,IAAQ4B,EAAiB5B,EAASpB,KAA1BgD,aACJA,GAAgBQ,OAAOC,KAAKT,GAAcrD,OAAS,GACnDkB,EAAKK,SAAS,CAAEuE,eAAgBzC,EAAa5C,WAAYsF,uBAAwB1C,EAAa5C,YAErG,IAAEuF,OAAM,SAACC,GAET,GAEJ,EApRkB,EAsRnBC,kBAAoB,SAACxC,GAAD,OAAW,SAAA/B,GAC3B,IAAQwE,EAAuB,EAAK1D,MAA5B0D,mBACJA,EAAmBzC,WACZyC,EAAmBzC,GAC1B,EAAKnC,SAAS,CAAE4E,mBAAoBA,MAGpCA,EAAmBzC,IAAS,EAC5B,EAAKnC,SAAS,CAAE4E,mBAAAA,IAEvB,CAVmB,EAtRD,EAiSnBC,sBAAwB,SAAAzE,GACpB,MAA+C,EAAKc,MAA5C0D,EAAR,EAAQA,mBAAoBL,EAA5B,EAA4BA,eAC5B,GAAIK,GAAsBtC,OAAOC,KAAKqC,GAAoBnG,QAAU8F,EAAe9F,OAC/E,EAAKuB,SAAS,CAAE4E,mBAAoB,CAAC,QAEpC,CACD,IAAIrG,EAAiB,CAAC,EACtBgG,EAAe5F,KAAI,SAACC,GAChBL,EAAeK,EAAKoF,KAAM,CAC7B,IACD,EAAKhE,SAAS,CACV4E,mBAAoBrG,GAE3B,CACJ,EA/SkB,EAgTnBuG,yBAA2B,SAAA1E,GACvB,IAAI2C,EAAa3C,EAAM4C,OAAOb,MAC1B,EAAK1C,SAASwD,aAAa,EAAKxD,SACpC,EAAKA,QAAUyD,YAAW,WACtB,EAAKlD,SAAS,CAAE+E,iBAAmBhC,EAAcvE,OAAOuE,GAAYK,cAAgBL,IAAc,kBAAM,EAAKiC,4BAAX,GACrG,GAAE,IACN,EAtTkB,EAuTnBA,2BAA6B,WACzB,MAAqD,EAAK9D,MAAlD6D,EAAR,EAAQA,iBACFzB,EADN,EAA0BkB,uBACgBjB,QAAO,SAAC3E,GAAD,OAAUJ,OAAOI,EAAK4E,MAAMJ,cAAcrE,SAASgG,EAAnD,IACjD,EAAK/E,SAAS,CAAEuE,eAAgBjB,GACnC,EA3TkB,EA4TnB2B,aAAe,SAAA7E,GACX,EAAKJ,SAAS,CAAEkF,gBAAiB9E,EAAM4C,OAAOb,OACjD,EA9TkB,EA+TnBgD,iBAAmB,SAAA/E,GACf,MAAgK,EAAKc,MAA7J8C,EAAR,EAAQA,GAAI/B,EAAZ,EAAYA,iBAAkB2C,EAA9B,EAA8BA,mBAAoBnC,EAAlD,EAAkDA,mBAAoBoB,EAAtE,EAAsEA,gBAAiBxC,EAAvF,EAAuFA,UAA6Be,GAApH,EAAkGV,iBAAlG,EAAoHU,WAAWsB,EAA/H,EAA+HA,YAAawB,EAA5I,EAA4IA,gBACxIvF,GAAI,UAEJT,EAAa,GACb8C,EAAW,GACX5C,EAAS,GACTC,EAAO,GACP+F,EAAU,GACVC,EAAa,GA+BjB,GA7BIjD,GAAaE,OAAOC,KAAKH,GAAW3D,OAAS,GAC7C6D,OAAOC,KAAKH,GAAWzD,KAAI,SAACC,GACxByG,EAAWC,KAAK1G,EACnB,IAEDqD,GAAoBK,OAAOC,KAAKN,GAAkBxD,OAAS,GAAKwD,EAAiB+B,KACjFhC,EAAWC,EAAiB+B,IAG5BH,GAAmBvB,OAAOC,KAAKsB,GAAiBpF,OAAS,GACzD6D,OAAOC,KAAKsB,GAAiBlF,KAAI,SAACC,GAC9BwG,EAAQE,KAAK1G,EAChB,IAEDgG,GAAsBtC,OAAOC,KAAKqC,GAAoBnG,OAAS,GAC/D6D,OAAOC,KAAKqC,GAAoBjG,KAAI,SAACC,GACjCM,EAAWoG,KAAK1G,EACnB,IAED6D,GAAsBH,OAAOC,KAAKE,GAAoBhE,OAAS,GAC/D6D,OAAOC,KAAKE,GAAoB9D,KAAI,SAACC,GACjCQ,EAAOkG,KAAK1G,EACf,IAED8E,GAAepB,OAAOC,KAAKmB,GAAajF,OAAS,GACjD6D,OAAOC,KAAKmB,GAAa/E,KAAI,SAACC,GAC1BS,EAAKiG,KAAK1G,EACb,IAEAqD,GAAoBK,OAAOC,KAAKN,GAAkBxD,OAAS,GAAKwD,EAAiB+B,KAAQ9E,EAAWT,OAAS,GAAKW,EAAOX,OAAS,GAAKY,EAAKZ,OAAS,GAAK4G,EAAW5G,OAAS,GAAK2G,EAAQ3G,OAAS,GAAI,CACzM,IAAMK,EAAO,CACTkF,GAAIA,EACJR,KAAM0B,EACN,SAAYlD,EACZ,WAAc9C,EAAWqG,KAAK,KAC9B,OAAUnG,EAAOmG,KAAK,KACtB,YAAelG,EAAKkG,KAAK,KACzB,KAAQ,GACR,WAAcF,EAAWE,KAAK,KAC9B,aAAgB,EAChB,cAAiB,GACjB,YAAe,GACf,SAAY,GACZH,QAASA,EAAQG,KAAK,KACtBC,WAAYhH,OAAO6C,GAAWoE,gBAGlCC,EAAAA,EAAAA,IAAqB5G,GAAMgB,MAAK,SAACI,GAC7B,MAAoDA,EAASpB,KAArD6G,EAAR,EAAQA,OAAuBC,GAA/B,EAAgBC,cAAhB,EAA+BD,kBACjB,WAAVD,GACA7E,EAAAA,GAAAA,QAAc,wCACdnB,EAAKK,SAAS,CAAE8B,aAAc5B,EAASpB,OAAQ,kBAAMa,EAAKH,MAAME,eAAjB,KAE9CoB,EAAAA,GAAAA,MAAY8E,EAGpB,IAAEnB,OAAM,SAACC,GAET,GACJ,CACJ,EAtYkB,EAuYnBoB,cAAgB,SAAA1F,GACZ,EAAKJ,SAAS,CACV0B,iBAAkB,SAClBF,aAAc,CAAC,EACfuE,gBAAiB,GACjBC,YAAa,CAAC,EACdtC,YAAa,CAAC,EACdzC,SAAU,GACVmB,UAAW,CAAC,EACZH,iBAAkB,KAClBZ,UAAW,KACXwC,gBAAiB,CAAC,EAClBpB,mBAAoB,CAAC,EACrByB,WAAY,GACZf,qBAAsB,GACtByB,mBAAoB,CAAC,EACrBG,iBAAkB,GAClBkB,aAAa,EACbnE,aAAc,KACdoE,aAAc,KACdhB,gBAAiB,IAGxB,EA5ZG,IAAQtG,EAASY,EAATZ,KAFO,OAGfuH,QAAQC,IAAI,OAAQxH,GACpB,EAAKsC,MAAQ,CACTQ,iBAAkB,SAClBF,aAAcxC,EAAmBJ,EAAKyH,YAAazH,EAAKM,WAAYN,EAAKQ,OAAQR,EAAKwG,QAASxG,EAAKS,KAAMT,EAAK0H,YAC/GP,gBAAiB,GACjBC,YAAa,CAAC,EACdtC,YAAa7E,EAAWD,EAAKyH,aAC7BpF,SAAU5C,EAAcO,EAAKS,MAC7B+C,UAAW,CAAC,EACZH,iBAAkB,CAAE+B,GAAIpF,EAAKoD,UAC7BX,UAAW7C,OAAOI,EAAK4G,YAAYpC,cACnCW,YAAa,GACbpB,SAAU,GACVkB,gBAAiBxF,EAAcO,EAAKwG,SACpC3C,mBAAoBpE,EAAcO,EAAKQ,QACvC8E,WAAY,GACZf,qBAAsB,GACtBoB,eAAgB,GAChBC,uBAAwB,GACxBI,mBAAoBvG,EAAcO,EAAKM,YACvC6F,iBAAkB,GAClBkB,aAAa,EACbhG,YAAa,GACb6B,aAAclD,EACdsH,aAAc,KACdK,iBAAkB,KAClBrB,gBAAiBtG,EAAK4H,SAAW5H,EAAK4H,QAAQhD,KAAO5E,EAAK4H,QAAQhD,KAAO,aACzEQ,GAAIpF,EAAKoF,IA9BE,CAgClB,CA0YA,OA1YA,0CAGD,WACIyC,KAAKpC,sBACR,kCACD,WACI,MAA+BoC,KAAKjH,MAA5B4E,EAAR,EAAQA,SAAUzB,EAAlB,EAAkBA,SAClB8D,KAAKzG,SAAS,CAAE+D,YAAaK,EAAUzB,SAAUA,EAAS+D,QAC1DD,KAAK/G,eACR,0CACD,SAA0BiH,GACtB,IAAQvC,EAAuBuC,EAAvBvC,SAAUzB,EAAagE,EAAbhE,SAClB8D,KAAKzG,SAAS,CAAE+D,YAAaK,EAAUzB,SAAUA,EAAS+D,OAC7D,uBAkXD,WACI,MAAoFD,KAAKvF,MAAjFQ,EAAR,EAAQA,iBAA2DwE,GAAnE,EAA0B1E,aAA1B,EAAwCyE,YAAxC,EAAqDnE,aAArD,EAAmEoE,cACnE,EAA8BO,KAAKjH,MAAjBoH,GAAlB,EAAQxC,SAAR,EAAkBwC,SAClB,OAAO,+BACH,SAACxI,EAAD,CAAmBuD,qBAAsB8E,KAAK9E,qBAAsBkF,kBAAmBnF,EAAkBJ,YAAamF,KAAKnF,YAAaJ,MAAOuF,KAAKvF,MAAOa,iBAAkB0E,KAAK1E,iBAAkBM,qBAAsBoE,KAAKpE,qBAAsBH,YAAauE,KAAKvE,YAAanB,YAAa0F,KAAK1F,YAAa0C,cAAegD,KAAKhD,cAAejB,kBAAmBiE,KAAKjE,kBAAmBmB,uBAAwB8C,KAAK9C,uBAAwBC,eAAgB6C,KAAK7C,eAAgBE,iBAAkB2C,KAAK3C,iBAAkBG,eAAgBwC,KAAKxC,eAAgBa,yBAA0B2B,KAAK3B,yBACpkBD,sBAAuB4B,KAAK5B,sBAC5BF,kBAAmB8B,KAAK9B,kBAAmBvD,eAAgBqF,KAAKrF,eAAgB0B,yBAA0B2D,KAAK3D,yBAA0BJ,sBAAuB+D,KAAK/D,sBAAuBvC,gBAAiBsG,KAAKtG,gBAAiB2F,cAAeW,KAAKX,cAAeI,aAAcA,EAAcU,QAASA,EAAS3B,aAAcwB,KAAKxB,aAAcE,iBAAkBsB,KAAKtB,oBAIvX,OA3aC5F,CAAiBuH,EAAAA,WAqbvB,GAAeC,EAAAA,EAAAA,KARS,SAAC7F,GACrB,MAAO,CACHkD,SAAUlD,EAAMkD,SAASL,YACzBpB,SAAUzB,EAAMyB,SAASqE,WAGhC,GAED,CAAwCzH,GCxflC0H,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAIS,OAJTA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACF/F,MAAQ,CACJgG,OAAQ,MADJ,EAGRC,SAAW,SAAChF,EAAOvD,GAAR,OAAiB,SAAAwB,GACxB,IAAQ8G,EAAW,EAAKhG,MAAhBgG,OACR,EAAKlH,SAAS,CAAEkH,OAAQA,GAAU/E,EAAQ,KAAOA,IAAS,kBAAM,EAAK3C,MAAM4H,oBAAoBxI,EAArC,GAC7D,CAHU,IAiDV,OAjDU,8BAIX,WAAU,IAAD,OACL,EAA2B6H,KAAKjH,MAAxB0B,EAAR,EAAQA,MAAO0F,EAAf,EAAeA,QACIH,KAAKvF,MAAhBgG,OACR,OAAO,SAACG,EAAA,EAAD,CAAWC,iBAAiB,cAAcC,UAAU,cAApD,SACFrG,EAAMjB,YAAYxB,OAAS,GAAKyC,EAAMjB,YAAYtB,KAAI,SAACC,EAAM4I,GAC1D,OAAO,UAACH,EAAA,OAAD,CAAgBI,SAAUD,EAA1B,WACH,gBAAKD,UAAU,YAAf,UACI,SAACF,EAAA,SAAD,CAAkBE,UAAU,sBAA5B,UACI,iBAAKA,UAAU,0DAAf,WACI,iBAAMA,UAAU,qDAAhB,SAAsE3I,EAAK4E,QAC3E,iBAAK+D,UAAU,gDAAf,WACI,SAACG,EAAA,EAAD,CAAgBC,UAAU,MAAMC,SAAS,SAACC,EAAA,EAAD,CAAS7D,GAAG,mBAAZ,kBAAzC,UACI,mBAAQ8D,KAAK,SAASP,UAAU,gDAC5BQ,QAAS,EAAKZ,SAAL,gBAAuBK,GAAU5I,GAD9C,UAEI,iBAAM2I,UAAU,2BAAhB,UACI,iBAAKS,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,WACI,iBAAMC,KAAK,OAAOC,EAAE,mBACpB,iBAAMA,EAAE,8JAA8JD,KAAK,2BAK3L,SAACV,EAAA,EAAD,CAAgBC,UAAU,MAAMC,SAAS,SAACC,EAAA,EAAD,CAAS7D,GAAG,mBAAZ,oBAAzC,UACI,mBAAQ8D,KAAK,SAASP,UAAU,2CAC5BQ,QAAS,EAAKvI,MAAMW,gBAAgB,CAAE,GAAMvB,EAAKoF,GAAI,WAAcpF,EAAK0J,SAD5E,UAEI,iBAAMf,UAAU,2BAAhB,UACI,iBAAKS,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,WACI,iBAAMC,KAAK,OAAOC,EAAE,mBACpB,iBAAMA,EAAE,yGAAyGD,KAAK,mCAtBtHZ,IA+BhC,SAACH,EAAA,OAAD,CAAgBE,UAAU,WAA1B,UACI,SAACgB,GAAD,QAAc3B,QAASA,EAAShI,KAAMA,GAAU,EAAKY,YAIhE,KAGR,OArDCyH,CAAkBH,EAAAA,WAwDxB,G,mPClDM0B,EAAmB,SAAC3G,GACtB,OAAQA,GACJ,IAAK,SAYL,QACI,MAAM,OAXV,IAAK,cACD,MAAO,YACX,IAAK,QACD,MAAO,MACX,IAAK,gBACD,MAAO,cACX,IAAK,YACD,MAAO,UACX,IAAK,UACD,MAAO,QAIlB,EAEK4G,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYjJ,GAAQ,IAAD,yBACf,cAAMA,IAEV0B,MAAQ,CACJwH,WAAW,EAEXzI,YAAa,IANE,EAWnBP,cAAgB,WACZ,IAAIC,GAAI,WACRC,EAAAA,EAAAA,MAAiBE,MAAK,SAACC,GACnBJ,EAAKK,SAAS,CAAEC,YAAaF,EAAYjB,MAC5C,GACJ,EAhBkB,EAoBnB6J,kBAAoB,SAAAvI,GAAK,OAAI,EAAKZ,MAAMmC,qBAAqBvB,EAApC,EApBN,CAElB,CA2NA,OA3NA,yCAMD,WACIqG,KAAK/G,eACR,6BAOD,SAAakJ,GACTzC,QAAQC,IAAIwC,EACf,uBAID,WAAU,IAAD,OAEL,EAAuHnC,KAAKjH,MAApH8B,EAAR,EAAQA,YAAaJ,EAArB,EAAqBA,MAAO2F,EAA5B,EAA4BA,kBAAoCf,GAAhE,EAA+C3F,gBAA/C,EAAgE2F,eAAsCb,GAAtG,EAA+EiB,aAA/E,EAA6FU,QAA7F,EAAsG3B,cAEtG,OADAkB,QAAQC,IAAI,aAAcK,KAAKjH,QACxB,gBAAK+H,UAAU,iBAAf,UACH,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,mDAAf,UACI,eAAIA,UAAU,uBAAd,2BAGJ,UAAC,cAAD,CAAevD,GAAG,oBAAoBsD,iBAAiB,sBAAvD,WACI,UAAC,IAAD,CAAKuB,QAAQ,MAAMtB,UAAU,qBAA7B,WACI,SAAC,SAAD,CAAUA,UAAU,GAApB,UACI,SAAC,SAAD,CAAUA,UAAU,YAAYE,SAAS,sBAAzC,8BAEJ,SAAC,SAAD,CAAUF,UAAU,GAApB,UACI,SAAC,SAAD,CAAUA,UAAU,OAAOE,SAAS,0BAApC,4BAGR,UAAC,YAAD,YACI,UAAC,SAAD,CAAUA,SAAS,sBAAnB,WACI,kBAAOF,UAAU,qBAAjB,0BACA,kBAAOO,KAAK,OAAOP,UAAU,oCAAoCuB,YAAY,8BAA8B3G,MAAOjB,EAAMgE,gBAAiBiC,SAAUlC,IAE/I/D,EAAMM,cAAgBc,OAAOC,KAAKrB,EAAMM,cAAc7C,KAAI,SAAC4C,EAAWwH,GAAZ,OAA4B,SAAC,KAAD,gBAASxH,UAAWA,GAAe,EAAK/B,OAAxC,IAA+CuJ,YAAaA,EAAaC,OAAQ1G,OAAOC,KAAKrB,EAAMM,cAAcc,OAAOC,KAAKrB,EAAMM,cAAc/C,OAAS,KAAtL,KAG9D,UAAC,IAAD,CAAW6I,iBAAkB,IAA7B,WACI,UAAC,SAAD,CAAgBG,SAAS,IAAIF,UAAU,OAAvC,WACI,UAAC,WAAD,CAAkBA,UAAU,kBAA5B,WACI,iBAAMA,UAAU,oCAAhB,UACI,gBAAKS,MAAM,6BAA6BC,QAAQ,YAAhD,UAA4D,iBAAMI,EAAE,4CAA4CD,KAAK,sBAEzH,iBAAMb,UAAU,iCAAhB,+BAEJ,UAAC,SAAD,CAAgBA,UAAU,wBAA1B,WACI,iBAAKA,UAAS,sEAAiEjF,OAAOC,KAAKrB,EAAMM,cAAczC,SAAS,cAAzC,eAA4EgJ,QAASzG,EAAY,cAAhL,WACI,gBAAKiG,UAAU,iCAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAMA,UAAU,yCAAhB,UACI,iBAAKS,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,WAAmF,iBAAMC,KAAK,OAAOC,EAAE,mBAAkB,iBAAMA,EAAE,wJAAwJD,KAAK,2BAI1S,iBAAKb,UAAU,GAAf,WACI,cAAGA,UAAS,sCAAZ,yBACA,iBAAMA,UAAU,sBAAhB,oDAGR,iBAAKA,UAAS,sEAAiEjF,OAAOC,KAAKrB,EAAMM,cAAczC,SAAS,UAAzC,eAAwEgJ,QAASzG,EAAY,UAA5K,WACI,gBAAKiG,UAAU,iCAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAMA,UAAU,yCAAhB,UACI,iBAAKS,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAvE,WACI,iBAAMjE,GAAG,SAAS,YAAU,SAASqE,EAAE,gBAAgBD,KAAK,UAC5D,iBAAMpE,GAAG,SAAS,YAAU,SAASqE,EAAE,8xBAA8xBY,UAAU,yBAAyBb,KAAK,2BAK73B,iBAAKb,UAAU,GAAf,WACI,cAAGA,UAAS,sCAAZ,sBACA,iBAAMA,UAAU,sBAAhB,gDAGR,iBAAKA,UAAS,sEAAiEjF,OAAOC,KAAKrB,EAAMM,cAAczC,SAAS,cAAzC,eAA4EgJ,QAASzG,EAAY,cAAhL,WACI,gBAAKiG,UAAU,iCAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAMA,UAAU,yCAAhB,UACI,iBAAKS,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKF,QAAQ,YAAvE,WACI,iBAAMG,KAAK,OAAOC,EAAE,mBACpB,0BAAG,iBAAMrE,GAAG,YAAY,YAAU,YAAYqE,EAAE,yEAAyED,KAAK,aAC1H,iBAAMpE,GAAG,YAAY,YAAU,YAAYqE,EAAE,iCAAiCD,KAAK,8BAKvG,iBAAKb,UAAU,GAAf,WACI,cAAGA,UAAS,sCAAZ,0BACA,iBAAMA,UAAU,sBAAhB,+CAGR,iBAAKA,UAAS,sEAAiEjF,OAAOC,KAAKrB,EAAMM,cAAczC,SAAS,cAAzC,eAA4EgJ,QAASzG,EAAY,cAAhL,WACI,gBAAKiG,UAAU,iCAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAMA,UAAU,yCAAhB,UACI,iBAAKS,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,WACI,iBAAMC,KAAK,OAAOC,EAAE,mBACpB,iBAAMA,EAAE,6OAA6OD,KAAK,2BAK1Q,iBAAKb,UAAU,GAAf,WACI,cAAGA,UAAS,sCAAZ,0BACA,iBAAMA,UAAU,sBAAhB,6CAGR,iBAAKA,UAAS,sEAAiEjF,OAAOC,KAAKrB,EAAMM,cAAczC,SAAS,QAAzC,eAAsEgJ,QAASzG,EAAY,QAA1K,WACI,gBAAKiG,UAAU,iCAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAMA,UAAU,yCAAhB,UACI,iBAAKS,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,WACI,iBAAMC,KAAK,OAAOC,EAAE,mBACpB,iBAAMA,EAAE,8NAA8ND,KAAK,2BAK3P,iBAAKb,UAAU,GAAf,WACI,cAAGA,UAAS,sCAAZ,kBACA,iBAAMA,UAAU,sBAAhB,wDAGR,iBAAKA,UAAS,sEAAiEjF,OAAOC,KAAKrB,EAAMM,cAAczC,SAAS,aAAzC,eAA2EgJ,QAASzG,EAAY,aAA/K,WACI,gBAAKiG,UAAU,iCAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAMA,UAAU,yCAAhB,UACI,iBAAKS,MAAM,6BAA6BE,MAAM,SAASC,OAAO,SAASF,QAAQ,oBAA/E,WACI,iBAAMG,KAAK,OAAOC,EAAE,mBACpB,iBAAMrE,GAAG,SAAS,YAAU,SAASqE,EAAE,m4BAAm4BY,UAAU,qBAAqBb,KAAK,2BAK99B,iBAAKb,UAAU,GAAf,WACI,cAAGA,UAAS,sCAAZ,yBACA,iBAAMA,UAAU,sBAAhB,8DAKhB,SAAC,KAAD,UAAed,KAAKjH,SACpB,kBAAO+H,UAAU,qBAAjB,8BACA,UAAC,SAAD,CAAgBE,SAAS,IAAIF,UAAU,OAAvC,WACI,SAAC,WAAD,CAAkBA,UAAU,QAA5B,UACI,iBAAMA,UAAU,iBAAhB,SAAkCiB,EAAiB3B,QAEvD,SAAC,SAAD,CAAgBU,UAAU,wBAA1B,UACI,UAAC,IAAD,CAAmBO,KAAK,QAAQP,UAAU,oBAAoB/D,KAAK,WAAW0F,aAAc,SAAU/B,SAAU,SAAAgC,GAAC,OAAI,EAAKR,kBAAkBQ,EAA3B,EAAjH,WACI,SAAC,IAAD,CAAc5B,UAAU,8DAA8DsB,QAAQ,kBAAkB7E,GAAG,SAAS7B,MAAO,SAAnI,UACI,gBAAKoF,UAAU,gBAAf,UACI,gBAAKA,UAAU,wCAAf,UACI,gBAAKA,UAAU,YAAY6B,KAAKC,EAAAA,EAAAA,GAAQ,kCAAmCC,IAAI,OAAOnB,OAAQ,GAAID,MAAO,aAIrH,SAAC,IAAD,CAAcX,UAAU,8DAA8DsB,QAAQ,kBAAkB7E,GAAG,cAAc7B,MAAO,cAAxI,UACI,gBAAKoF,UAAU,gBAAf,UACI,gBAAKA,UAAU,wCAAf,UACI,gBAAKA,UAAU,YAAY6B,KAAKC,EAAAA,EAAAA,GAAQ,uCAAwCC,IAAI,YAAYnB,OAAQ,GAAID,MAAO,YAI/H,SAAC,IAAD,CAAcX,UAAU,8DAA8DsB,QAAQ,kBAAkB7E,GAAG,QAAQ7B,MAAO,QAAlI,UACI,gBAAKoF,UAAU,gBAAf,UACI,gBAAKA,UAAU,wCAAf,UACI,gBAAKA,UAAU,YAAY6B,KAAKC,EAAAA,EAAAA,GAAQ,iCAAkCC,IAAI,MAAMnB,OAAQ,GAAID,MAAO,YAInH,SAAC,IAAD,CAAcX,UAAU,8DAA8DsB,QAAQ,kBAAkB7E,GAAG,gBAAgB7B,MAAO,gBAA1I,UACI,gBAAKoF,UAAU,gBAAf,UACI,gBAAKA,UAAU,wCAAf,UACI,gBAAKA,UAAU,YAAY6B,KAAKC,EAAAA,EAAAA,GAAQ,yCAA0CC,IAAI,MAAMnB,OAAQ,GAAID,MAAO,YAI3H,SAAC,IAAD,CAAcX,UAAU,8DAA8DsB,QAAQ,kBAAkB7E,GAAG,YAAY7B,MAAO,YAAtI,UACI,gBAAKoF,UAAU,gBAAf,UACI,gBAAKA,UAAU,wCAAf,UACI,gBAAKA,UAAU,YAAY6B,KAAKC,EAAAA,EAAAA,GAAQ,qCAAsCC,IAAI,MAAMnB,OAAQ,GAAID,MAAO,aAIvH,SAAC,IAAD,CAAcX,UAAU,8DAA8DsB,QAAQ,kBAAkB7E,GAAG,UAAU7B,MAAO,UAApI,UACI,gBAAKoF,UAAU,gBAAf,UACI,gBAAKA,UAAU,wCAAf,UACI,gBAAKA,UAAU,YAAY6B,KAAKC,EAAAA,EAAAA,GAAQ,mCAAoCC,IAAI,QAAQnB,OAAQ,GAAID,MAAO,uBAQvI,gBAAKX,UAAU,qDAAf,UACI,mBAAQO,KAAK,SAASP,UAAU,kFAAkFQ,QAASjC,EAA3H,iCAGR,SAAC,SAAD,CAAU2B,SAAS,0BAAnB,UACI,SAAC,KAAD,UAAehB,KAAKjH,oBAO3C,OA9NCiJ,CAAsB3B,EAAAA,WAiO5B,W","sources":["Layouts/Main/WebEmbed/EditWebEmbed.js","Layouts/Main/WebEmbed/Components/EmbedList/index.js","Layouts/Main/WebEmbed/Components/WebEmbedAside.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Tab } from 'react-bootstrap';\nimport { getCollectionList } from '../../../Services/Actions/homeActions'\nimport { updatePublishRequest, getPublishList, publishDeleteRequest } from '../../../Services/Actions/publishActions'\n\nimport { capitalizeFirstLetter } from '../../../Services/Utils/utils';\nimport { id } from 'date-fns/locale';\nconst HtmlEmbed = React.lazy(() => import('./Components/EmbedPlatforms/HtmlEmbed'));\nconst WordPressEmbed = React.lazy(() => import('./Components/EmbedPlatforms/WordPressEmbed'));\nconst WixEmbed = React.lazy(() => import('./Components/EmbedPlatforms/WixEmbed'));\nconst SquarespaceEmbed = React.lazy(() => import('./Components/EmbedPlatforms/SquarespaceEmbed'));\nconst ShopifyEmbed = React.lazy(() => import('./Components/EmbedPlatforms/ShopifyEmbed'));\nconst OtherEmbed = React.lazy(() => import('./Components/EmbedPlatforms/OtherEmbed'));\n\n\nconst EditWebEmbedAside = React.lazy(() => import('./Components/EditWebEmbedAside'));\nconst NeedSupport = React.lazy(() => import('../CommonComponents/NeedSupport'));\nconst Breadcrumbs = React.lazy(() => import('../CommonComponents/Breadcrumbs'));\n\nconst dataWithComma = (updateData) => {\n    var dataCollection = {}\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection[item] = true\n        })\n    return dataCollection\n}\nconst assetsData = (data) => {\n    var dataCollection = {}\n    if (data && String(data).length > 0) {\n        if (String(data).includes(\"2,4\")) {\n            dataCollection[\"2,4\"] = true\n        }\n        else if (String(data).includes(\"3,5\")) {\n            dataCollection[\"3,5\"] = true\n        }\n        if (String(data).includes(\"1\")) {\n            dataCollection[\"1\"] = true\n        }\n    }\n\n    return dataCollection\n}\n\nconst chooseActiveFilter = (assetsType, collection, connection, source, tags, ugcrights) => {\n    var dataCollection = {}\n    if (assetsType) {\n        dataCollection[\"assetsType\"] = true\n    }\n    if (collection) {\n        dataCollection[\"collection\"] = true\n    }\n    if (connection) {\n        dataCollection[\"connection\"] = true\n    }\n    if (source) {\n        dataCollection[\"source\"] = true\n    }\n    if (tags) {\n        dataCollection[\"tags\"] = true\n    }\n    if (ugcrights) {\n        dataCollection[\"ugcrights\"] = true\n    }\n    return dataCollection\n}\n\nclass WebEmbed extends Component {\n    constructor(props) {\n        super(props);\n        const { item } = props\n        console.log(\"item\", item)\n        this.state = {\n            showGenratedCode: 'p-html',\n            chooseFilter: chooseActiveFilter(item.assets_type, item.collection, item.source, item.network, item.tags, item.ugc_status),\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: assetsData(item.assets_type),\n            tagApply: dataWithComma(item.tags),\n            ugcRigths: {},\n            selectedTemplate: { id: item.template },\n            condition: String(item.filterType).toLowerCase(),\n            networkData: [],\n            feedData: [],\n            selectedNetwork: dataWithComma(item.network),\n            selectedConnection: dataWithComma(item.source),\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            collectionList: [],\n            collectionCompleteList: [],\n            selectedCollection: dataWithComma(item.collection),\n            collectionSearch: \"\",\n            genrateCode: false,\n            publishList: [],\n            responseData: item,\n            activeFilter: null,\n            selectedWebEmbed: null,\n            publishCodeName: item.Publish && item.Publish.name ? item.Publish.name : \"Untitled-1\",\n            id: item.id\n        };\n    }\n\n    timeout = 0;\n    componentWillMount() {\n        this.onLoadCollectionList()\n    }\n    componentDidMount() {\n        const { networks, feedData } = this.props\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n        this.onLoadPublish()\n    }\n    componentWillReceiveProps(nextProps) {\n        const { networks, feedData } = nextProps\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n    }\n    onLoadPublish = () => {\n        var self = this\n        getPublishList({ publish_type: 1 }).then((loadReponse) => {\n            self.setState({ publishList: loadReponse.data.response })\n        })\n    }\n\n    onClickToDelete = (data) => event => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You want to delete this\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                var self = this;\n                publishDeleteRequest(data).then((response) => {\n                    self.onLoadPublish()\n                    toast.success('Your widget has been deleted.')\n\n                })\n\n\n            }\n        })\n\n    }\n\n    // onTagApply = (value) => {\n    //     const { tagApply } = this.state\n    //     tagApply.push(value)\n    //     this.setState({ tagApply })\n    // }\n    onTagRemove = (index) => event => {\n        let { tagApply } = this.state;\n        tagApply.splice(index, 1)\n        this.setState({ tagApply })\n    }\n\n    conditionApply = (condition) => event => {\n        this.setState({ condition })\n    }\n    filterApply = (filterKey) => event => {\n        const { chooseFilter } = this.state;\n        if (chooseFilter[filterKey]) {\n            delete chooseFilter[filterKey]\n            this.setState({ chooseFilter: chooseFilter })\n        }\n        else {\n            chooseFilter[filterKey] = true;\n            this.setState({ chooseFilter })\n        }\n\n    }\n    shareEmbedModal = event => this.setState({\n        showGenratedCode: true\n    })\n    genratedCodeCallback = event => {\n        this.setState({\n            showGenratedCode: event\n        })\n    }\n    renderSwitch = (platform) => {\n        const { responseData } = this.state\n\n        switch (platform) {\n            case 'p-html':\n                return <HtmlEmbed data={responseData} />;\n            case 'p-wordpress':\n                return <WordPressEmbed data={responseData} />;\n            case 'p-wix':\n                return <WixEmbed data={responseData} />;\n            case 'p-squarespace':\n                return <SquarespaceEmbed data={responseData} />;\n            case 'p-shopify':\n                return <ShopifyEmbed data={responseData} />;\n            case 'p-other':\n                return <OtherEmbed data={responseData} />;\n            default:\n                return <HtmlEmbed data={responseData} />;\n        }\n\n    }\n\n\n    onSelectTemplate = (template) => event => this.setState({ selectedTemplate: template })\n\n    onUgcRigths = (value) => event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths[value]) {\n            delete ugcRigths[value]\n            this.setState({ ugcRigths: ugcRigths })\n        }\n        else {\n            ugcRigths[value] = true;\n            this.setState({ ugcRigths })\n        }\n    }\n    onSelectAllUgcRigths = event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths && Object.keys(ugcRigths).length >= 3) {\n            this.setState({ ugcRigths: {} })\n        }\n        else {\n            this.setState({\n                ugcRigths: {\n                    \"1\": true, \"2\": true, \"3\": true\n                }\n            })\n        }\n    }\n\n    onconnectionApply = (value) => event => {\n        const { selectedConnection } = this.state;\n        if (selectedConnection[value]) {\n            delete selectedConnection[value]\n            this.setState({ selectedConnection: selectedConnection })\n        }\n        else {\n            selectedConnection[value] = true;\n            this.setState({ selectedConnection })\n        }\n    }\n    onConnectionSelectAll = event => {\n        const { selectedConnection, feedData } = this.state;\n        if (selectedConnection && Object.keys(selectedConnection).length >= feedData.length) {\n            this.setState({ selectedConnection: {} })\n        }\n        else {\n            var dataNetwork = {}\n            feedData.map((item) => {\n                dataNetwork[item.feedId] = true\n            })\n            this.setState({\n                selectedConnection: dataNetwork\n            })\n        }\n    }\n    onConnectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textConnectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadConnectionFilterData())\n        }, 1000);\n    }\n    onLoadConnectionFilterData = () => {\n        const { feedData } = this.props\n        const { textConnectionSearch } = this.state;\n        const searchData = feedData.filter((item) => String(item.name).toLowerCase().includes(textConnectionSearch))\n        this.setState({ feedData: searchData })\n    }\n    onAssetsApply = (value) => event => {\n        const { assetsApply } = this.state;\n        if (assetsApply[value]) {\n            delete assetsApply[value]\n            this.setState({ assetsApply: assetsApply })\n        }\n        else {\n            assetsApply[value] = true;\n            this.setState({ assetsApply })\n        }\n    }\n\n    onSelectAllAssetsApply = event => {\n        const { assetsApply } = this.state;\n        if (assetsApply && Object.keys(assetsApply).length >= 3) {\n            this.setState({ assetsApply: {} })\n        }\n        else {\n            this.setState({\n                assetsApply: {\n                    \"1\": true, \"2,4\": true, \"3,5\": true\n                }\n            })\n        }\n    }\n\n    onNetworkApply = (value) => event => {\n        const { selectedNetwork } = this.state;\n        if (selectedNetwork[value]) {\n            delete selectedNetwork[value]\n            this.setState({ selectedNetwork: selectedNetwork })\n        }\n        else {\n            selectedNetwork[value] = true;\n            this.setState({ selectedNetwork })\n        }\n    }\n    onClickSelectAll = event => {\n        const { selectedNetwork, networkData } = this.state;\n        if (selectedNetwork && Object.keys(selectedNetwork).length >= networkData.length) {\n            this.setState({ selectedNetwork: {} })\n        }\n        else {\n            var dataNetwork = {}\n            networkData.map((item) => {\n                dataNetwork[item.id] = true\n            })\n            this.setState({\n                selectedNetwork: dataNetwork\n            })\n        }\n    }\n    onSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadFilterData())\n        }, 1000);\n    }\n    onLoadFilterData = () => {\n        const { networks } = this.props\n        const { textSearch } = this.state;\n        const searchData = networks.filter((item) => String(item.name).toLowerCase().includes(textSearch))\n        this.setState({ networkData: searchData })\n    }\n\n    onLoadCollectionList = () => {\n        var self = this;\n        getCollectionList().then((response) => {\n            const { responseData } = response.data;\n            if (responseData && Object.keys(responseData).length > 0) {\n                self.setState({ collectionList: responseData.collection, collectionCompleteList: responseData.collection })\n            }\n        }).catch((ex) => {\n\n        })\n\n    }\n\n    onCollectionApply = (value) => event => {\n        const { selectedCollection } = this.state;\n        if (selectedCollection[value]) {\n            delete selectedCollection[value]\n            this.setState({ selectedCollection: selectedCollection })\n        }\n        else {\n            selectedCollection[value] = true;\n            this.setState({ selectedCollection })\n        }\n    }\n    onCollectionSelectAll = event => {\n        const { selectedCollection, collectionList } = this.state;\n        if (selectedCollection && Object.keys(selectedCollection).length >= collectionList.length) {\n            this.setState({ selectedCollection: {} })\n        }\n        else {\n            var dataCollection = {}\n            collectionList.map((item) => {\n                dataCollection[item.id] = true\n            })\n            this.setState({\n                selectedCollection: dataCollection\n            })\n        }\n    }\n    onCollectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ collectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadCollectionFilterData())\n        }, 1000);\n    }\n    onLoadCollectionFilterData = () => {\n        const { collectionSearch, collectionCompleteList } = this.state;\n        const searchData = collectionCompleteList.filter((item) => String(item.name).toLowerCase().includes(collectionSearch))\n        this.setState({ collectionList: searchData })\n    }\n    onChangeName = event => {\n        this.setState({ publishCodeName: event.target.value })\n    }\n    onRequestPublish = event => {\n        const { id, selectedTemplate, selectedCollection, selectedConnection, selectedNetwork, condition, showGenratedCode, ugcRigths, assetsApply, publishCodeName } = this.state\n        var self = this;\n\n        var collection = []\n        var template = \"\"\n        var source = []\n        var tags = []\n        var network = []\n        var ugcRigthsU = []\n\n        if (ugcRigths && Object.keys(ugcRigths).length > 0) {\n            Object.keys(ugcRigths).map((item) => {\n                ugcRigthsU.push(item)\n            })\n        }\n        if (selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) {\n            template = selectedTemplate.id\n        }\n\n        if (selectedNetwork && Object.keys(selectedNetwork).length > 0) {\n            Object.keys(selectedNetwork).map((item) => {\n                network.push(item)\n            })\n        }\n        if (selectedCollection && Object.keys(selectedCollection).length > 0) {\n            Object.keys(selectedCollection).map((item) => {\n                collection.push(item)\n            })\n        }\n        if (selectedConnection && Object.keys(selectedConnection).length > 0) {\n            Object.keys(selectedConnection).map((item) => {\n                source.push(item)\n            })\n        }\n        if (assetsApply && Object.keys(assetsApply).length > 0) {\n            Object.keys(assetsApply).map((item) => {\n                tags.push(item)\n            })\n        }\n        if ((selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) && (collection.length > 0 || source.length > 0 || tags.length > 0 || ugcRigthsU.length > 0 || network.length > 0)) {\n            const data = {\n                id: id,\n                name: publishCodeName,\n                \"template\": template,\n                \"collection\": collection.join(\",\"),\n                \"source\": source.join(\",\"),\n                \"assets_type\": tags.join(\",\"),\n                \"tags\": \"\",\n                \"ugc_status\": ugcRigthsU.join(\",\"),\n                \"publish_type\": 1,\n                \"campaign_type\": \"\",\n                \"screen_type\": \"\",\n                \"platform\": \"\",\n                network: network.join(\",\"),\n                filterType: String(condition).toUpperCase()\n\n            }\n            updatePublishRequest(data).then((response) => {\n                const { status, response_code, response_message } = response.data\n                if (status == \"success\") {\n                    toast.success(\"Publish widget successfully updated.\")\n                    self.setState({ responseData: response.data }, () => self.props.onLoadPublish())\n                }\n                else toast.error(response_message)\n\n\n            }).catch((ex) => {\n\n            })\n        }\n    }\n    onResetFilter = event => {\n        this.setState({\n            showGenratedCode: 'p-html',\n            chooseFilter: {},\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: {},\n            tagApply: [],\n            ugcRigths: {},\n            selectedTemplate: null,\n            condition: \"or\",\n            selectedNetwork: {},\n            selectedConnection: {},\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            selectedCollection: {},\n            collectionSearch: \"\",\n            genrateCode: false,\n            responseData: null,\n            activeFilter: null,\n            publishCodeName: \"\"\n\n        })\n    }\n\n    render() {\n        const { showGenratedCode, chooseFilter, genrateCode, responseData, activeFilter } = this.state\n        const { networks, history } = this.props\n        return <>\n            <EditWebEmbedAside genratedCodeCallback={this.genratedCodeCallback} genratedCodeModal={showGenratedCode} filterApply={this.filterApply} state={this.state} onSelectTemplate={this.onSelectTemplate} onSelectAllUgcRigths={this.onSelectAllUgcRigths} onUgcRigths={this.onUgcRigths} onTagRemove={this.onTagRemove} onAssetsApply={this.onAssetsApply} onconnectionApply={this.onconnectionApply} onSelectAllAssetsApply={this.onSelectAllAssetsApply} onNetworkApply={this.onNetworkApply} onClickSelectAll={this.onClickSelectAll} onSearchFilter={this.onSearchFilter} onCollectionSearchFilter={this.onCollectionSearchFilter}\n                onCollectionSelectAll={this.onCollectionSelectAll}\n                onCollectionApply={this.onCollectionApply} conditionApply={this.conditionApply} onConnectionSearchFilter={this.onConnectionSearchFilter} onConnectionSelectAll={this.onConnectionSelectAll} onClickToDelete={this.onClickToDelete} onResetFilter={this.onResetFilter} activeFilter={activeFilter} history={history} onChangeName={this.onChangeName} onRequestPublish={this.onRequestPublish} />\n        </>\n\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        networks: state.networks.networkData,\n        feedData: state.feedData.filterList\n\n    }\n}\n\nexport default connect(mapStateToProps)(WebEmbed);","import React, { Component, Suspense } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditWebEmbed from '../../EditWebEmbed'\n\nclass EmbedList extends Component {\n    state = {\n        active: null\n    }\n    onChange = (value, item) => event => {\n        const { active } = this.state\n        this.setState({ active: active == value ? null : value }, () => this.props.onUpdateReponseData(item))\n    }\n    render() {\n        const { state, history } = this.props\n        const { active } = this.state\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\n            {state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\n                return <Accordion.Item eventKey={pIndex}>\n                    <div className=\"menu-item\" key={pIndex}>\n                        <Accordion.Header className=\"w-100 disable_arrow\">\n                            <div className=\"d-flex justify-content-between align-items-center w-100\">\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px me-2\"\n                                            onClick={this.onChange(`p_code${pIndex}`, item)}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px\"\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id, \"collection\": item.wallId })}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Accordion.Header>\n                    </div>\n                    <Accordion.Body className=\"p-0 pt-3\">\n                        <EditWebEmbed history={history} item={item} {...this.props} />\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            })\n            }\n        </Accordion>\n    }\n\n}\nexport default EmbedList\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\n//import Select from 'react-select';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport Filters from './Filters';\nimport Templates from './Template';\nimport EmbedList from './EmbedList'\n\nconst selectedPlatform = (platform) => {\n    switch (platform) {\n        case 'p-html':\n            return 'HTML'\n        case 'p-wordpress':\n            return 'Wordpress'\n        case 'p-wix':\n            return 'Wix'\n        case 'p-squarespace':\n            return 'Squarespace'\n        case 'p-shopify':\n            return 'Shopify'\n        case 'p-other':\n            return 'Other'\n        default:\n            return `HTML`\n    }\n}\n\nclass WebEmbedAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n    componentDidMount() {\n        this.onLoadPublish()\n    }\n    onLoadPublish = () => {\n        var self = this\n        getPublishList().then((loadReponse) => {\n            self.setState({ publishList: loadReponse.data })\n        })\n    }\n    handleSelect(date) {\n        console.log(date); // native Date object\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName } = this.props\n        console.log(\"this.props\", this.props)\n        return <div className=\"card-body pe-1\">\n            <div className=\"innerAsideWrapper pe-3\">\n                <div className=\"d-flex align-items-start justify-content-between\">\n                    <h6 className=\"fs-7 fw-boldest mb-0\">Add Filter</h6>\n                    {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\n                </div>\n                <Tab.Container id=\"billing_tab_panel\" defaultActiveKey=\"aside-assets_filter\">\n                    <Nav variant=\"nav\" className=\"border-bottom mb-3\">\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"aside-assets_filter\">\n                            <label className=\"text-gray-800 mb-2\">Widget Name</label>\n                            <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n                            {\n                                state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                            }\n\n                            <Accordion defaultActiveKey={\"0\"}>\n                                <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                                    <Accordion.Header className=\"add_fillter_btn\">\n                                        <span className=\"svg-icon svg-icon-3 text-gray-800\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11 11V5H13V11H19V13H13V19H11V13H5V11H11Z\" fill=\"currentColor\"></path></svg>\n                                        </span>\n                                        <span className=\"fs-8 text-gray-800 fw-semibold\">Choose Filter</span>\n                                    </Accordion.Header>\n                                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2zM8 19h12v-8H8v8zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2z\" fill=\"currentColor\" /></svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Collection</p>\n                                                <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <path id=\"Path_1\" data-name=\"Path 1\" d=\"M0,0H24V24H0Z\" fill=\"none\" />\n                                                            <path id=\"Path_4\" data-name=\"Path 4\" d=\"M8.365,20.286A9.309,9.309,0,0,1,2.9,14.82a3.246,3.246,0,0,1,0-6.455A9.309,9.309,0,0,1,8.365,2.9a3.246,3.246,0,0,1,6.455,0,9.309,9.309,0,0,1,5.465,5.466,3.246,3.246,0,0,1,0,6.455,9.311,9.311,0,0,1-5.466,5.465,3.246,3.246,0,0,1-6.455,0Zm1.836-.347a1.391,1.391,0,0,0,2.782.048v-.1a1.391,1.391,0,0,0-2.782.048ZM6.328,16.818a7.393,7.393,0,0,0,2.388,1.614,3.247,3.247,0,0,1,5.751,0,7.444,7.444,0,0,0,3.965-3.963,3.247,3.247,0,0,1,0-5.752,7.447,7.447,0,0,0-3.964-3.964,3.247,3.247,0,0,1-5.752,0A7.444,7.444,0,0,0,4.752,8.716a3.247,3.247,0,0,1,0,5.752A7.427,7.427,0,0,0,6.328,16.818Zm12.22-5.226a1.391,1.391,0,1,0,1.39-1.391A1.392,1.392,0,0,0,18.548,11.592Zm-15.3,1.391a1.391,1.391,0,1,0-1.391-1.391A1.393,1.393,0,0,0,3.246,12.983ZM10.2,3.246a1.391,1.391,0,0,0,2.782.048V3.2a1.391,1.391,0,0,0-2.782.048Z\" transform=\"translate(0.408 0.408)\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Network</p>\n                                                <span className=\"fs-10 text-gray-500\">Choose the required network</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                            <g><path id=\"Path_2321\" data-name=\"Path 2321\" d=\"M21,14v5a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V5A2,2,0,0,1,5,3h5V5H5V19H19V14Z\" fill=\"#313a53\" />\n                                                                <path id=\"Path_2322\" data-name=\"Path 2322\" d=\"M21,7H17V3H15V7H11V9h4v4h2V9h4\" fill=\"currentColor\" /></g>\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Connections</p>\n                                                <span className=\"fs-10 text-gray-500\">Select the connection type</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                            <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Assets Type</p>\n                                                <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                            <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm.707 2.122L3.828 12l8.486 8.485 7.778-7.778-1.06-7.425-7.425-1.06zm2.12 6.364a2 2 0 1 1 2.83-2.829 2 2 0 0 1-2.83 2.829z\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Tag</p>\n                                                <span className=\"fs-10 text-gray-500\">Select collection and filter assets</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\n                                                            <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                            <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>UGC Rights</p>\n                                                <span className=\"fs-10 text-gray-500\">Select collection and filter assets</span>\n                                            </div>\n                                        </div>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                                <Templates {...this.props} />\n                                <label className=\"text-gray-800 mb-2\">Select Platform</label>\n                                <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                                    <Accordion.Header className=\"w-100\">\n                                        <span className=\"fs-7 fw-medium\">{selectedPlatform(genratedCodeModal)}</span>\n                                    </Accordion.Header>\n                                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"platform\" defaultValue={'p-html'} onChange={e => this.embedCodeCallback(e)}>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-html\" value={'p-html'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/html.svg')} alt=\"html\" height={31} width={120} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-wordpress\" value={'p-wordpress'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/wordpress.svg')} alt=\"wordpress\" height={44} width={90} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-wix\" value={'p-wix'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/wix.svg')} alt=\"wix\" height={30} width={75} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-squarespace\" value={'p-squarespace'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/squarespace.svg')} alt=\"wix\" height={45} width={80} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-shopify\" value={'p-shopify'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/shopify.svg')} alt=\"wix\" height={32} width={110} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-other\" value={'p-other'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/other.svg')} alt=\"other\" height={40} width={90} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"filter-assets_published\">\n                            <EmbedList {...this.props} />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n        </div>\n\n    }\n}\n\nexport default WebEmbedAside;"],"names":["HtmlEmbed","React","WordPressEmbed","WixEmbed","SquarespaceEmbed","ShopifyEmbed","OtherEmbed","EditWebEmbedAside","dataWithComma","updateData","dataCollection","String","length","split","map","item","assetsData","data","includes","chooseActiveFilter","assetsType","collection","connection","source","tags","ugcrights","WebEmbed","props","timeout","onLoadPublish","self","getPublishList","publish_type","then","loadReponse","setState","publishList","response","onClickToDelete","event","Swal","title","text","icon","showCancelButton","confirmButtonText","result","isConfirmed","publishDeleteRequest","toast","onTagRemove","index","tagApply","state","splice","conditionApply","condition","filterApply","filterKey","chooseFilter","shareEmbedModal","showGenratedCode","genratedCodeCallback","renderSwitch","platform","responseData","onSelectTemplate","template","selectedTemplate","onUgcRigths","value","ugcRigths","onSelectAllUgcRigths","Object","keys","onconnectionApply","selectedConnection","onConnectionSelectAll","feedData","dataNetwork","feedId","onConnectionSearchFilter","searchText","target","clearTimeout","setTimeout","textConnectionSearch","toLowerCase","onLoadConnectionFilterData","searchData","filter","name","onAssetsApply","assetsApply","onSelectAllAssetsApply","onNetworkApply","selectedNetwork","onClickSelectAll","networkData","id","onSearchFilter","textSearch","onLoadFilterData","networks","onLoadCollectionList","getCollectionList","collectionList","collectionCompleteList","catch","ex","onCollectionApply","selectedCollection","onCollectionSelectAll","onCollectionSearchFilter","collectionSearch","onLoadCollectionFilterData","onChangeName","publishCodeName","onRequestPublish","network","ugcRigthsU","push","join","filterType","toUpperCase","updatePublishRequest","status","response_message","response_code","onResetFilter","collectionApply","sourceApply","genrateCode","activeFilter","console","log","assets_type","ugc_status","selectedWebEmbed","Publish","this","feeds","nextProps","history","genratedCodeModal","Component","connect","filterList","EmbedList","active","onChange","onUpdateReponseData","Accordion","defaultActiveKey","className","pIndex","eventKey","OverlayTrigger","placement","overlay","Tooltip","type","onClick","xmlns","viewBox","width","height","fill","d","wallId","EditWebEmbed","selectedPlatform","WebEmbedAside","showModal","embedCodeCallback","date","variant","placeholder","indexFilter","isLast","transform","defaultValue","e","src","baseUrl","alt"],"sourceRoot":""}