{"version":3,"file":"static/js/6001.ad464f59.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/Components/Filters/index.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nclass FilterStrip extends Component {\n\n    render() {\n        const { assets, feedsFilter, ugcStatusFilter, postTypeFilter } = this.props;\n\n        const { collection, dateRanges, other, postTags, postType, socialFeed, text, ugcStatus } = assets.filterBody\n        console.log(\"socialFeed\", socialFeed)\n        return <>\n            {((collection && Object.keys(collection).length > 0) || (dateRanges && Object.keys(dateRanges).length > 0) || (postType && Object.keys(postType).length > 0) || (socialFeed && Object.keys(socialFeed).length > 0) || (ugcStatus && Object.keys(ugcStatus).length > 0) || (text && text != \"\")) ? <div className=\"container-fluid\">\n                <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                    <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                        Filter By :\n                        <button className=\"btn p-0 ms-1\">\n                            <span className=\"svg-icon me-0\">\n\n                            </span>\n                        </button>\n                    </div>\n                    {\n                        collection && Object.keys(collection).length > 0 ? Object.keys(collection).map((collectionName) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                            {collectionName}\n                            <button className=\"btn p-0 ms-1\">\n                                <span className=\"svg-icon me-0\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                        </div>) : null\n                    }\n                    {\n                        dateRanges && Object.keys(dateRanges).length > 0 ? <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                            {moment(dateRanges[\"startDate\"]).format(\"DD-MMM-YYYY\")} to {moment(dateRanges[\"endDate\"]).format(\"DD-MMM-YYYY\")}\n                            <button className=\"btn p-0 ms-1\" onClick={event => this.props\n                                .resetDateFilter()}>\n                                <span className=\"svg-icon me-0\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                        </div> : null\n                    }\n                    {\n                        postType && Object.keys(postType).length > 0 ? Object.keys(postType).map((pType) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                            {pType == \"2,4\" ? `Image Only` : pType == \"3,5\" ? `Video Only` : `Post Type`}\n                            <button className=\"btn p-0 ms-1\" onClick={event => postTypeFilter(pType)}>\n                                <span className=\"svg-icon me-0\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                        </div>) : null\n                    }\n                    {\n                        socialFeed && Object.keys(socialFeed).length > 0 ? Object.keys(socialFeed).map((socialF) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\" key={socialF}>\n                            {socialFeed[socialF]}\n                            <button className=\"btn p-0 ms-1\" onClick={event => feedsFilter(socialF, socialFeed[socialF])}>\n                                <span className=\"svg-icon me-0\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                        </div>) : null\n                    }\n                    {\n                        ugcStatus && Object.keys(ugcStatus).length > 0 ? Object.keys(ugcStatus).map((ugcS) => <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                            {ugcS == 1 ? `Pending Post` : ugcS == 2 ? `Approved Post` : ugcS == 3 ? `Rejected Post` : ugcS == 4 ? `Expired Post` : null}\n                            <button className=\"btn p-0 ms-1\" onClick={event => ugcStatusFilter(ugcS)}>\n                                <span className=\"svg-icon me-0\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                        </div>) : null\n                    }\n                    {\n                        text && text != \"\" ? <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                            {text}\n                            <button className=\"btn p-0 ms-1\">\n                                <span className=\"svg-icon me-0\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                        </div> : null\n                    }\n                    <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                        Reset\n                        <button className=\"btn p-0 ms-1\" onClick={event => this.props.resetFilter()}>\n                            <span className=\"svg-icon me-0\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                    <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" fill=\"currentColor\" />\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div> : null}\n        </>\n    }\n\n}\nexport default FilterStrip"],"names":["FilterStrip","this","props","assets","feedsFilter","ugcStatusFilter","postTypeFilter","filterBody","collection","dateRanges","postType","other","postTags","socialFeed","text","ugcStatus","console","log","Object","keys","length","className","map","collectionName","xmlns","viewBox","width","height","fill","d","moment","format","onClick","event","resetDateFilter","pType","socialF","ugcS","resetFilter","Component"],"sourceRoot":""}