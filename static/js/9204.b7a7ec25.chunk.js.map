{"version":3,"file":"static/js/9204.b7a7ec25.chunk.js","mappings":"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","sources":["Layouts/Main/WebEmbed/EditWebEmbed.js","Layouts/Main/WebEmbed/Components/EmbedList/index.js","Layouts/Main/WebEmbed/Components/WebEmbedAside.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2';\nimport { connect } from \"react-redux\";\nimport { Dropdown, Tab } from 'react-bootstrap';\nimport { getCollectionList } from '../../../Services/Actions/homeActions'\nimport { updatePublishRequest, getPublishList, publishDeleteRequest } from '../../../Services/Actions/publishActions'\n\nimport { capitalizeFirstLetter } from '../../../Services/Utils/utils';\nimport { id } from 'date-fns/locale';\nconst HtmlEmbed = React.lazy(() => import('./Components/EmbedPlatforms/HtmlEmbed'));\nconst WordPressEmbed = React.lazy(() => import('./Components/EmbedPlatforms/WordPressEmbed'));\nconst WixEmbed = React.lazy(() => import('./Components/EmbedPlatforms/WixEmbed'));\nconst SquarespaceEmbed = React.lazy(() => import('./Components/EmbedPlatforms/SquarespaceEmbed'));\nconst ShopifyEmbed = React.lazy(() => import('./Components/EmbedPlatforms/ShopifyEmbed'));\nconst OtherEmbed = React.lazy(() => import('./Components/EmbedPlatforms/OtherEmbed'));\n\n\nconst EditWebEmbedAside = React.lazy(() => import('./Components/EditWebEmbedAside'));\nconst WebEmbedAside = React.lazy(() => import('./Components/WebEmbedAside'));\nconst NeedSupport = React.lazy(() => import('../CommonComponents/NeedSupport'));\nconst Breadcrumbs = React.lazy(() => import('../CommonComponents/Breadcrumbs'));\n\nconst dataWithComma = (updateData) => {\n    var dataCollection = {}\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection[item] = true\n        })\n    return dataCollection\n}\nconst tagDataWithComma = (updateData) => {\n    var dataCollection = []\n    if (updateData && String(updateData).length > 0)\n        String(updateData).split(\",\").map((item) => {\n            dataCollection.push(item)\n        })\n    return dataCollection\n}\nconst assetsData = (data) => {\n    var dataCollection = {}\n    if (data && String(data).length > 0) {\n        if (String(data).includes(\"2,4\")) {\n            dataCollection[\"2,4\"] = true\n        }\n        else if (String(data).includes(\"3,5\")) {\n            dataCollection[\"3,5\"] = true\n        }\n        if (String(data).includes(\"1\")) {\n            dataCollection[\"1\"] = true\n        }\n    }\n\n    return dataCollection\n}\n\nconst chooseActiveFilter = (assetsType, collection, connection, source, tags, ugcrights) => {\n    var dataCollection = {}\n    if (assetsType) {\n        dataCollection[\"assetsType\"] = true\n    }\n    if (collection) {\n        dataCollection[\"collection\"] = true\n    }\n    if (connection) {\n        dataCollection[\"connection\"] = true\n    }\n    if (source) {\n        dataCollection[\"source\"] = true\n    }\n    if (tags) {\n        dataCollection[\"tags\"] = true\n    }\n    if (ugcrights) {\n        dataCollection[\"ugcrights\"] = true\n    }\n    return dataCollection\n}\n\nclass WebEmbed extends Component {\n    constructor(props) {\n        super(props);\n        const { item } = props\n        this.state = {\n            showGenratedCode: 'p-html',\n            chooseFilter: chooseActiveFilter(item.assets_type, item.collection, item.source, item.network, item.tags, item.ugc_status),\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: assetsData(item.assets_type),\n            tagApply: tagDataWithComma(item.tags),\n            ugcRigths: {},\n            selectedTemplate: { id: item.template },\n            condition: String(item.filterType).toLowerCase(),\n            networkData: [],\n            feedData: [],\n            selectedNetwork: dataWithComma(item.network),\n            selectedConnection: dataWithComma(item.source),\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            collectionList: [],\n            collectionCompleteList: [],\n            selectedCollection: dataWithComma(item.collection),\n            collectionSearch: \"\",\n            genrateCode: false,\n            publishList: [],\n            responseData: item,\n            activeFilter: null,\n            selectedWebEmbed: null,\n            publishCodeName: item.Publish && item.Publish.name ? item.Publish.name : \"Untitled-1\",\n            id: item.id\n        };\n    }\n\n    timeout = 0;\n    componentWillMount() {\n        this.onLoadCollectionList()\n    }\n    componentDidMount() {\n        const { networks, feedData } = this.props\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n\n    }\n    componentWillReceiveProps(nextProps) {\n        const { networks, feedData } = nextProps\n        this.setState({ networkData: networks, feedData: feedData.feeds })\n    }\n\n\n    onClickToDelete = (data) => event => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You want to delete this\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                var self = this;\n                publishDeleteRequest(data).then((response) => {\n                    self.onLoadPublish()\n                    toast.success('Your widget has been deleted.')\n\n                })\n\n\n            }\n        })\n\n    }\n\n    onTagApply = (value) => {\n        const { tagApply } = this.state\n        tagApply.push(value)\n        this.setState({ tagApply })\n    }\n    onTagRemove = (index) => event => {\n        let { tagApply } = this.state;\n        tagApply.splice(index, 1)\n        this.setState({ tagApply })\n    }\n\n    conditionApply = (condition) => event => {\n        this.setState({ condition })\n    }\n    filterApply = (filterKey) => event => {\n        const { chooseFilter } = this.state;\n        if (chooseFilter[filterKey]) {\n            delete chooseFilter[filterKey]\n            this.setState({ chooseFilter: chooseFilter })\n        }\n        else {\n            chooseFilter[filterKey] = true;\n            this.setState({ chooseFilter })\n        }\n\n    }\n    onSelectActive = (activeKey) => event => {\n        this.setState({ activeKey: this.state.activeKey == activeKey ? \"\" : activeKey })\n    }\n    shareEmbedModal = event => this.setState({\n        showGenratedCode: true\n    })\n    genratedCodeCallback = event => {\n        this.setState({\n            showGenratedCode: event\n        })\n    }\n    renderSwitch = (platform) => {\n        const { responseData } = this.state\n\n        switch (platform) {\n            case 'p-html':\n                return <HtmlEmbed data={responseData} />;\n            case 'p-wordpress':\n                return <WordPressEmbed data={responseData} />;\n            case 'p-wix':\n                return <WixEmbed data={responseData} />;\n            case 'p-squarespace':\n                return <SquarespaceEmbed data={responseData} />;\n            case 'p-shopify':\n                return <ShopifyEmbed data={responseData} />;\n            case 'p-other':\n                return <OtherEmbed data={responseData} />;\n            default:\n                return <HtmlEmbed data={responseData} />;\n        }\n\n    }\n\n\n    onSelectTemplate = (template) => event => this.setState({ selectedTemplate: template })\n\n    onUgcRigths = (value) => event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths[value]) {\n            delete ugcRigths[value]\n            this.setState({ ugcRigths: ugcRigths })\n        }\n        else {\n            ugcRigths[value] = true;\n            this.setState({ ugcRigths })\n        }\n    }\n    onSelectAllUgcRigths = event => {\n        const { ugcRigths } = this.state;\n        if (ugcRigths && Object.keys(ugcRigths).length >= 3) {\n            this.setState({ ugcRigths: {} })\n        }\n        else {\n            this.setState({\n                ugcRigths: {\n                    \"1\": true, \"2\": true, \"3\": true\n                }\n            })\n        }\n    }\n\n    onconnectionApply = (value) => event => {\n        const { selectedConnection } = this.state;\n        if (selectedConnection[value]) {\n            delete selectedConnection[value]\n            this.setState({ selectedConnection: selectedConnection })\n        }\n        else {\n            selectedConnection[value] = true;\n            this.setState({ selectedConnection })\n        }\n    }\n    onConnectionSelectAll = event => {\n        const { selectedConnection, feedData } = this.state;\n        if (selectedConnection && Object.keys(selectedConnection).length >= feedData.length) {\n            this.setState({ selectedConnection: {} })\n        }\n        else {\n            var dataNetwork = {}\n            feedData.map((item) => {\n                dataNetwork[item.feedId] = true\n            })\n            this.setState({\n                selectedConnection: dataNetwork\n            })\n        }\n    }\n    onConnectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textConnectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadConnectionFilterData())\n        }, 1000);\n    }\n    onLoadConnectionFilterData = () => {\n        const { feedData } = this.props\n        const { textConnectionSearch } = this.state;\n        const searchData = feedData.filter((item) => String(item.name).toLowerCase().includes(textConnectionSearch))\n        this.setState({ feedData: searchData })\n    }\n    onAssetsApply = (value) => event => {\n        const { assetsApply } = this.state;\n        if (assetsApply[value]) {\n            delete assetsApply[value]\n            this.setState({ assetsApply: assetsApply })\n        }\n        else {\n            assetsApply[value] = true;\n            this.setState({ assetsApply })\n        }\n    }\n\n    onSelectAllAssetsApply = event => {\n        const { assetsApply } = this.state;\n        if (assetsApply && Object.keys(assetsApply).length >= 3) {\n            this.setState({ assetsApply: {} })\n        }\n        else {\n            this.setState({\n                assetsApply: {\n                    \"1\": true, \"2,4\": true, \"3,5\": true\n                }\n            })\n        }\n    }\n\n    onNetworkApply = (value) => event => {\n        const { selectedNetwork } = this.state;\n        if (selectedNetwork[value]) {\n            delete selectedNetwork[value]\n            this.setState({ selectedNetwork: selectedNetwork })\n        }\n        else {\n            selectedNetwork[value] = true;\n            this.setState({ selectedNetwork })\n        }\n    }\n    onClickSelectAll = event => {\n        const { selectedNetwork, networkData } = this.state;\n        if (selectedNetwork && Object.keys(selectedNetwork).length >= networkData.length) {\n            this.setState({ selectedNetwork: {} })\n        }\n        else {\n            var dataNetwork = {}\n            networkData.map((item) => {\n                dataNetwork[item.id] = true\n            })\n            this.setState({\n                selectedNetwork: dataNetwork\n            })\n        }\n    }\n    onSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ textSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadFilterData())\n        }, 1000);\n    }\n    onLoadFilterData = () => {\n        const { networks } = this.props\n        const { textSearch } = this.state;\n        const searchData = networks.filter((item) => String(item.name).toLowerCase().includes(textSearch))\n        this.setState({ networkData: searchData })\n    }\n\n    onLoadCollectionList = () => {\n        var self = this;\n        const { collectionData } = this.props;\n        if (collectionData && Object.keys(collectionData).length > 0 && collectionData.collectionList.length > 0) {\n            self.setState({ collectionList: collectionData.collectionList, collectionCompleteList: collectionData.collectionList, assetsCount: collectionData.assetsCount })\n        }\n        else {\n            getCollectionList().then((response) => {\n                const { responseData } = response.data;\n                if (responseData && Object.keys(responseData).length > 0) {\n                    self.setState({ collectionList: responseData.collection, collectionCompleteList: responseData.collection })\n                }\n            }).catch((ex) => {\n\n            })\n        }\n\n    }\n\n    onCollectionApply = (value) => event => {\n        const { selectedCollection } = this.state;\n        if (selectedCollection[value]) {\n            delete selectedCollection[value]\n            this.setState({ selectedCollection: selectedCollection })\n        }\n        else {\n            selectedCollection[value] = true;\n            this.setState({ selectedCollection })\n        }\n    }\n    onCollectionSelectAll = event => {\n        const { selectedCollection, collectionList } = this.state;\n        if (selectedCollection && Object.keys(selectedCollection).length >= collectionList.length) {\n            this.setState({ selectedCollection: {} })\n        }\n        else {\n            var dataCollection = {}\n            collectionList.map((item) => {\n                dataCollection[item.id] = true\n            })\n            this.setState({\n                selectedCollection: dataCollection\n            })\n        }\n    }\n    onCollectionSearchFilter = event => {\n        var searchText = event.target.value; // this is the search text\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.setState({ collectionSearch: (searchText) ? String(searchText).toLowerCase() : searchText }, () => this.onLoadCollectionFilterData())\n        }, 1000);\n    }\n    onLoadCollectionFilterData = () => {\n        const { collectionSearch, collectionCompleteList } = this.state;\n        const searchData = collectionCompleteList.filter((item) => String(item.name).toLowerCase().includes(collectionSearch))\n        this.setState({ collectionList: searchData })\n    }\n    onChangeName = event => {\n        this.setState({ publishCodeName: event.target.value })\n    }\n    onRequestPublish = event => {\n        const { id, selectedTemplate, selectedCollection, selectedConnection, selectedNetwork, condition, showGenratedCode, ugcRigths, assetsApply, publishCodeName,tagApply } = this.state\n        var self = this;\n\n        var collection = []\n        var template = \"\"\n        var source = []\n        var type = []\n        var tags = []\n        var network = []\n        var ugcRigthsU = []\n\n        if (ugcRigths && Object.keys(ugcRigths).length > 0) {\n            Object.keys(ugcRigths).map((item) => {\n                ugcRigthsU.push(item)\n            })\n        }\n        if (selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) {\n            template = selectedTemplate.id\n        }\n\n        if (selectedNetwork && Object.keys(selectedNetwork).length > 0) {\n            Object.keys(selectedNetwork).map((item) => {\n                network.push(item)\n            })\n        }\n        if (selectedCollection && Object.keys(selectedCollection).length > 0) {\n            Object.keys(selectedCollection).map((item) => {\n                collection.push(item)\n            })\n        }\n        if (selectedConnection && Object.keys(selectedConnection).length > 0) {\n            Object.keys(selectedConnection).map((item) => {\n                source.push(item)\n            })\n        }\n        if (assetsApply && Object.keys(assetsApply).length > 0) {\n            Object.keys(assetsApply).map((item) => {\n                type.push(item)\n            })\n        }\n        if (tagApply && tagApply.length > 0) {\n            tags = tagApply\n            \n        }\n        if ((selectedTemplate && Object.keys(selectedTemplate).length > 0 && selectedTemplate.id) && (collection.length > 0 || source.length > 0 || tags.length > 0 || type.length > 0 || ugcRigthsU.length > 0 || network.length > 0)) {\n            const data = {\n                id: id,\n                name: publishCodeName,\n                \"template\": template,\n                \"collection\": collection.join(\",\"),\n                \"source\": source.join(\",\"),\n                \"assets_type\": type.join(\",\"),\n                \"tags\":  tags.join(\",\"),\n                \"ugc_status\": ugcRigthsU.join(\",\"),\n                \"publish_type\": 1,\n                \"campaign_type\": \"\",\n                \"screen_type\": \"\",\n                \"platform\": \"\",\n                network: network.join(\",\"),\n                filterType: String(condition).toUpperCase()\n\n            }\n            updatePublishRequest(data).then((response) => {\n                const { status, response_code, response_message } = response.data\n                if (status == \"success\") {\n                    toast.success(\"Publish widget successfully updated.\")\n                    self.setState({ responseData: response.data }, () => self.props.onLoadPublish())\n                }\n                else toast.error(response_message)\n\n\n            }).catch((ex) => {\n\n            })\n        }\n    }\n    onResetFilter = event => {\n        this.setState({\n            showGenratedCode: 'p-html',\n            chooseFilter: {},\n            collectionApply: [],\n            sourceApply: {},\n            assetsApply: {},\n            tagApply: [],\n            ugcRigths: {},\n            selectedTemplate: null,\n            condition: \"or\",\n            selectedNetwork: {},\n            selectedConnection: {},\n            textSearch: \"\",\n            textConnectionSearch: \"\",\n            selectedCollection: {},\n            collectionSearch: \"\",\n            genrateCode: false,\n            responseData: null,\n            activeFilter: null,\n            publishCodeName: \"\"\n\n        })\n    }\n\n    render() {\n        const { showGenratedCode, chooseFilter, genrateCode, responseData, activeFilter } = this.state\n        const { networks, history } = this.props\n        return <>\n            <WebEmbedAside genratedCodeCallback={this.genratedCodeCallback} genratedCodeModal={showGenratedCode} filterApply={this.filterApply} state={this.state} onSelectTemplate={this.onSelectTemplate} onSelectAllUgcRigths={this.onSelectAllUgcRigths} onUgcRigths={this.onUgcRigths} onTagRemove={this.onTagRemove} onTagApply={this.onTagApply} onAssetsApply={this.onAssetsApply} onconnectionApply={this.onconnectionApply} onSelectAllAssetsApply={this.onSelectAllAssetsApply} onNetworkApply={this.onNetworkApply} onClickSelectAll={this.onClickSelectAll} onSearchFilter={this.onSearchFilter} onCollectionSearchFilter={this.onCollectionSearchFilter}\n                onCollectionSelectAll={this.onCollectionSelectAll}\n                onCollectionApply={this.onCollectionApply} conditionApply={this.conditionApply} onConnectionSearchFilter={this.onConnectionSearchFilter} onConnectionSelectAll={this.onConnectionSelectAll} onClickToDelete={this.onClickToDelete} onResetFilter={this.onResetFilter} activeFilter={activeFilter} history={history} onChangeName={this.onChangeName} onUpdateReponseData={this.onUpdateReponseData} onLoadPublish={this.onLoadPublish} onSelectActive={this.onSelectActive} onRequestPublish={this.onRequestPublish} isPublishEdit={true}/>\n        </>\n\n\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        networks: state.networks.networkData,\n        feedData: state.feedData.filterList,\n        collectionData: state.collection\n\n    }\n}\n\nexport default connect(mapStateToProps)(WebEmbed);","import React, { Component, Suspense } from 'react';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditWebEmbed from '../../EditWebEmbed'\n\nclass EmbedList extends Component {\n    state = {\n        active: null\n    }\n    onChange = (value, item) => event => {\n        const { active } = this.state\n        this.setState({ active: active == value ? null : value }, () => this.props.onUpdateReponseData(item))\n    }\n    render() {\n        const { state, history } = this.props\n        const { active } = this.state\n        console.log(\"state EmbedList\", this.props)\n        return <Accordion defaultActiveKey=\"filter_list\" className=\"filter_list\">\n            {state.collectionList.length > 0 && state.publishList.length > 0 && state.publishList.map((item, pIndex) => {\n                return <Accordion.Item eventKey={pIndex}>\n                    <div className=\"menu-item\" key={pIndex}>\n                        <Accordion.Header className=\"w-100 disable_arrow\">\n                            <div className=\"d-flex justify-content-between align-items-center w-100\">\n                                <span className=\"menu-title fw-bold text-ellipsis d-block me-3 fs-8\">{item.name}</span>\n                                <div className=\"d-flex align-items-center justify-content-end\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Edit</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px me-2\"\n                                            onClick={this.onChange(`p_code${pIndex}`, item)}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"button-tooltip-2\">Remove</Tooltip>}>\n                                        <button type=\"button\" className=\"btn btn-icon btn-secondary h-28px w-28px\"\n                                            onClick={this.props.onClickToDelete({ \"id\": item.id, \"collection\": item.wallId })}>\n                                            <span className=\"svg-icon svg-icon-6 me-0\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M7 4V2h10v2h5v2h-2v15a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6H2V4h5zM6 6v14h12V6H6zm3 3h2v8H9V9zm4 0h2v8h-2V9z\" fill=\"currentColor\" />\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Accordion.Header>\n                    </div>\n                    <Accordion.Body className=\"p-0 pt-3\">\n                        <EditWebEmbed history={history} item={item} {...this.props} />\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            })\n            }\n        </Accordion>\n    }\n\n}\nexport default EmbedList\n\n","import React, { Component } from 'react';\nimport moment from 'moment';\n//import Select from 'react-select';\nimport { Dropdown, Accordion, Nav, Tab, ToggleButtonGroup, ToggleButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport Filters from './Filters';\nimport Templates from './Template';\nimport EmbedList from './EmbedList'\n\nconst selectedPlatform = (platform) => {\n    switch (platform) {\n        case 'p-html':\n            return 'HTML'\n        case 'p-wordpress':\n            return 'Wordpress'\n        case 'p-wix':\n            return 'Wix'\n        case 'p-squarespace':\n            return 'Squarespace'\n        case 'p-shopify':\n            return 'Shopify'\n        case 'p-other':\n            return 'Other'\n        default:\n            return `HTML`\n    }\n}\n\nclass WebEmbedAside extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showModal: false,\n        //setValue : '',\n        publishList: []\n    };\n    componentDidMount() {\n        // this.onLoadPublish()\n    }\n    // onLoadPublish = () => {\n    //     var self = this\n    //     getPublishList().then((loadReponse) => {\n    //         self.setState({ publishList: loadReponse.data })\n    //     })\n    // }\n    handleSelect(date) {\n        console.log(date); // native Date object\n    }\n    embedCodeCallback = event => this.props.genratedCodeCallback(event)\n\n\n    render() {\n        //const { setValue } = this.state\n        const { filterApply, state, genratedCodeModal, onClickToDelete, onResetFilter, activeFilter, history, onChangeName,isPublishEdit } = this.props\n        console.log(\"this.props\", this.props)\n        return <div className=\"card-body pe-1\">\n            <div className=\"innerAsideWrapper pe-3\">\n                <div className=\"d-flex align-items-start justify-content-between\">\n                    <h6 className=\"fs-7 fw-boldest mb-0\">Add Filter</h6>\n                    {/* <button type=\"button\" className=\"btn btn-primary btn-sm py-1\" onClick={event => history(\"/web-embed/\")}>New</button> */}\n                </div>\n                <Tab.Container id=\"billing_tab_panel\" defaultActiveKey=\"aside-assets_filter\">\n                    <Nav variant=\"nav\" className=\"border-bottom mb-3\">\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"aside-assets_filter\">Assets Filter</Nav.Link>\n                        </Nav.Item>\n                       {!isPublishEdit?<Nav.Item className=\"\">\n                            <Nav.Link className=\"px-0\" eventKey=\"filter-assets_published\">View All</Nav.Link>\n                        </Nav.Item>:null}\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"aside-assets_filter\">\n                            <label className=\"text-gray-800 mb-2\">Widget Name</label>\n                            <input type=\"text\" className=\"form-control form-control-sm mb-3\" placeholder=\"Please enter publish name..\" value={state.publishCodeName} onChange={onChangeName} />\n                            {\n                                state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n                            }\n\n                            <Accordion defaultActiveKey={\"0\"}>\n                                <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                                    <Accordion.Header className=\"add_fillter_btn\">\n                                        <span className=\"svg-icon svg-icon-3 text-gray-800\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11 11V5H13V11H19V13H13V19H11V13H5V11H11Z\" fill=\"currentColor\"></path></svg>\n                                        </span>\n                                        <span className=\"fs-8 text-gray-800 fw-semibold\">Choose Filter</span>\n                                    </Accordion.Header>\n                                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12.414 5H21a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7.414l2 2zM8 19h12v-8H8v8zm-2 0v-9a1 1 0 0 1 1-1h13V7h-8.414l-2-2H4v14h2z\" fill=\"currentColor\" /></svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Collection</p>\n                                                <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <path id=\"Path_1\" data-name=\"Path 1\" d=\"M0,0H24V24H0Z\" fill=\"none\" />\n                                                            <path id=\"Path_4\" data-name=\"Path 4\" d=\"M8.365,20.286A9.309,9.309,0,0,1,2.9,14.82a3.246,3.246,0,0,1,0-6.455A9.309,9.309,0,0,1,8.365,2.9a3.246,3.246,0,0,1,6.455,0,9.309,9.309,0,0,1,5.465,5.466,3.246,3.246,0,0,1,0,6.455,9.311,9.311,0,0,1-5.466,5.465,3.246,3.246,0,0,1-6.455,0Zm1.836-.347a1.391,1.391,0,0,0,2.782.048v-.1a1.391,1.391,0,0,0-2.782.048ZM6.328,16.818a7.393,7.393,0,0,0,2.388,1.614,3.247,3.247,0,0,1,5.751,0,7.444,7.444,0,0,0,3.965-3.963,3.247,3.247,0,0,1,0-5.752,7.447,7.447,0,0,0-3.964-3.964,3.247,3.247,0,0,1-5.752,0A7.444,7.444,0,0,0,4.752,8.716a3.247,3.247,0,0,1,0,5.752A7.427,7.427,0,0,0,6.328,16.818Zm12.22-5.226a1.391,1.391,0,1,0,1.39-1.391A1.392,1.392,0,0,0,18.548,11.592Zm-15.3,1.391a1.391,1.391,0,1,0-1.391-1.391A1.393,1.393,0,0,0,3.246,12.983ZM10.2,3.246a1.391,1.391,0,0,0,2.782.048V3.2a1.391,1.391,0,0,0-2.782.048Z\" transform=\"translate(0.408 0.408)\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Network</p>\n                                                <span className=\"fs-10 text-gray-500\">Choose the required network</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                                            <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                            <g><path id=\"Path_2321\" data-name=\"Path 2321\" d=\"M21,14v5a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V5A2,2,0,0,1,5,3h5V5H5V19H19V14Z\" fill=\"#313a53\" />\n                                                                <path id=\"Path_2322\" data-name=\"Path 2322\" d=\"M21,7H17V3H15V7H11V9h4v4h2V9h4\" fill=\"currentColor\" /></g>\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Connections</p>\n                                                <span className=\"fs-10 text-gray-500\">Select the connection type</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                            <path d=\"M4.828 21l-.02.02-.021-.02H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H4.828zM20 15V5H4v14L14 9l6 6zm0 2.828l-6-6L6.828 19H20v-1.172zM8 11a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Assets Type</p>\n                                                <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                            <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm.707 2.122L3.828 12l8.486 8.485 7.778-7.778-1.06-7.425-7.425-1.06zm2.12 6.364a2 2 0 1 1 2.83-2.829 2 2 0 0 1-2.83 2.829z\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>Tag</p>\n                                                <span className=\"fs-10 text-gray-500\">Select collection and filter assets</span>\n                                            </div>\n                                        </div>\n                                        <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                            <div className=\"symbol symbol-30 bg-light me-2\">\n                                                <div className=\"symbol-label\">\n                                                    <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.236\" height=\"11.897\" viewBox=\"0 0 10.236 11.897\">\n                                                            <path fill=\"none\" d=\"M0 0H24V24H0z\" />\n                                                            <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-564.279-307.182a7.534,7.534,0,0,1-3.436-2.79A7.534,7.534,0,0,1-569-314.209v-2.052a1.041,1.041,0,0,1,.649-.969l4.066-1.689a1.036,1.036,0,0,1,.4-.08,1.028,1.028,0,0,1,.4.082l4.065,1.688a1.042,1.042,0,0,1,.647.968v2.054a7.527,7.527,0,0,1-1.285,4.235,7.531,7.531,0,0,1-3.438,2.791,1.029,1.029,0,0,1-.394.077A1.047,1.047,0,0,1-564.279-307.182ZM-563.9-318l-4.071,1.691a.047.047,0,0,0-.031.044v2.055a6.532,6.532,0,0,0,1.115,3.677,6.527,6.527,0,0,0,2.983,2.422.061.061,0,0,0,.021,0,.038.038,0,0,0,.015,0,6.538,6.538,0,0,0,2.986-2.422,6.543,6.543,0,0,0,1.115-3.677v-2.055a.046.046,0,0,0-.029-.044l-4.07-1.69a.048.048,0,0,0-.02,0A.048.048,0,0,0-563.9-318Zm-.83,6.364-1.161-1.158a.553.553,0,0,1-.131-.4.553.553,0,0,1,.193-.378.549.549,0,0,1,.7,0l.786.779,1.691-1.691a.545.545,0,0,1,.764-.061.549.549,0,0,1,.07.772.559.559,0,0,1-.069.069l-2.07,2.07a.546.546,0,0,1-.387.158h0A.546.546,0,0,1-564.728-311.633Z\" transform=\"translate(569 319)\" fill=\"currentColor\" />\n                                                        </svg>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"\">\n                                                <p className={`fs-8 fw-semibold mb-0 text-gray-800`}>UGC Rights</p>\n                                                <span className=\"fs-10 text-gray-500\">Select collection and filter assets</span>\n                                            </div>\n                                        </div>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                                <Templates {...this.props} />\n                                <label className=\"text-gray-800 mb-2\">Select Platform</label>\n                                <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                                    <Accordion.Header className=\"w-100\">\n                                        <span className=\"fs-7 fw-medium\">{selectedPlatform(genratedCodeModal)}</span>\n                                    </Accordion.Header>\n                                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                                        <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"platform\" defaultValue={'p-html'} onChange={e => this.embedCodeCallback(e)}>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-html\" value={'p-html'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/html.svg')} alt=\"html\" height={31} width={120} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-wordpress\" value={'p-wordpress'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/wordpress.svg')} alt=\"wordpress\" height={44} width={90} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-wix\" value={'p-wix'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/wix.svg')} alt=\"wix\" height={30} width={75} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-squarespace\" value={'p-squarespace'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/squarespace.svg')} alt=\"wix\" height={45} width={80} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-shopify\" value={'p-shopify'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/shopify.svg')} alt=\"wix\" height={32} width={110} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                            <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-other\" value={'p-other'}>\n                                                <div className=\"card-body p-2\">\n                                                    <div className=\"block-center text-center h-46px w-100\">\n                                                        <img className=\"img-fluid\" src={baseUrl('media/images/platform/other.svg')} alt=\"other\" height={40} width={90} />\n                                                    </div>\n                                                </div>\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    </Accordion.Body>\n                                </Accordion.Item>\n                            </Accordion>\n                            {\n                                isPublishEdit?<div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.props.onRequestPublish}>Save Changes</button>\n                            </div>:<div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                                <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n                            </div>\n                            }\n                            \n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"filter-assets_published\">\n                            <EmbedList {...this.props} />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n        </div>\n\n    }\n}\n\nexport default WebEmbedAside;"],"names":["HtmlEmbed","React","WordPressEmbed","WixEmbed","SquarespaceEmbed","ShopifyEmbed","OtherEmbed","WebEmbedAside","dataWithComma","updateData","dataCollection","String","length","split","map","item","tagDataWithComma","push","assetsData","data","includes","chooseActiveFilter","assetsType","collection","connection","source","tags","ugcrights","WebEmbed","props","timeout","onClickToDelete","event","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","self","publishDeleteRequest","response","onLoadPublish","toast","onTagApply","value","tagApply","state","setState","onTagRemove","index","splice","conditionApply","condition","filterApply","filterKey","chooseFilter","onSelectActive","activeKey","shareEmbedModal","showGenratedCode","genratedCodeCallback","renderSwitch","platform","responseData","onSelectTemplate","template","selectedTemplate","onUgcRigths","ugcRigths","onSelectAllUgcRigths","Object","keys","onconnectionApply","selectedConnection","onConnectionSelectAll","feedData","dataNetwork","feedId","onConnectionSearchFilter","searchText","target","clearTimeout","setTimeout","textConnectionSearch","toLowerCase","onLoadConnectionFilterData","searchData","filter","name","onAssetsApply","assetsApply","onSelectAllAssetsApply","onNetworkApply","selectedNetwork","onClickSelectAll","networkData","id","onSearchFilter","textSearch","onLoadFilterData","networks","onLoadCollectionList","collectionData","collectionList","collectionCompleteList","assetsCount","getCollectionList","catch","ex","onCollectionApply","selectedCollection","onCollectionSelectAll","onCollectionSearchFilter","collectionSearch","onLoadCollectionFilterData","onChangeName","publishCodeName","onRequestPublish","type","network","ugcRigthsU","join","filterType","toUpperCase","updatePublishRequest","status","response_message","response_code","onResetFilter","collectionApply","sourceApply","genrateCode","activeFilter","assets_type","ugc_status","publishList","selectedWebEmbed","Publish","this","feeds","nextProps","history","genratedCodeModal","onUpdateReponseData","isPublishEdit","Component","connect","filterList","EmbedList","active","onChange","console","log","Accordion","defaultActiveKey","className","pIndex","eventKey","OverlayTrigger","placement","overlay","Tooltip","onClick","xmlns","viewBox","width","height","fill","d","wallId","EditWebEmbed","selectedPlatform","showModal","embedCodeCallback","date","variant","placeholder","indexFilter","isLast","transform","defaultValue","e","src","baseUrl","alt"],"sourceRoot":""}