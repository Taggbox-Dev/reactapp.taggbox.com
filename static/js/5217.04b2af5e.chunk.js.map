{"version":3,"file":"static/js/5217.04b2af5e.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsGenralRequest.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { OverlayTrigger, Tooltip, Dropdown, Button, Form } from 'react-bootstrap';\nimport { baseUrl } from \"../../../../../../Assets/AssetsHelper\";\nimport { saveAs } from \"file-saver\";\nimport { DashboardModal } from '@uppy/react';\nimport Select, { components } from 'react-select';\n\nclass GetRightsGenralRequest extends Component {\n    state = {options:[]}\n\n    componentWillReceiveProps(nextProps){\n        const {rightsVia, state} = nextProps\n        if(rightsVia != this.props.rightsVia || state.filteredTemplate.length != this.state.options.length){\n            if(state.filteredTemplate.length > 0){\n                const option = state.filteredTemplate.map(temp => ({label:temp.name, value:temp.id}))\n                this.setState({options:option,defaultValue:option[0]})\n            }\n        }\n    }\n    render() {\n        const { state, onChangeComment, onClicktnc, onClickClearFile, uppyPostEdit, uppy, onLogoClose, onLogoOpen, onClickToRemoveLogo, onFileOpen, onFileClose, rightsVia, onChangeTncUrl, clickUploadType, onSelectTemplate } = this.props\n        const { options, defaultValue } = this.state\n        const customizeTemplate = ({innerRef, innerProps, data})=>{\n            return <div {...innerProps} className=\"dropdown-item btn-active-light justify-content-between w-100 overflow-hidden\">\n                <p className=\"mb-0 text-ellipsis\">{data.label} </p>\n                <div className=\"d-flex align-items-center justify-content-end ps-2\">\n                    <Button variant='icon' className=\"btn btn-icon btn-secondary h-24px w-24px me-1 justify-content-center\" onClick={e=>{e.stopPropagation()\n                    this.props.onDeleteTemplate(data.value)}}>\n                    <i className=\"ri-delete-bin-line icon-7\"></i>\n                    </Button>\n                </div>\n            </div>\n        }\n        \n\n        return <>\n            <div className=\"p-lg-6 p-3\">\n                {state.tempAction == 0 ? <> <div className=\"mb-2 d-flex align-items justify-content-between\" >\n                    <label>Choose From Templates</label>\n                    <button type=\"button\" className=\"btn btn-link p-0 mb-0 text-decoration-none btn-xm\" onClick={()=>this.props.onCreateTemplate()}>\n                    <strong><i className=\"ri-add-line\"></i> Create Template</strong>\n                    </button> </div>\n\n                    <Select options={options} components={{Option:customizeTemplate}} value={{label: state.selectedTemplate.name, value: state.selectedTemplate.id}} onChange={(e) => onSelectTemplate(e)} className=\"mb-3\"/></> \n                :null}\n\n                <div className=\"mb-3 w-100\">\n                    <div className=\"d-flex align-items justify-content-between\">\n                        <h3 className=\"mb-2 fs-7\">\n                            <span className=\"fw-medium\">Template Name <strong className=\"text-danger\">*</strong></span>\n                        </h3>\n                        {state.tempAction != 0 && state.filteredTemplate.length > 0 ? <button type=\"button\" className=\"btn btn-link p-0 mb-2 text-decoration-none btn-xm\" onClick={()=>this.props.onCreateTemplate(true)}>\n                        <strong><i className=\"ri-add-line\"></i> Select Template </strong>\n                        </button>: null}\n                    </div>\n                    <Form.Control size='lg' aria-label=\"Text input with dropdown button\" placeholder='Enter template name' value={state.templateName} onChange={this.props.onTempNameChange} className={`${state.tempNameError ? 'is-invalid' : ''}`}/>\n                    {state.tempNameError && <div className=\"invalid-feedback d-block\">Template name is Required.</div>}\n                </div>\n\n                {rightsVia != \"viaComments\" ? <>\n                    <h3 className=\"mb-2 fs-7\">\n                        <span className=\"fw-medium\">Brand Logo <span className=\"text-gray-500\">(Optional)</span></span>\n                    </h3>\n                    <div className=\"mb-4 ugc_add_logo w-50\">\n                        {!state.client_logo ?\n                            <>\n                                <div className=\"uppy-DragDrop-inner\" onClick={onLogoOpen}>\n                                    <div className=\"uppy-DragDrop-label\">\n                                        Drop here or <span className=\"uppy-DragDrop-browse\">browse</span>\n                                    </div>\n                                    <span className=\"uppy-DragDrop-note\"></span>\n                                </div>\n                                <div className=\"form-text mt-1\">Allowed file types: png, jpg, jpeg.</div>\n                            </>\n                            :\n                            <div className=\"d-flex align-items-center border px-5 py-3 rounded-1\">\n                                <div className=\"me-3 me-xxl-4\">\n                                    <img className=\"img-fluid object-center-contain\" src={state.client_logo} height={112} width={237} alt={'logo'} />\n                                </div>\n                                <div className=\"d-flex align-items-center flex-wrap\">\n                                    <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                            <button type=\"button\" className=\"btn btn-icon btn-active-light p-0 w-30px h-30px transition-none border-0 my-1\" onClick={onLogoOpen}>\n                                                <i className=\"ri-edit-box-line icon-6\"></i>\n                                            </button>\n                                        </OverlayTrigger>\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                            <button type=\"button\" className=\"btn btn-icon btn-active-light p-0 w-30px h-30px transition-none border-0 my-1\" onClick={onClickToRemoveLogo}>\n                                                <i className=\"ri-delete-bin-6-line icon-6\"></i>\n                                            </button>\n                                        </OverlayTrigger>\n                                    </div>\n                                </div>\n                            </div>}\n                    </div> \n                </> : null}\n                <h3 className=\"mb-2 fs-7\">\n                    <span className=\"fw-medium\">Message <strong className=\"text-danger\">*</strong></span>\n                </h3>\n                <div className=\"mb-4\">\n                    <textarea type=\"text\" className={`form-control form-control-lg textarea-min-row-${rightsVia == \"viaComments\" ? '8' : '3'} ${state.commentError ? `is-invalid` : ``}`} rows={4} placeholder=\"Add Comment\" onChange={onChangeComment} value={state.comment} />\n                    {state.commentError ? <div className=\"invalid-feedback\">{rightsVia == \"viaComments\" && !state.comment.includes(\"#\") ? \"Please add atleast 1 hashtag\" : \"Please enter text\"}</div> : null}\n                </div>\n                {this.props.modalAssetData.networkId == 28 ? <p className=\"mb text-muted\"><span className=\"fw-semibold\">Note: </span>Message should not be more than 150 characters.</p> : null}\n                {rightsVia != \"viaComments\" ? <> \n                    <h3 className=\"mb-1 fs-7\">\n                        <span className=\"fw-medium\">Terms and Conditions <strong className=\"text-danger\">*</strong></span>\n                    </h3>\n\n                    <div className=\"mb-2 fs-9\">\n                        <span className=\"fw-small\">You can upload a file or even enter a URL.</span>\n                    </div>\n                    <div className=\"mb-8\">\n                        <Dropdown className=\"w-100 mb-3\">\n                            <Dropdown.Toggle variant=\"secondary\" className=\"justify-content-between d-flex align-items-center w-100\">\n                                {state.uploadType == `Upload` ? `Upload Your File` : `Paste Your URL`}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu className=\"w-100\">\n                                <div className=\"menu-item\">\n                                    <Dropdown.Item className={state.uploadType == `Upload` ? `active` : ``} onClick={clickUploadType(\"Upload\")}>Upload Your File</Dropdown.Item>\n                                </div>\n                                <div className=\"menu-item\">\n                                    <Dropdown.Item className={state.uploadType == `Url` ? `active` : ``} onClick={clickUploadType(\"Url\")}>Paste Your URL</Dropdown.Item>\n                                </div>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        {state.uploadType == `Upload` ? <div className={`d-flex align-items-center border rounded-1 p-1 ${state.tncUrlError ? `is-invalid` : ``}`}>\n                            <><div className=\"uppy-FileInput-container py-1 px-2\" onClick={onFileOpen}><input className=\"uppy-FileInput-input\" type=\"file\" name=\"files[]\" accept=\"application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" style={{ width: '0.1px', height: '0.1px', opacity: 0, overflow: 'hidden', position: 'absolute', zIndex: '-1' }} /><button className=\"uppy-FileInput-btn\" type=\"button\">Choose files</button></div></>\n                            <div className=\"d-flex align-items-center overflow-hidden\">\n                                {state.tncName && state.tncUrl ? <div className=\"d-flex align-items-center px-2 overflow-hidden\">\n                                    <span className=\"text-ellipsis\">{state.tncName}</span>\n                                    <button type=\"button\" className=\"btn-close ms-2 d-flex flex-shrink-0\" onClick={onClickClearFile}></button>\n                                </div> : null}\n                            </div>\n                        </div> : state.uploadType == `Url` ? <input type={\"text\"} name=\"tncUrl\" className={`form-control ${state.validUrlError ? `is-invalid` : ``}`} placeholder=\"Please paste your url..\" onChange={onChangeTncUrl} value={state.tncUrl} /> : null}\n                        {state.validUrlError ? <div className=\"invalid-feedback\">The URL is not valid. Please enter a valid URL.</div> : null}\n                        {state.tncUrlError ? <div className=\"invalid-feedback\">Please Add Terms and Conditions</div> : null}\n                        {state.uploadType == `Upload` ? <div className=\"d-flex w-100 justify-content-start mt-2\">\n                            <Button variant=\"link\" className=\"p-0 text-decoration-underline\" onClick={() => saveAs(baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx'), `Terms&ConditionsforuseofUGC.docx`)}>\n                                <span className=\"text-right\">Use our predefined Content</span>\n                                <i className=\"ri-download-2-line ms-1\"></i>\n                            </Button>\n                        </div> : null}\n                    </div>\n\n\n                    {/* <div className=\"mb-8\">\n                        <div className={`d-flex align-items-center border rounded-1 p-1 ${state.tncUrlError ? `is-invalid` : ``}`}>\n                            <><div className=\"uppy-FileInput-container\" onClick={onFileOpen}><input className=\"uppy-FileInput-input\" type=\"file\" name=\"files[]\" accept=\"application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" style={{ width: '0.1px', height: '0.1px', opacity: 0, overflow: 'hidden', position: 'absolute', zIndex: '-1' }} /><button className=\"uppy-FileInput-btn\" type=\"button\">Choose files</button></div></>\n                            <div className=\"d-flex align-items-center overflow-hidden\">\n                                {state.tncName ? <div className=\"d-flex align-items-center px-2 overflow-hidden\">\n                                    <span className=\"text-ellipsis\">{state.tncName}</span>\n                                    <button type=\"button\" className=\"btn-close ms-2 d-flex flex-shrink-0\" onClick={onClickClearFile}></button>\n                                </div> : null}\n                            </div>\n                        </div>\n                        {state.tncUrlError ? <div className=\"invalid-feedback\">Please Add Terms and Conditions</div> : null}\n                        <div className=\"d-flex w-100 justify-content-start mt-2\">\n                            <button type=\"button\" className=\"btn p-0 text-decoration-underline\" onClick={() => saveAs(baseUrl('media/downloads/Terms&ConditionsforuseofUGC.docx'), `Terms&ConditionsforuseofUGC.docx`)}>\n                                <span className=\"text-right\">Use our predefined Content</span>\n                                <i className=\"ri-download-2-line ms-1\"></i>\n                            </button>\n                        </div>\n                    </div> */}\n                    <div className=\"mb-4\">\n                        <label className=\"form-check form-check-inline is-invalid\">\n                            <input className=\"form-check-input\" type=\"checkbox\" name=\"tandc\" checked={state.tnc} onChange={onClicktnc} style={{ marginTop: 3 }} />\n                            <span className=\"form-check-label fw-medium\">\n                                Accept our\n                                <a className=\"ms-1 link-primary text-decoration-none fw-bolder\" href={'https://taggbox.com/terms-of-service/'} target=\"_blank\"> Terms & Conditions </a>\n                                then click on Next Step.\n                            </span>\n                        </label>\n                        {state.tncError ? <div className=\"invalid-feedback\">Please Select Terms and Conditions</div> : null}\n                    </div>\n                </> : null}\n            </div>\n            {state.logoModal ? <DashboardModal\n                animateOpenClose={true}\n                proudlyDisplayPoweredByUppy={false}\n                inline={false}\n                showProgressDetails={true}\n                height={750}\n                browserBackButtonClose={true}\n                showRemoveButtonAfterComplete={false}\n                uppy={uppy}\n                open={true}\n                onRequestCloseModal={onLogoClose}\n                closeAfterFinish={true}\n                plugins={[]}\n            /> : null}\n\n            {state.fileModal ? <DashboardModal\n                animateOpenClose={true}\n                proudlyDisplayPoweredByUppy={false}\n                inline={false}\n                showProgressDetails={true}\n                height={750}\n                browserBackButtonClose={true}\n                showRemoveButtonAfterComplete={false}\n                uppy={uppyPostEdit}\n                open={true}\n                onRequestCloseModal={onFileClose}\n                closeAfterFinish={true}\n                plugins={[]}\n            /> : null}\n        </>\n    }\n}\n\nexport default GetRightsGenralRequest;"],"names":["GetRightsGenralRequest","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","options","_createClass","key","value","nextProps","rightsVia","this","props","filteredTemplate","option","map","temp","label","name","id","setState","defaultValue","_this2","_this$props","onChangeComment","onClicktnc","onClickClearFile","uppyPostEdit","uppy","onLogoClose","onLogoOpen","onClickToRemoveLogo","onFileOpen","onFileClose","onChangeTncUrl","clickUploadType","onSelectTemplate","_this$state","_jsxs","_Fragment","children","className","tempAction","_jsx","type","onClick","onCreateTemplate","Select","components","Option","_ref","innerRef","innerProps","data","_objectSpread","Button","variant","e","stopPropagation","onDeleteTemplate","selectedTemplate","onChange","Form","size","placeholder","templateName","onTempNameChange","tempNameError","client_logo","src","height","width","alt","OverlayTrigger","placement","overlay","Tooltip","commentError","rows","comment","includes","modalAssetData","networkId","Dropdown","uploadType","tncUrlError","accept","style","opacity","overflow","position","zIndex","tncName","tncUrl","validUrlError","saveAs","baseUrl","checked","tnc","marginTop","href","target","tncError","logoModal","DashboardModal","animateOpenClose","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","open","onRequestCloseModal","closeAfterFinish","plugins","fileModal","Component"],"sourceRoot":""}