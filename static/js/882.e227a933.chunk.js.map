{"version":3,"file":"static/js/882.e227a933.chunk.js","mappings":"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","sources":["Layouts/Main/EmailCampaign/Components/EmailCampaignAside.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js"],"sourcesContent":["import React, { Component } from 'react';\n//import Select from 'react-select';\nimport { Accordion, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\n\n\nclass EmailCampaignAside extends Component {\n    constructor() {\n        super();\n        this.state = { \n            showModal:false,\n            genratedCodeModal:'Klaviyo'\n        };\n    }\n    handleSelect(date){\n        console.log(date); // native Date object\n    }\n    selectedPlatform = (platform) => {\n        this.setState({\n            genratedCodeModal:platform\n        })\n    }\n    render() {\n        const { genratedCodeModal } = this.state\n\n        return   <div className=\"card-body\">\n                    <div className=\"innerAsideWrapper\">\n                    <label className=\"text-gray-800 mb-2\">Select Platform</label>\n                        <Accordion defaultActiveKey={\"9\"}>\n                        <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                            <Accordion.Header className=\"w-100\">\n                                <span className=\"fs-7 fw-medium\">\n                                    {genratedCodeModal}\n                                </span>\n                            </Accordion.Header>\n                            <Accordion.Body className=\"border rounded-1 mt-1\">\n                                <ToggleButtonGroup type=\"radio\" className=\"flex-column w-100\" name=\"platform\" defaultValue={'Klaviyo'} onChange={e => this.selectedPlatform(e)}>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-Klaviyo\" value={'Klaviyo'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/Klaviyo.svg')} alt=\"Klaviyo\" height={23} width={100} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-Omnisend\" value={'Omnisend'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/Omnisend.svg')} alt=\"Omnisend\" height={18} width={120} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-hubspot\" value={'HubSpot'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/hubspot.svg')} alt=\"hubspot\" height={21} width={75} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-active-cam\" value={'Active Campaign'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/active-cam.svg')} alt=\"active-cam\" height={15} width={150} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-mailchaimp\" value={'MailChimp'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/mailchaimp.svg')} alt=\"mailchaimp\" height={24} width={90} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-getrespoce\" value={'GetResponse'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/getrespoce.svg')} alt=\"getrespoce\" height={16} width={120} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                    <ToggleButton className=\"p-0 card rounded-1 text-decoration-none cursor-pointer mb-2\" variant=\"outline-primary\" id=\"p-other\" value={'Other'}>\n                                        <div className=\"card-body p-2\">\n                                            <div className=\"block-center text-center h-46px w-100\">\n                                                <img className=\"img-fluid\" src={baseUrl('media/images/email-platform/other.svg')} alt=\"other\" height={31} width={70} />\n                                            </div>\n                                        </div>\n                                    </ToggleButton>\n                                </ToggleButtonGroup>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n                    </div>\n                </div>\n                    \n    }\n}\n\nexport default EmailCampaignAside;","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/utilities/transitions/#collapse-props).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});"],"names":["EmailCampaignAside","selectedPlatform","platform","setState","genratedCodeModal","state","showModal","date","console","log","this","className","defaultActiveKey","eventKey","type","name","defaultValue","onChange","e","variant","id","value","src","baseUrl","alt","height","width","Component","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","bsPrefix","children","props","useContext","AccordionContext","useBootstrapPrefix","_jsx","Collapse","in","classNames","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","Accordion","useUncontrolled","activeKey","flush","controlledProps","prefix","Object","assign","Button","Item","Header","Body"],"sourceRoot":""}