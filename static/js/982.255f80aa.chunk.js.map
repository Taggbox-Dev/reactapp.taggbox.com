{"version":3,"file":"static/js/982.255f80aa.chunk.js","mappings":"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","sources":["Layouts/Header/Components/Elements/Notifications.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Tab, Nav } from 'react-bootstrap';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getNotificationList, notificationUpdateStatus } from '../../../../Services/Actions/homeActions'\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { notifications: props.notificationList }\n    }\n    componentWillMount() {\n        this.onLoad()\n    }\n    onLoad = () => {\n        var self = this;\n        getNotificationList().then((response) => {\n            const { notifications } = response.data.responseData;\n            if (notifications && notifications.length > 0) {\n                var data = {}\n                notifications.map((item) => {\n                    if (data[moment(new Date(item.message.time * 1000)).fromNow()]) {\n\n                        if (!data[moment(new Date(item.message.time * 1000)).fromNow()].includes(item.id)) {\n                            data[moment(new Date(item.message.time * 1000)).fromNow()].push(item)\n                        }\n\n                    }\n                    else {\n                        data[moment(new Date(item.message.time * 1000)).fromNow()] = [item]\n                    }\n\n                })\n                if (notifications && notifications.length > 0 && notifications.filter((a) => a.status == 1).length > 0) {\n                    let notificationCount = document.getElementById(\"notificationCount\");\n                    if (notifications.filter((a) => a.status == 0).length > 0) {\n                        notificationCount.style.display = 'block';\n                        notificationCount.innerText = notifications.filter((a) => a.status == 0).length;\n                    }\n                }\n                self.setState({ notifications: data })\n            }\n        })\n    }\n\n    updateStatus = (postId, status) => event => {\n        var self = this;\n        notificationUpdateStatus(postId, status).then((response) => {\n            self.onLoad()\n        })\n    }\n\n    render() {\n        const { notifications } = this.state;\n\n        return <div className=\"w-100\">\n            <Tab.Container id=\"notifications_tab_panel\" defaultActiveKey=\"all-notifications\">\n                <div className=\"d-flex align-items-center justify-content-between px-3 pt-2 border-bottom\">\n                    <Nav variant=\"default\" className=\"nav\">\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"me-3 px-0\" eventKey=\"all-notifications\">All</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link className=\"px-0\" eventKey=\"unread-notifications\">Unread</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <div>\n                        <button type=\"button\" className=\"btn btn-link btn-sm px-0 h-auto fw-bold text-decoration-none btn-active-color-primary\">Mark all as read</button>\n                    </div>\n                </div>\n                <PerfectScrollbar>\n                    {notifications && Object.keys(notifications).length > 0 ? <Tab.Content>\n                        <Tab.Pane eventKey=\"all-notifications\" className=\"pb-3\">\n                            {\n                                notifications && Object.keys(notifications).map((iNot, index) => {\n                                    return <><div className=\"d-flex align-items-center justify-content-between px-3 py-1\">\n                                        <span className=\"text-gray-800 fw-bold\">{iNot}</span>\n                                        <span className=\"bg-primary badge rounded-5 min-w-30 text-light-alt d-none\">{(notifications[iNot] && notifications[iNot].length > 0) ? notifications[iNot].length : 0}</span>\n                                    </div>\n                                        {notifications[iNot] && notifications[iNot].length > 0 ? <div className=\"\">\n\n                                            {\n                                                notifications[iNot].map((imNot) => {\n                                                    return <div key={imNot.id} className={`px-3 d-flex align-items-start border-bottom notification-item  ${imNot.status == 0 ? `bg-light` : ``}`}>\n                                                        <div className=\"symbol symbol-38 rounded-1 overflow-hidden me-2 bg-light p-2\">\n                                                            <img alt=\"Pic\" src={baseUrl(\"media/icons/social-icons/twitter.svg\")} height=\"40\" width=\"40\" />\n                                                        </div>\n                                                        <div className=\"d-flex align-items-start flex-column flex-grow-1\">\n                                                            <div className=\"d-flex algin-items-center justify-content-between w-100\">\n                                                                <Link to={'/home'} className=\"text-hover-primary text-gray-800 fw-bold text-decoration-none me-2\">{imNot.message.subject}</Link>\n                                                                <span className=\"text-gray-500 fs-9\">{moment(new Date(imNot.message.time * 1000)).format(\"hh:mma\")}</span>\n                                                            </div>\n                                                            <div className=\"d-flex algin-items-start\">\n                                                                <span className=\"text-gray-600 fs-9\">\n                                                                    {imNot.message.text}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                })\n                                            }\n\n                                        </div> : null}\n                                    </>\n\n                                })\n                            }\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"unread-notifications\" className=\"pb-3\">\n                            {\n                                notifications && Object.keys(notifications).map((iNot, index) => {\n                                    return notifications[iNot] && notifications[iNot].length > 0 && notifications[iNot].filter((a) => a.status == 0).length > 0 ? <><div key={index} className=\"d-flex align-items-center justify-content-between px-3 py-1\">\n                                        <span className=\"text-gray-800 fw-bold\">{iNot}</span>\n                                        <span className=\"bg-primary badge rounded-5 min-w-30 text-light-alt d-none\">{notifications[iNot] && notifications[iNot].length > 0 && notifications[iNot].filter((a) => a.status == 0).length > 0 ? notifications[iNot].filter((a) => a.status == 0).length : 0}</span>\n                                    </div>\n                                        {notifications[iNot] && notifications[iNot].length > 0 ? <div className=\"\">\n\n                                            {\n                                                notifications[iNot].map((imNot) => {\n                                                    return imNot.status == 0 ? <div key={imNot.id} className=\"px-3 d-flex align-items-start border-bottom notification-item bg-light\" onClick={this.updateStatus(imNot.id, 1)}>\n                                                        <div className=\"symbol symbol-38 rounded-1 overflow-hidden me-2 bg-light p-2\">\n                                                            <img alt=\"Pic\" src={baseUrl(\"media/icons/social-icons/twitter.svg\")} height=\"40\" width=\"40\" />\n                                                        </div>\n                                                        <div className=\"d-flex align-items-start flex-column flex-grow-1\">\n                                                            <div className=\"d-flex algin-items-center justify-content-between w-100\">\n                                                                <Link to={'/home'} className=\"text-hover-primary text-gray-800 fw-bold text-decoration-none me-2\">{imNot.message.subject}</Link>\n                                                                <span className=\"text-gray-500 fs-9\">{moment(new Date(imNot.message.time * 1000)).format(\"hh:mma\")}</span>\n                                                            </div>\n                                                            <div className=\"d-flex algin-items-start\">\n                                                                <span className=\"text-gray-600 fs-9\">\n                                                                    {imNot.message.text}\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    </div> : null\n\n                                                })\n                                            }\n\n                                        </div> : null}\n                                    </> : null\n\n\n                                })\n                            }\n                        </Tab.Pane>\n                    </Tab.Content> : null}\n                </PerfectScrollbar>\n            </Tab.Container>\n        </div>\n    }\n}\n\nexport default Notifications"],"names":["Notifications","props","onLoad","self","getNotificationList","then","response","notifications","data","responseData","length","map","item","moment","Date","message","time","fromNow","includes","id","push","filter","a","status","notificationCount","document","getElementById","style","display","innerText","setState","updateStatus","postId","event","notificationUpdateStatus","state","notificationList","this","className","defaultActiveKey","variant","eventKey","type","Object","keys","iNot","index","imNot","alt","src","baseUrl","height","width","to","subject","format","text","onClick","Component"],"sourceRoot":""}