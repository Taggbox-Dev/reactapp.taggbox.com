{"version":3,"file":"static/js/2355.aa50c8f3.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/Compontnets/UploadedAssets.js"],"sourcesContent":["\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { OverlayTrigger, Tooltip, Dropdown } from 'react-bootstrap';\nimport Media from '../../../CommonComponents/Media/Media';\nimport { createAssets } from '../../../../../Services/Actions/assetsActions'\n\nclass UploadedAssets extends Component {\n    onClickUploaded = event => {\n        const { collection, uploadedData, } = this.props;\n        if (uploadedData && uploadedData.length > 0) {\n            var assets = []\n            uploadedData.map((item) => {\n                assets.push({ content: item.content, postFile: item.postFile, copyrights: item.copyrights ? 1 : 0, mediaHeight: item.mediaHeight, mediaWidth: item.mediaWidth, tags: item.addTags })\n            })\n\n            const data = {\n                \"collection\": collection.value,\n                \"assets\": assets\n            }\n            this.props.createAssets(data, this.onCallBack)\n        }\n    }\n    onCallBack = () => {\n        const { editMediaHandleCallback, history } = this.props;\n        editMediaHandleCallback(false)\n        setTimeout(() => history(\"/assets\"), 1000);\n    }\n\n    render() {\n\n        const { uploadedData, selected, onClickTORemovePost, onClickTOCheckPost, updateStatus, updateStatusC, updateStatusTag, updateStatusCopy, captionStatus, tagsStatus, copyrightStatus, onChangeCaption, onChangeTags, onChangeCopyRight, captionText, tagstext, copyrightValue, onClickToAllCheck, checkAll, onCaptionSingle, onAddTagSingle, onCopyRightSingle } = this.props\n\n        return <div className=\"d-flex align-items-start flex-column flex-lg-row w-100\">\n            <div className=\"innerModalAside flex-shrink-0 p-3\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <PerfectScrollbar>\n                            <div className=\"innerModalAsideWrapper p-xxl-1\">\n                                <div className=\"d-flex align-items-center justify-content-between border-bottom pb-3 mb-4 d-lg-none\">\n                                    <h1 className=\"text-dark font-weight-bold mr-4 fs-6 mb-0\">Edit Image</h1>\n                                    <div className=\"d-flex align-items-start\">\n                                        <button type=\"button\" className=\"btn-close text-light\" onClick={this.modalToggle}></button>\n                                    </div>\n                                </div>\n                                <label className=\"form-check flex-grow-1 justify-content-between border-bottom pb-3 mb-3\">\n                                    <span className=\"form-check-label ps-0 me-1\">Select All ({selected})</span>\n                                    <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value={checkAll} onClick={onClickToAllCheck} />\n                                </label>\n                                <div className=\"border-bottom pb-3 mb-3\">\n                                    <div className=\"form-check form-switch justify-content-between mb-2\">\n                                        <label className=\"form-check-label ps-0\" htmlFor=\"mediaCaption\">Caption</label>\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"mediaCaption\" value={captionStatus} onClick={updateStatusC} />\n                                    </div>\n                                    <textarea type=\"text\" className=\"form-control textarea-min-row-4\" placeholder=\"Add your caption here...\" rows={6} onChange={onChangeCaption} value={captionText}></textarea>\n                                </div>\n                                <div className=\"border-bottom pb-3 mb-3\">\n                                    <div className=\"form-check form-switch justify-content-between mb-2\">\n                                        <label className=\"form-check-label ps-0\" htmlFor=\"addTag\">Add Tag</label>\n                                        <input className=\"form-check-input\" type=\"checkbox\" value={tagsStatus} id=\"addTag\" onClick={updateStatusTag} />\n                                    </div>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Add tag here..\" onChange={onChangeTags} value={tagstext} />\n                                </div>\n                                <div className=\"pb-3 mb-3\">\n                                    <div className=\"form-check form-switch justify-content-between mb-2\">\n                                        <label className=\"form-check-label ps-0\" htmlFor=\"mediaCopyright\">Copyright</label>\n                                        <input className=\"form-check-input\" type=\"checkbox\" value={copyrightStatus} id=\"mediaCopyright\" onClick={updateStatusCopy} />\n                                    </div>\n                                    <div className=\"d-flex align-items-center pt-1\">\n                                        <div className=\"form-check me-3\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"copyright\" value={copyrightValue == true ? `yes` : ``} id=\"copyrightYes\" onClick={onChangeCopyRight(true)} />\n                                            <label className=\"form-check-label text-muted\" htmlFor=\"copyrightYes\">Yes</label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"copyright\" value={copyrightValue == false ? `no` : ``} id=\"copyrightNo\" onClick={onChangeCopyRight(false)} />\n                                            <label className=\"form-check-label text-muted\" htmlFor=\"copyrightNo\">No</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </PerfectScrollbar>\n                        <div className=\"innerAsideActions p-xxl-1\">\n                            <button className=\"btn btn-primary w-100\" onClick={this.onClickUploaded}>Upload Assets ({selected})</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"innerModalWrap d-flex flex-grow-1 w-100 flex-column py-3\">\n                <div className=\"container-fluid\">\n                    {uploadedData ? <div className=\"row gx-2\">\n                        {\n                            uploadedData.map((item, uIndex) => {\n                                return <div className=\"uploadedAssetsGrid\" key={item.postId}>\n                                    <div className=\"card card-custom mb-2\">\n                                        <div className=\"card-body d-flex flex-column p-2\">\n                                            <div className=\"d-flex align-items-center justify-content-between pb-2\">\n                                                <div className=\"d-flex align-items-start\">\n                                                    <label className=\"form-check me-2\">\n                                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"\" value=\"phone\" checked={item.checked} onClick={onClickTOCheckPost(uIndex)} />\n                                                    </label>\n                                                </div>\n                                                <div className=\"d-flex align-items-start\">\n                                                    <button type=\"button\" className=\"btn btn-icon h-20px w-20px\" onClick={onClickTORemovePost(uIndex)}>\n                                                        <span className=\"svg-icon me-0\">\n                                                            <svg className=\"h-12px w-12px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n                                                                <path d=\"M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z\" fill=\"currentColor\" />\n                                                            </svg>\n                                                        </span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                            <div className=\"d-flex align-items-center flex-column cursor-pointer\">\n                                                <Media\n                                                    mediaType={2}\n                                                    postFile={item.postFile}\n                                                    socialNetwork={0}\n                                                    textContent={item.content}\n                                                    rating={4}\n                                                    mediaHeight={466}\n                                                    mediaWidth={878} />\n                                                <div className=\"w-100 pt-2\">\n                                                    <Dropdown className=\"position-relative\">\n                                                        <Dropdown.Toggle variant='btn' className=\"d-flex input-group p-0 arrow_disabled mb-2\">\n                                                            <input type=\"text\" className=\"form-control form-control-sm fs-10\" style={{ minHeight: 30 }} placeholder=\"Enter Tags...\" aria-label=\"Enter Tags...\" aria-describedby=\"enterTags\" readOnly={true} value={item.addTags} />\n                                                            <button type=\"button\" className=\"input-group-text svg-icon svg-icon-7 me-0 px-2 text-gray-800\" id=\"enterTags\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                                    <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\n                                                                </svg>\n                                                            </button>\n                                                        </Dropdown.Toggle>\n                                                        <Dropdown.Menu className=\"popover p-2 bg-light position-absolute start-0 top-0 w-100 rounded-1 box-shadow\">\n                                                            <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                                                                <div className=\"fs-9 fw-semibold text-gray-800\">Add Tags</div>\n                                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Reset</Tooltip>}>\n                                                                    <button type=\"button\" className=\"btn btn-sm btn-icon btn-active-light btn-active-color-primary p-0 h-24px w-24px\">\n                                                                        <span className=\"svg-icon svg-icon-7 me-0\">\n                                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                                                <path d=\"M5.828 7l2.536 2.536L6.95 10.95 2 6l4.95-4.95 1.414 1.414L5.828 5H13a8 8 0 1 1 0 16H4v-2h9a6 6 0 1 0 0-12H5.828z\" fill=\"currentColor\" />\n                                                                            </svg>\n                                                                        </span>\n                                                                    </button>\n                                                                </OverlayTrigger>\n                                                            </div>\n                                                            <textarea className=\"form-control form-control-sm textarea-min-row-4\" onChange={onAddTagSingle(uIndex)}>\n                                                                {\n                                                                    item.addTags\n                                                                }\n                                                            </textarea>\n                                                            <div className=\"w-100 d-flex justify-content-end pt-2\">\n                                                                <button type=\"submit\" className=\"btn btn-xs btn-primary\">Done</button>\n                                                            </div>\n                                                        </Dropdown.Menu>\n                                                    </Dropdown>\n                                                    <Dropdown className=\"position-relative\">\n                                                        <Dropdown.Toggle variant='btn' className=\"d-flex input-group p-0 arrow_disabled\">\n                                                            <input type=\"text\" className=\"form-control form-control-sm fs-10\" style={{ minHeight: 30 }} placeholder=\"Enter Caption...\" aria-label=\"Enter Caption...\" aria-describedby=\"mediaCaption\" readOnly={true} value={item.caption} />\n                                                            <button type=\"button\" className=\"input-group-text svg-icon svg-icon-7 me-0 px-2 text-gray-800\" id=\"mediaCaption\">\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                                    <path d=\"M16.757 3l-2 2H5v14h14V9.243l2-2V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12.757zm3.728-.9L21.9 3.516l-9.192 9.192-1.412.003-.002-1.417L20.485 2.1z\" fill=\"currentColor\" />\n                                                                </svg>\n                                                            </button>\n                                                        </Dropdown.Toggle>\n                                                        <Dropdown.Menu className=\"popover p-2 bg-light position-absolute start-0 top-0 w-100 rounded-1 box-shadow\">\n                                                            <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                                                                <div className=\"fs-9 fw-semibold text-gray-800\">Add Caption</div>\n                                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Reset</Tooltip>}>\n                                                                    <button type=\"button\" className=\"btn btn-sm btn-icon btn-active-light btn-active-color-primary p-0 h-24px w-24px\">\n                                                                        <span className=\"svg-icon svg-icon-7 me-0\">\n                                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                                                <path d=\"M5.828 7l2.536 2.536L6.95 10.95 2 6l4.95-4.95 1.414 1.414L5.828 5H13a8 8 0 1 1 0 16H4v-2h9a6 6 0 1 0 0-12H5.828z\" fill=\"currentColor\" />\n                                                                            </svg>\n                                                                        </span>\n                                                                    </button>\n                                                                </OverlayTrigger>\n                                                            </div>\n                                                            <textarea className=\"form-control form-control-sm textarea-min-row-4\" onChange={onCaptionSingle(uIndex)}>\n                                                                {item.caption}\n                                                            </textarea>\n                                                            <div className=\"w-100 d-flex justify-content-end pt-2\">\n                                                                <button type=\"submit\" className=\"btn btn-xs btn-primary\">Done</button>\n                                                            </div>\n                                                        </Dropdown.Menu>\n                                                    </Dropdown>\n                                                    <div className=\"d-flex flex-wrap justify-content-between pt-2\">\n                                                        <label className=\"text-gray-800 fs-9 pe-2\">Copyright</label>\n                                                        <div className=\"d-flex align-items-center\">\n                                                            <div className=\"form-check me-3\">\n                                                                <input className=\"form-check-input\" type=\"radio\" id=\"copyrightPostYes\" checked={item.copyright == true ? true : false} onClick={onCopyRightSingle(uIndex, true)} />\n                                                                <label className=\"form-check-label fs-9\" htmlFor=\"copyrightPostYes\">Yes</label>\n                                                            </div>\n                                                            <div className=\"form-check\">\n                                                                <input className=\"form-check-input\" type=\"radio\" id=\"copyrightPostNo\" checked={item.copyright == false ? true : false} onClick={onCopyRightSingle(uIndex, false)} />\n                                                                <label className=\"form-check-label fs-9\" htmlFor=\"copyrightPostNo\">No</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            })\n                        }\n\n                    </div> : null}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createAssets: (data, callback) => dispatch(createAssets(data, callback)),\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadedAssets);"],"names":["UploadedAssets","onClickUploaded","event","props","collection","uploadedData","length","assets","map","item","push","content","postFile","copyrights","mediaHeight","mediaWidth","tags","addTags","data","value","createAssets","onCallBack","editMediaHandleCallback","history","setTimeout","this","selected","onClickTORemovePost","onClickTOCheckPost","updateStatusC","updateStatus","updateStatusTag","updateStatusCopy","captionStatus","tagsStatus","copyrightStatus","onChangeCaption","onChangeTags","onChangeCopyRight","captionText","tagstext","copyrightValue","onClickToAllCheck","checkAll","onCaptionSingle","onAddTagSingle","onCopyRightSingle","className","type","onClick","modalToggle","name","htmlFor","id","placeholder","rows","onChange","uIndex","checked","xmlns","viewBox","d","fill","mediaType","socialNetwork","textContent","rating","variant","style","minHeight","readOnly","width","height","placement","overlay","caption","copyright","postId","Component","connect","state","dispatch","callback"],"sourceRoot":""}