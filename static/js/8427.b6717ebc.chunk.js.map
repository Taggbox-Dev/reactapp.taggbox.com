{"version":3,"file":"static/js/8427.b6717ebc.chunk.js","mappings":"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","sources":["Layouts/Main/PublishCommonComponents/EmbedCode.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Tab, Nav, OverlayTrigger, Tooltip, Dropdown, InputGroup, DropdownButton, Form } from 'react-bootstrap';\nimport { COPY_TO_CLIPBOARD } from '../../../Services/Utils/utils';\nconst ShareEmbedModal = React.lazy(() => import('./ShareEmbedModal'));\n\n\nclass EmbedCode extends Component {\n    constructor() {\n        super();\n        this.state = { showModal: false, codeCopied: false };\n    }\n    shareEmbedModal = event => this.setState({\n        showModal: true\n    })\n    shareEmbedCallback = (shareEmbedEvent) => {\n        this.setState({\n            showModal: shareEmbedEvent\n        })\n    }\n\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { codeCopied, showModal } = this.state\n        const { copyText } = this.props\n        return <div className=\"embed_code\">\n            <div className=\"mb-5\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Width</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={100} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\n                                <Dropdown.Item href=\"#\">Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Viewport Width (VW)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                    <div className=\"col\">\n                        <InputGroup>\n                            <InputGroup.Text>Height</InputGroup.Text>\n                            <Form.Control type=\"number\" defaultValue={100} />\n                            <DropdownButton align=\"end\" variant=\"outline-secondary\" title=\"%\">\n                                <Dropdown.Item href=\"#\">Percent (%)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Pixel (PX)</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Viewport Height (VH)</Dropdown.Item>\n                            </DropdownButton>\n                        </InputGroup>\n                    </div>\n                </div>\n            </div>\n            <h5 className=\"mb-3 h6\">{copyText}</h5>\n            <div className=\"p-3 bg-light rounded-1 mb-5\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"liteCodeEmbed_\">\n                    <Nav variant=\"nav\" className=\"mb-3\">\n                        <Nav.Item className=\"me-4\">\n                            <Nav.Link eventKey=\"liteCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Lite Code\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item className=\"\">\n                            <Nav.Link eventKey=\"iframeCodeEmbed_\" className=\"px-0 fw-semibold\">\n                                Iframe\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"liteCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCode_\" onClick={() => { this.codeCopy('embedCode_') }} style={{wordBreak: 'break-all'}}>\n                                    &lt;div class=\"taggbox-suite\" data-widget-id=\"104917\" style=\"width:100%;height:100%\"&gt;&lt;/div&gt;\n                                    &lt;script src=\"https://widget.taggbox.com/embed-lite.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCode_') }}>\n                                            {!codeCopied ?\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\n                                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\n                                                </svg>\n                                                :\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"#6AC259\" />\n                                                </svg>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20.765 16.086\">\n                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-946.936-459.319A3.066,3.066,0,0,1-950-462.383V-471.3l9.755,5.956a1.179,1.179,0,0,0,1.227,0l9.783-5.956v8.917a3.066,3.066,0,0,1-3.065,3.065ZM-949.9-473a3.047,3.047,0,0,1,2.966-2.4H-932.3a3.045,3.045,0,0,1,2.965,2.4l-10.27,6.275Z\" transform=\"translate(950 475.404)\" fill=\"currentColor\" />\n                                            </svg>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"iframeCodeEmbed_\">\n                            <div className=\"mb-2 mb-xl-3 position-relative\">\n                                <code className=\"form-control textarea-min-row-4 p-lg-4\" id=\"embedCodeIframe_\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                    &lt;iframe src=\"https://widget.taggbox.com/104917\" style=\"width:100%;height:600px;border:none;\"&gt;&lt;/iframe&gt;\n                                </code>\n                                <div className=\"emebed_action position-absolute end-0 bottom-0 pe-2 pb-2\">\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>{!codeCopied ? 'Copy Code' : 'Code Copied'}</Tooltip>}>\n                                        <button type=\"button\" className=\"btn text-gray-500 p-0 me-2\" onClick={() => { this.codeCopy('embedCodeIframe_') }}>\n                                            {!codeCopied ?\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 18.17 18.17\">\n                                                    <path id=\"Path_2\" data-name=\"Path 2\" d=\"M-932.08-463.83a2.92,2.92,0,0,1-2.92-2.92v-9.086a2.924,2.924,0,0,1,1.947-2.752v9.567a3.245,3.245,0,0,0,3.245,3.244h9.567a2.924,2.924,0,0,1-2.753,1.947Zm3.245-3.244a2.92,2.92,0,0,1-2.92-2.921v-9.085a2.92,2.92,0,0,1,2.92-2.92h9.086a2.92,2.92,0,0,1,2.92,2.92V-470a2.92,2.92,0,0,1-2.92,2.921Z\" transform=\"translate(935 482)\" fill=\"currentColor\" />\n                                                </svg>\n                                                :\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\n                                                    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                    <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" fill=\"#6AC259\" />\n                                                </svg>\n                                            }\n                                        </button>\n                                    </OverlayTrigger>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Share Code</Tooltip>}>\n                                        <button className=\"btn text-gray-500 p-0 GetShareCode\" type=\"button\" onClick={this.shareEmbedModal}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20.765 16.086\">\n                                                <path id=\"Path_1\" data-name=\"Path 1\" d=\"M-946.936-459.319A3.066,3.066,0,0,1-950-462.383V-471.3l9.755,5.956a1.179,1.179,0,0,0,1.227,0l9.783-5.956v8.917a3.066,3.066,0,0,1-3.065,3.065ZM-949.9-473a3.047,3.047,0,0,1,2.966-2.4H-932.3a3.045,3.045,0,0,1,2.965,2.4l-10.27,6.275Z\" transform=\"translate(950 475.404)\" fill=\"currentColor\" />\n                                            </svg>\n                                        </button>\n                                    </OverlayTrigger>\n                                </div>\n                            </div>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            <Suspense fallback={<></>}>\n                <ShareEmbedModal shareEmbedCallback={this.shareEmbedCallback} shareEmbedModal={showModal} />\n            </Suspense>\n        </div>\n\n    }\n}\n\nexport default EmbedCode;"],"names":["ShareEmbedModal","React","EmbedCode","shareEmbedModal","event","setState","showModal","shareEmbedCallback","shareEmbedEvent","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","state","this","copyText","props","className","type","defaultValue","align","variant","title","href","defaultActiveKey","eventKey","onClick","style","wordBreak","placement","overlay","xmlns","viewBox","width","height","fill","d","transform","Suspense","fallback","Component"],"sourceRoot":""}