{"version":3,"file":"static/js/9977.d27e5d10.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/AddAssetsModal.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport GetRightsCopyUrl from '../GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl';\n//import PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst UploadedAssets = React.lazy(() => import('./Compontnets/UploadedAssets'));\n\nconst UploadAssets = React.lazy(() => import('./Compontnets/UploadAssets'));\n\nclass AddAssetsModal extends Component {\n    constructor() {\n        super();\n    }\n    state = {\n        collection: null,\n        showModalType: 'uploadAssets', isUploaded: false, uploadedData: [{\n            checked: false, postFile:\n                \"https://cloud.taggbox.com/onsiteupload/images/9fe99dce43c346168f7388faf13de61f\", postId: \"9fe99dce43c346168f7388faf13de61f\", addTags: \"\", caption: \"\", copyright: false, content: \"\", \"mediaHeight\": 499, \"mediaWidth\": 499\n        }, {\n            checked: false, postFile:\n                \"https://cloud.taggbox.com/onsiteupload/images/9fe99dce43c346168f7388faf13de61f\", postId: \"9fe99dce43c346168f7388faf13de61f\", addTags: \"\", caption: \"\", copyright: false, content: \"\", \"mediaHeight\": 499, \"mediaWidth\": 499\n        }], selected: 0, checkAll: false,\n        captionStatus: false,\n        captionText: \"\",\n        tagsStatus: false,\n        tagstext: \"\",\n        copyrightStatus: false,\n        copyrightValue: false,\n        collectionError: false\n    };\n\n    updateStatusC = event => {\n        const { uploadedData, captionText } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.caption = captionText\n                else item.caption = \"\"\n            }\n            else {\n                item.caption = \"\"\n            }\n        })\n\n        this.setState({\n            captionStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusTag = event => {\n        const { uploadedData, tagstext } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.addTags = tagstext\n                else item.addTags = \"\"\n            }\n            else {\n                item.addTags = \"\"\n            }\n        })\n\n        this.setState({\n            tagsStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusCopy = event => {\n        const { uploadedData, copyrightValue } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.copyright = copyrightValue\n                else item.copyright = false\n            }\n            else {\n                item.copyright = false\n            }\n        })\n\n        this.setState({\n            copyrightStatus: event.target.checked, uploadedData\n        })\n    }\n\n    onChangeCaption = event => {\n        const { uploadedData, captionStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (captionStatus) item.caption = event.target.value\n                else item.caption = \"\"\n            }\n            else {\n                item.caption = \"\"\n            }\n        })\n        this.setState({ captionText: event.target.value, uploadedData })\n    }\n\n    onLoadAddCaption = () => {\n        var { uploadedData, captionText, captionStatus } = this.state;\n        console.log(\"captionStatus\", captionStatus)\n        if (captionStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    uploadedData[index].caption = captionText\n                    //item.caption = captionText\n                }\n                else {\n                    uploadedData[index].caption = \"\"\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n\n    }\n\n    onChangeTags = event => {\n        const { uploadedData, tagsStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (tagsStatus) item.addTags = event.target.value\n                else item.addTags = \"\"\n            }\n            else {\n                item.addTags = \"\"\n            }\n        })\n\n        this.setState({ tagstext: event.target.value, uploadedData })\n    }\n    onLoadTags = () => {\n        var { uploadedData, tagstext, tagsStatus } = this.state;\n        if (tagsStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    console.log(\"sadas\", tagstext)\n                    uploadedData[index].addTags = tagstext\n                    //item.addTags = tagstext\n                }\n                else {\n                    uploadedData[index].addTags = \"\"\n                }\n            })\n        }\n        console.log(\"uploadedDatauploadedData\", uploadedData)\n        this.setState({ uploadedData })\n    }\n    onChangeCopyRight = (value) => event => {\n        const { uploadedData, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (copyrightStatus) item.copyright = value\n                else item.copyright = false\n            }\n            else {\n                item.copyright = false\n            }\n        })\n        this.setState({ copyrightValue: value, uploadedData })\n    }\n    onLoadCopyRight = () => {\n\n        var { uploadedData, copyrightValue, copyrightStatus } = this.state;\n        if (copyrightStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    //item.copyright = copyrightValue\n                    uploadedData[index].copyright = copyrightValue\n                }\n                else {\n                    uploadedData[index].copyright = false\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n    }\n\n    handleClose = () => {\n        this.props.editMediaHandleCallback(false)\n    };\n\n    showModalTypeCallback = (showModalType) => {\n        this.setState({\n            showModalType: showModalType\n        })\n    }\n    isUploaded = () => {\n        const { collection } = this.state\n        if (collection) {\n            this.setState({\n                isUploaded: !this.state.isUploaded\n            })\n        }\n        else {\n            this.setState({\n                collectionError: true\n            })\n\n        }\n    }\n    onUploadedData = (newObject) => {\n        const { uploadedData } = this.state;\n        uploadedData.push(newObject)\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n    onSelectedCollection = (newObject) => {\n        this.setState({ collection: newObject, collectionError: false })\n    }\n\n    onClickTORemovePost = (postIndex) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1) {\n            uploadedData.splice(postIndex, 1);\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n    onClickTOCheckPost = (postIndex) => event => {\n        let { uploadedData, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n\n\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            if (uploadedData[postIndex].checked) {\n                uploadedData[postIndex].checked = false\n                uploadedData[postIndex].caption = \"\"\n                uploadedData[postIndex].addTags = \"\"\n                uploadedData[postIndex].copyright = false\n            }\n            else {\n                uploadedData[postIndex].checked = true\n                if (captionStatus) uploadedData[postIndex].caption = captionText\n                if (tagsStatus) uploadedData[postIndex].addTags = tagstext\n                if (copyrightStatus) uploadedData[postIndex].copyright = copyrightValue\n            }\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n\n    onloadCheckedPostCount = () => {\n        const { uploadedData } = this.state;\n        var count = uploadedData.filter((item) => item.checked == true).length;\n        this.setState({ selected: count })\n    }\n    onClickToAllCheck = event => {\n        const { uploadedData, checkAll, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            item.checked = !checkAll\n            if (!checkAll == true) {\n                if (captionStatus) item.caption = captionText\n                if (tagsStatus) item.addTags = tagstext\n                if (copyrightStatus) item.copyright = copyrightValue\n            }\n            else {\n                item.caption = \"\"\n                item.addTags = \"\"\n                item.copyright = \"\"\n            }\n\n        })\n\n\n        this.setState({\n            uploadedData, selected: uploadedData.length, checkAll: !checkAll\n        })\n    }\n\n    onCaptionSingle = (postIndex) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].caption = event.target.value\n            this.setState({ uploadedData })\n        }\n\n    }\n    onAddTagSingle = (postIndex) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].addTags = event.target.value\n        }\n        this.setState({ uploadedData })\n    }\n    onCopyRightSingle = (postIndex, value) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].copyright = value\n        }\n        this.setState({ uploadedData })\n    }\n    render() {\n        const { editMediaToggle, history } = this.props\n        const { isUploaded, uploadedData, collection } = this.state\n        console.log(\"new UPload data\", uploadedData, collection)\n\n        return <Modal size={'full'} show={editMediaToggle} className=\"addAssetsModal border-0\" backdrop={false}>\n            <Modal.Header className=\"border-0 p-0 w-100\">\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 bg-white w-100\">\n                    {!isUploaded ?\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Choose Source</h1>\n                        </div>\n                        :\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <button type=\"button\" className=\"btn btn-icon btn-sm me-2\" onClick={() => this.isUploaded()}>\n                                <span className=\"svg-icon text-dark\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M7.828 11H20v2H7.828l5.364 5.364-1.414 1.414L4 12l7.778-7.778 1.414 1.414z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Fill required assets information</h1>\n                        </div>\n                    }\n                    <div className=\"d-flex align-items-center\">\n                        <button type=\"button\" className=\"btn-close text-light\" onClick={this.handleClose}></button>\n                    </div>\n                </div>\n\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex align-items-start border-0 flex-wrap w-100\">\n                <div className=\"assetsModalScroll w-100\">\n                    {!isUploaded ?\n                        <Suspense fallback={<div>Loading...</div>}><UploadAssets getAssetsCallback={this.isUploaded} onUploadedData={this.onUploadedData} uploadedData={this.state.uploadedData} onSelectedCollection={this.onSelectedCollection} collection={collection} collectionError={this.state.collectionError} /></Suspense>\n                        :\n                        <Suspense fallback={<div>Loading...</div>}><UploadedAssets uploadedData={uploadedData} selected={this.state.selected} onClickTORemovePost={this.onClickTORemovePost} onClickTOCheckPost={this.onClickTOCheckPost} updateStatusC={this.updateStatusC} updateStatusTag={this.updateStatusTag} updateStatusCopy={this.updateStatusCopy} captionStatus={this.state.captionStatus} tagsStatus={this.state.tagsStatus} copyrightStatus={this.state.copyrightStatus} onChangeCaption={this.onChangeCaption}\n                            onChangeTags={this.onChangeTags}\n                            onChangeCopyRight={this.onChangeCopyRight} captionText={this.state.captionText} tagstext={this.state.tagstext} copyrightValue={this.state.copyrightValue} onClickToAllCheck={this.onClickToAllCheck} checkAll={this.state.checkAll} collection={collection} history={history} editMediaHandleCallback={this.props.editMediaHandleCallback} onCaptionSingle={this.onCaptionSingle} onAddTagSingle={this.onAddTagSingle} onCopyRightSingle={this.onCopyRightSingle} /></Suspense>\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n    }\n}\n\nexport default AddAssetsModal;\n","import React, { Component } from \"react\";\nimport { COPY_TO_CLIPBOARD } from \"../../../../../../Services/Utils/utils\";\n\nclass GetRightsCopyUrl extends Component {\n    constructor() {\n        super();\n        this.state = { codeCopied: false };\n    }\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { codeCopied } = this.state\n        const { requestedRespone, comment } = this.props\n        console.log(\"requestedRespone---sudarshan\", requestedRespone)\n        return requestedRespone && Object.keys(requestedRespone).length > 0 ? <div className=\"p-lg-6 p-3\">\n            <h5 className=\"mb-2 pt-1 text-center\">Your UGC Request Sharing URL</h5>\n            <p className=\"text-muted text-center\">Copy and paste link in the comments or original post</p>\n            <div className=\"mb-6\">\n                <textarea type=\"text\" className=\"form-control form-control-lg textarea-min-row-3 bg-light\" rows={4} placeholder=\"Add Comment\" defaultValue={comment} readOnly />\n            </div>\n            <div className=\"mb-6\">\n                <div className=\"input-group mb-4\">\n                    <div className=\"input-group-text\">\n                        <span className=\"svg-icon svg-icon-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                <path d=\"M13.06 8.11l1.415 1.415a7 7 0 0 1 0 9.9l-.354.353a7 7 0 0 1-9.9-9.9l1.415 1.415a5 5 0 1 0 7.071 7.071l.354-.354a5 5 0 0 0 0-7.07l-1.415-1.415 1.415-1.414zm6.718 6.011l-1.414-1.414a5 5 0 1 0-7.071-7.071l-.354.354a5 5 0 0 0 0 7.07l1.415 1.415-1.415 1.414-1.414-1.414a7 7 0 0 1 0-9.9l.354-.353a7 7 0 0 1 9.9 9.9z\" fill=\"currentColor\" />\n                            </svg>\n                        </span>\n                    </div>\n                    <input type=\"text\" id=\"ugc_rights_url_\" className=\"form-control form-control-lg\" defaultValue={requestedRespone.bitlylink} readOnly />\n                </div>\n                <button type=\"button\" className=\"btn btn-primary btn-lg w-100\" onClick={() => { this.codeCopy('ugc_rights_url_') }}>\n                    {codeCopied ? 'Copied' : 'Copy URL'}\n                </button>\n            </div>\n            <div className=\"mb-6\">\n                <h6>Steps to proceed</h6>\n                <ul className=\"list-unstyled list-points fs-7\">\n                    <li className=\"mb-3\">You have successfully generated a \"UGC Request\" for this post.</li>\n                    <li className=\"mb-3\">Quickly review your Request before sending it to the owner.</li>\n                    <li className=\"mb-3\">Click on the \"Generate Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\n                    <li className=\"mb-3\">Paste the link of \"UGC Request\" in the comments section of the original post.</li>\n                    <li className=\"mb-3\">You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\n                </ul>\n            </div>\n        </div> : null\n    }\n}\n\nexport default GetRightsCopyUrl;"],"names":["UploadedAssets","React","UploadAssets","AddAssetsModal","state","collection","showModalType","isUploaded","uploadedData","checked","postFile","postId","addTags","caption","copyright","content","selected","checkAll","captionStatus","captionText","tagsStatus","tagstext","copyrightStatus","copyrightValue","collectionError","updateStatusC","event","map","item","target","setState","updateStatusTag","updateStatusCopy","onChangeCaption","value","onLoadAddCaption","console","log","index","onChangeTags","onLoadTags","onChangeCopyRight","onLoadCopyRight","handleClose","props","editMediaHandleCallback","showModalTypeCallback","onUploadedData","newObject","push","onloadCheckedPostCount","onSelectedCollection","onClickTORemovePost","postIndex","splice","onClickTOCheckPost","count","filter","length","onClickToAllCheck","onCaptionSingle","onAddTagSingle","onCopyRightSingle","this","editMediaToggle","history","size","show","className","backdrop","type","onClick","xmlns","viewBox","width","height","fill","d","Suspense","fallback","getAssetsCallback","Component","GetRightsCopyUrl","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","requestedRespone","comment","Object","keys","rows","placeholder","defaultValue","readOnly","bitlylink"],"sourceRoot":""}