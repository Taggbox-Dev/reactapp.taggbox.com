{"version":3,"file":"static/js/7057.fc10616f.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/Compontnets/UploadAssets.js"],"sourcesContent":["\r\nimport React, { Component, Suspense } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport Uppy from \"@uppy/core\";\r\nimport { Dashboard } from \"@uppy/react\";\r\nimport Transloadit from \"@uppy/transloadit\";\r\nimport GoogleDrive from \"@uppy/google-drive\";\r\nimport Instagram from \"@uppy/instagram\";\r\nimport Url from \"@uppy/url\";\r\nimport Webcam from \"@uppy/webcam\";\r\n\r\n\r\n\r\nconst NeedSupport = React.lazy(() => import('../../../CommonComponents/NeedSupport'));\r\nconst AddFeedByNetwork = React.lazy(() => import('./Elements/AddFeedByNetwork'));\r\nconst Networks = React.lazy(() => import('./Elements/Networks'));\r\nconst ChooseCollection = React.lazy(() => import('./Elements/ChooseCollection'));\r\nconst AssetsUploader = React.lazy(() => import('./Elements/AssetsUploader'));\r\nconst OnsiteUpload = React.lazy(() => import('./Elements/OnsiteUpload'));\r\n\r\n\r\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\r\nconst uppyBucket = 'cloud.taggbox.com';\r\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\r\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\r\n\r\n\r\nconst companionUrl = 'https://test.taggbox.com';\r\n\r\nconst uppyPostEdit = new Uppy({\r\n    id: \"editA\",\r\n    debug: true,\r\n    autoProceed: true,\r\n    restrictions: {\r\n        maxFileSize: 5000000,\r\n        maxNumberOfFiles: 500,\r\n        minNumberOfFiles: 1,\r\n        allowedFileTypes: [\"image/*\"],\r\n    },\r\n});\r\n\r\nuppyPostEdit.use(Transloadit, {\r\n    target: \"#a\",\r\n    params: {\r\n        auth: {\r\n            key: uppyKey,\r\n        },\r\n        steps: {\r\n            resize: {\r\n                robot: \"/image/resize\",\r\n                width: 500,\r\n                resize_strategy: \"fit\",\r\n                background: \"none\",\r\n            },\r\n            store: {\r\n                robot: \"/wasabi/store\",\r\n                bucket_region: \"us-west-1\",\r\n                bucket: uppyBucket,\r\n                key: uppyAwsKey,\r\n                secret: uppyAwsSecret,\r\n                path: 'onsiteupload/images/${file.id}'\r\n            },\r\n        },\r\n    },\r\n    waitForEncoding: true,\r\n});\r\nuppyPostEdit.use(Instagram, {\r\n    target: Uppy.Dashboard,\r\n    companionUrl: companionUrl,\r\n});\r\nuppyPostEdit.use(GoogleDrive, {\r\n    target: Uppy.Dashboard,\r\n    companionUrl: companionUrl,\r\n});\r\nuppyPostEdit.use(Url, { target: Uppy.Dashboard, companionUrl: companionUrl });\r\nuppyPostEdit.use(Webcam, {\r\n    target: Uppy.Dashboard,\r\n    companionUrl: companionUrl,\r\n});\r\nclass UploadAssets extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { uploadTypeSec: 'uploadAssets' };\r\n    }\r\n\r\n    uploadType = (uploadTypeVal) => {\r\n        this.setState({\r\n            uploadTypeSec: uploadTypeVal\r\n        })\r\n    }\r\n    getAssets = () => {\r\n        this.props.getAssetsCallback()\r\n    };\r\n    onCancelUpload = event => {\r\n        const { uploadedData } = this.props\r\n        if (uploadedData && uploadedData.length > 0) {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You want to  discard changes!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes, discard changes!'\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    const { onClearUPloadObject } = this.props\r\n                    uppyPostEdit.cancelAll()\r\n                    onClearUPloadObject([])\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.editMediaHandleCallback(false)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { uploadTypeSec } = this.state;\r\n        const { uploadedData, collectionError } = this.props\r\n\r\n        return <div className=\"container container-xs\">\r\n            <div className=\"block-center flex-column view-sm-h\">\r\n                <div className=\"addSource d-flex align-items-stretch flex-column flex-lg-row w-100\">\r\n                    <div className=\"addSourceNetwork d-flex flex-column flex-shrink-0 pe-lg-4\">\r\n                        <div className=\"card mb-xxl-4 mb-3\">\r\n                            <div className=\"card-body px-2\">\r\n                                <Suspense fallback={<></>}>\r\n                                    <Networks uploadTypeCallback={this.uploadType} />\r\n                                </Suspense>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1 w-100 mb-3\">\r\n                        <div className=\"\">\r\n                            <h6 className=\"fs-7 mb-3\">Select the collection where you want to put your data</h6>\r\n                            <div className=\"mb-3\" style={{ maxWidth: 300 }}>\r\n                                <Suspense fallback={<></>}>\r\n                                    <ChooseCollection {...this.props} />\r\n                                </Suspense>\r\n                                {\r\n                                    collectionError ? <span className=\"text-danger\">Please select collection.</span> : null\r\n                                }\r\n                            </div>\r\n                            {uploadTypeSec === 'uploadAssets' ?\r\n                                <Suspense fallback={<></>}>\r\n                                    <AssetsUploader {...this.props} uppyPostEdit={uppyPostEdit} />\r\n                                </Suspense>\r\n                                : uploadTypeSec === 'onsite-upload' ?\r\n                                    <Suspense fallback={<></>}>\r\n                                        <OnsiteUpload />\r\n                                    </Suspense>\r\n                                    : uploadTypeSec === 'byNetwork' ?\r\n                                        <Suspense fallback={<></>}>\r\n                                            <AddFeedByNetwork />\r\n                                        </Suspense>\r\n                                        : null\r\n                            }\r\n\r\n                            <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\r\n                                <Suspense fallback={<></>}>\r\n                                    <NeedSupport content={'Need Help'} supportUrl={'#'} videoUrl={'#'} />\r\n                                </Suspense>\r\n                                <div className=\"my-1 d-flex align-items-center justify-content-end flex-wrap\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary me-3\" onClick={this.onCancelUpload}>Cancel</button>\r\n                                    <button type=\"button\" className={`btn btn-primary ${uploadedData && uploadedData.length > 0 ? `` : `disabled`}`} onClick={() => this.getAssets()}>Fetch Assets {uploadedData && uploadedData.length > 0 ? `(${uploadedData.length})` : ``}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default UploadAssets;"],"names":["NeedSupport","React","AddFeedByNetwork","Networks","ChooseCollection","AssetsUploader","OnsiteUpload","companionUrl","uppyPostEdit","Uppy","id","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","Transloadit","target","params","auth","key","steps","resize","robot","width","resize_strategy","background","store","bucket_region","bucket","secret","path","waitForEncoding","Instagram","GoogleDrive","Url","Webcam","UploadAssets","uploadType","uploadTypeVal","setState","uploadTypeSec","getAssets","props","getAssetsCallback","onCancelUpload","event","uploadedData","length","Swal","title","text","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","onClearUPloadObject","cancelAll","editMediaHandleCallback","state","this","collectionError","className","Suspense","fallback","uploadTypeCallback","style","maxWidth","content","supportUrl","videoUrl","type","onClick","Component"],"sourceRoot":""}