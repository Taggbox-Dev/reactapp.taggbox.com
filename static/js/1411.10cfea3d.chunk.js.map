{"version":3,"file":"static/js/1411.10cfea3d.chunk.js","mappings":"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","sources":["Layouts/Main/SocialPublish/Components/SocialPublishAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport SVG from 'react-inlinesvg'\nimport { baseUrl } from '../../../../Assets/AssetsHelper';\nimport { getPublishList } from '../../../../Services/Actions/publishActions';\nimport Filters from '../../WebEmbed/Components/Filters';\nimport { publishNetworks, publishSize, publishSrchFilter } from '../../../../Services/Utils/config';\n\nconst options = publishSrchFilter()\nconst publishOptions = publishNetworks()\nconst sizeOptions = publishSize()\nclass SocialPublishAside extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showModal: false,\n            campaignType: 'HashtagCampaign',\n            publishList: []\n        };\n    }\n    componentDidMount() {\n        //this.onLoadPublish()\n    }\n    onLoadPublish = () => {\n        var self = this\n        getPublishList().then((loadReponse) => {\n            self.setState({ publishList: loadReponse.data })\n        }).catch(ex=>{})\n    }\n\n    campaignTypeFun = event => this.props.campaignTypeCallback(event)\n\n    render() {\n        const { filterApply, state, onClickConnectWith, onClickmediaSize, onClickPublishType, onChangeDescription, onSelectActive, onSelectAccordionActive } = this.props\n        return <><div className='filter_wrapper social_publish__'>\n            <Accordion defaultActiveKey={1} activeKey={state.activeKey} onSelect={onSelectActive(1) ? onSelectActive(1) : null}>\n                <Accordion.Item eventKey={1} className=\"pb-3\">\n                    <Accordion.Header className=\"add_fillter_btn\">\n                        <i className=\"ri-add-line plus_symbol me-1\"></i>\n                        <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                        <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1 choose_filter\">\n                        {options.map((item,index) => {\n                            return <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(item.type) ? `d-none disabled` : ``}`} onClick={filterApply(item.type)}>\n                                <div className=\"symbol symbol-28 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        {index == 1 || index == 2 || index == 7 ? <span className=\"svg-icon svg-icon-7 text-gray-800 me-0\">\n                                            <SVG src={baseUrl(`media/icons/svg-icons/${item.icon}.svg`)} height={18} width={18} />\n                                        </span>\n                                        : <i className={`${item.icon} icon-7 text-gray-800`}></i>}\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column\">\n                                    <p className={`fs-9 fw-medium mb-0 text-gray-800`}>{item.name}</p>\n                                    <span className=\"fs-10 text-gray-500\">{item.desc}</span>\n                                </div>\n                            </div>\n                        })}\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n            {\n                state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} isLast={Object.keys(state.chooseFilter)[Object.keys(state.chooseFilter).length - 1]} />)\n            }\n            <Accordion activeKey={state.accordionKey} onSelect={onSelectAccordionActive}>\n                <label className=\"text-gray-800 mb-2\">Select Network</label>\n                <Accordion.Item eventKey=\"7\" className=\"pb-3\">\n                    <Accordion.Header className=\"w-100\">\n                        <span className=\"fs-9 fw-medium\">{state.connectWith == 1 ? `Twitter` : state.connectWith == 18 ? `Instagram` : state.connectWith == 3 ? `Facebook` : `Choose Preferred Social`}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <div className=\"\">\n                            {publishOptions.map(item => {\n                                return <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={item.type}>\n                                    <span className=\"symbol symbol-22\">\n                                        <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/${item.icon}.svg`)} height={20} width={20} alt={item.type} />\n                                    </span>\n                                    <span className=\"form-check-label text-gray-800 text-ellipsis\">{item.name}</span>\n                                </label>\n                                <input className=\"form-check-input flex-shrink-0\" type=\"radio\" name=\"network\" checked={state.connectWith == item.id ? true : false} id={item.type} onClick={onClickConnectWith(item.id)} />\n                            </div>\n                            })}\n                        </div>\n                    </Accordion.Body>\n                </Accordion.Item>\n                <label className=\"text-gray-800 mb-2\">Asset Type</label>\n                <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                    <Accordion.Header>\n                        <span className=\"fs-9 fw-medium\">{state.publishType == 1 ? `Single Image or Video` : `Choose Content Type`} </span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer cursor-pointer\">\n                            <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"singleMedia\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"publishType\" value=\"singleMedia\" id=\"singleMedia\" checked={state.publishType == 1 ? true : false} onClick={onClickPublishType(1)} />\n                                <div className=\"navi-text ms-2\">\n                                    <p className=\"fs-9 fw-medium mb-0\">Single Image or Video</p>\n                                </div>\n                            </label>\n                        </div>\n                    </Accordion.Body>\n                </Accordion.Item>\n\n                <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                    <Accordion.Header>\n                        <span className=\"fs-9 fw-medium\">{state.mediaSize == 1 ? `1:1` : state.mediaSize == 16 ? `16:9` : state.mediaSize == 0 ? `Default Size` : `Media Size`}</span>\n                    </Accordion.Header>\n                    <Accordion.Body className=\"border rounded-1 mt-1\">\n                        {sizeOptions.map(item => {\n                            return <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor={item.type}>\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"imageSize\" value={item.type} id={item.type} onClick={onClickmediaSize(item.size)} checked={state.mediaSize == item.size ? true : false} />\n                                    <div className=\"navi-text ms-2\">\n                                        <p className=\"fs-9 fw-medium mb-0\">{item.name}</p>\n                                    </div>\n                                </label>\n                            </div>\n                        })}\n                    </Accordion.Body>\n                </Accordion.Item>\n                <label className=\"text-gray-800 mb-2\">Description</label>\n                <div className=\"w-100 mb-2\">\n                    <textarea className=\"form-control textarea-min-row-5 fs-9\" row={5} onChange={onChangeDescription} value={state.selectedPost ? state.selectedPost.content : null}></textarea>\n                    <span className=\"fs-10 text-gray-500\">Description must be under 280 characters.</span>\n                </div>\n            </Accordion>\n\n        </div>\n        </>\n    }\n}\n\nexport default SocialPublishAside;\n\n{\n    /*\n    \n     <div className=\"card-body pe-1\">\n            <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                <h6 className=\"fs-7 fw-bolder mb-0\">Select Filter</h6>\n            </div>\n            <div className=\"social_aside_inner\">\n                <Accordion defaultActiveKey={\"0\"}>\n                    {\n                        state.chooseFilter && Object.keys(state.chooseFilter).map((filterKey, indexFilter) => <Filters filterKey={filterKey} {...this.props} indexFilter={indexFilter} />)\n                    }\n\n                    <Accordion.Item eventKey=\"0\" className=\"pb-3\">\n                        <Accordion.Header className=\"add_fillter_btn\">\n                            <i className=\"ri-add-line plus_symbol me-1\"></i>\n                            <i className=\"ri-subtract-line minus_symbol me-1\"></i>\n                            <span className=\"fs-9 fw-medium\">Choose Filter</span>\n                        </Accordion.Header>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"collection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"collection\")}>\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-folder-4-line icon-6 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Collection</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred collection</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"source\") ? `d-none disabled` : ``}`} onClick={filterApply(\"source\")}>\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/network.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Network</p>\n                                    <span className=\"fs-10 text-gray-500\">Choose the required network</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"connection\") ? `d-none disabled` : ``}`} onClick={filterApply(\"connection\")}>\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/network-manager.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Connections</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the connection type</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"assetsType\") ? `d-none disabled` : ``}`} onClick={filterApply(\"assetsType\")}>\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-image-line icon-6 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Assets Type</p>\n                                    <span className=\"fs-10 text-gray-500\">Choose the type of asset</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"tags\") ? `d-none disabled` : ``}`} onClick={filterApply(\"tags\")}>\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <i className=\"ri-price-tag-3-line icon-6 text-gray-800\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>Tag</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred tag</span>\n                                </div>\n                            </div>\n                            <div className={`d-flex align-items-center border-bottom py-2 cursor-pointer ${Object.keys(state.chooseFilter).includes(\"ugcrights\") ? `d-none disabled` : ``}`} onClick={filterApply(\"ugcrights\")}>\n                                <div className=\"symbol symbol-30 bg-light me-2\">\n                                    <div className=\"symbol-label\">\n                                        <span className=\"svg-icon svg-icon-5 text-gray-800 me-0\">\n                                            <SVG src={baseUrl('media/icons/svg-icons/rights-approved-line.svg')} height={18} width={18} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"\">\n                                    <p className={`fs-9 fw-bold mb-0 text-gray-800`}>UGC Rights</p>\n                                    <span className=\"fs-10 text-gray-500\">Select the preferred ugc rights status</span>\n                                </div>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n\n                    <label className=\"text-gray-800 mb-2\">Select Network</label>\n                    <Accordion.Item eventKey=\"7\" className=\"pb-3\">\n                        <Accordion.Header className=\"w-100\">\n                            <span className=\"fs-9 fw-medium\">{state.connectWith == 1 ? `Twitter` : state.connectWith == 18 ? `Instagram` : state.connectWith == 3 ? `Facebook` : `Choose Preferred Social`}</span>\n                        </Accordion.Header>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className=\"\">\n                                <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                    <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`twitter`}>\n                                        <span className=\"symbol symbol-22\">\n                                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/twitter.svg`)} height={20} width={20} alt={'twitter'} />\n                                        </span>\n                                        <span className=\"form-check-label text-gray-800 text-ellipsis\">Twitter</span>\n                                    </label>\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"radio\" name=\"network\" checked={state.connectWith == 1 ? true : false} id={`twitter`} onClick={onClickConnectWith(1)} />\n                                </div>\n                                <div className=\"dropdown-item px-0 border-bottom rounded-0\" >\n                                    <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`instagram`}>\n                                        <span className=\"symbol symbol-22\">\n                                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/instagram.svg`)} height={20} width={20} alt={'instagram'} />\n                                        </span>\n                                        <span className=\"form-check-label text-gray-800 text-ellipsis\">Instagram</span>\n                                    </label>\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"radio\" name=\"network\" checked={state.connectWith == 18 ? true : false} id={`instagram`} onClick={onClickConnectWith(18)} />\n                                </div>\n                                <div className=\"dropdown-item px-0 rounded-0\" >\n                                    <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`facebook`}>\n                                        <span className=\"symbol symbol-22\">\n                                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/facebook.svg`)} height={20} width={20} alt={'twitter'} />\n                                        </span>\n                                        <span className=\"form-check-label text-gray-800 text-ellipsis\">Facebook</span>\n                                    </label>\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"radio\" name=\"network\" checked={state.connectWith == 3 ? true : false} id={`facebook`} onClick={onClickConnectWith(3)} />\n                                </div>\n                                <div className=\"dropdown-item px-0 rounded-0 d-none\" >\n                                    <label className=\"form-check flex-grow-1 overflow-hidden align-items-center\" htmlFor={`tiktok`}>\n                                        <span className=\"symbol symbol-22\">\n                                            <img className=\"img-fluid h-100\" src={baseUrl(`media/icons/social-icons-square/tiktok.svg`)} height={20} width={20} alt={'twitter'} />\n                                        </span>\n                                        <span className=\"form-check-label text-gray-800 text-ellipsis\">TikTok</span>\n                                    </label>\n                                    <input className=\"form-check-input flex-shrink-0\" type=\"radio\" name=\"network\" value=\"\" id={`tiktok`} />\n                                </div>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <label className=\"text-gray-800 mb-2\">Asset Type</label>\n                    <Accordion.Item eventKey=\"8\" className=\"pb-3\">\n                        <Accordion.Header>\n                            <span className=\"fs-9 fw-medium\">{state.publishType == 1 ? `Single Image or Video` : `Choose Content Type`} </span>\n                        </Accordion.Header>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"singleMedia\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"publishType\" value=\"singleMedia\" id=\"singleMedia\" checked={state.publishType == 1 ? true : false} onClick={onClickPublishType(1)} />\n                                    <div className=\"navi-text ms-2\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Single Image or Video</p>\n                                    </div>\n                                </label>\n\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer cursor-pointer d-none\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"carouselPost\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"publishType\" value=\"carouselPost\" id=\"carouselPost\" checked={state.publishType == 2 ? true : false} onClick={onClickPublishType(2)} />\n                                    <div className=\"navi-text ms-2\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Carousel</p>\n                                    </div>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n\n                    <Accordion.Item eventKey=\"9\" className=\"pb-3\">\n                        <Accordion.Header>\n                            <span className=\"fs-9 fw-medium\">{state.mediaSize == 1 ? `1:1` : state.mediaSize == 16 ? `16:9` : state.mediaSize == 0 ? `Default Size` : `Media Size`}</span>\n                        </Accordion.Header>\n                        <Accordion.Body className=\"border rounded-1 mt-1\">\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"1x1\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"imageSize\" value=\"1x1\" id=\"1x1\" onClick={onClickmediaSize(1)} checked={state.mediaSize == 1 ? true : false} />\n                                    <div className=\"navi-text ms-2\">\n                                        <p className=\"fs-9 fw-medium mb-0\">1:1</p>\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center border-bottom py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"16x9\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"imageSize\" value=\"16x9\" id=\"16x9\" onClick={onClickmediaSize(16)} checked={state.mediaSize == 16 ? true : false} />\n                                    <div className=\"navi-text ms-2\">\n                                        <p className=\"fs-9 fw-medium mb-0\">16:9</p>\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"navi-item d-flex align-items-center py-2 cursor-pointer\">\n                                <label className=\"form-check flex-grow-1 align-items-center\" htmlFor=\"defaultSize\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"imageSize\" value=\"defaultSize\" id=\"defaultSize\" onClick={onClickmediaSize(0)} checked={state.mediaSize == 0 ? true : false} />\n                                    <div className=\"navi-text ms-2\">\n                                        <p className=\"fs-9 fw-medium mb-0\">Default Size</p>\n                                    </div>\n                                </label>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <label className=\"text-gray-800 mb-2\">Description</label>\n                    <div className=\"w-100 mb-2\">\n                        <textarea className=\"form-control textarea-min-row-5 fs-9\" row={5} onChange={onChangeDescription} value={state.selectedPost ? state.selectedPost.content : null}></textarea>\n                    </div>\n                </Accordion>\n            </div>\n            <div className=\"bg-white w-100 text-center flex-column d-flex pt-2\">\n                <button type=\"button\" className=\"btn border-0 text-hover-primary btn-sm text-decoration-underline text-muted p-1\" onClick={onResetFilter}>Reset Filters</button>\n            </div>\n        </div>\n    */\n}"],"names":["options","publishSrchFilter","publishOptions","publishNetworks","sizeOptions","publishSize","SocialPublishAside","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","onLoadPublish","self","_assertThisInitialized","getPublishList","then","loadReponse","setState","publishList","data","catch","ex","campaignTypeFun","event","props","campaignTypeCallback","state","showModal","campaignType","_createClass","key","value","_this2","_this$props","this","filterApply","onClickConnectWith","onClickmediaSize","onClickPublishType","onChangeDescription","onSelectActive","onSelectAccordionActive","_jsx","_Fragment","children","_jsxs","className","Accordion","defaultActiveKey","activeKey","onSelect","eventKey","map","item","index","concat","Object","keys","chooseFilter","includes","type","onClick","SVG","src","baseUrl","icon","height","width","name","desc","filterKey","indexFilter","Filters","_objectSpread","isLast","length","accordionKey","connectWith","htmlFor","alt","checked","id","publishType","mediaSize","size","row","onChange","selectedPost","content","Component"],"sourceRoot":""}