{"version":3,"file":"static/js/9977.e6825b2c.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AddAssetsModal/AddAssetsModal.js","Layouts/Main/MyAssets/GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport GetRightsCopyUrl from '../GetRightsModal/Elements/GetRightsSteps/GetRightsCopyUrl';\n//import PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst UploadedAssets = React.lazy(() => import('./Compontnets/UploadedAssets'));\n\nconst UploadAssets = React.lazy(() => import('./Compontnets/UploadAssets'));\n\nclass AddAssetsModal extends Component {\n    constructor() {\n        super();\n    }\n    state = {\n        collection: null,\n        showModalType: 'uploadAssets', isUploaded: false, uploadedData: [], selected: 0, checkAll: false,\n        captionStatus: false,\n        captionText: \"\",\n        tagsStatus: false,\n        tagstext: \"\",\n        copyrightStatus: false,\n        copyrightValue: false,\n        collectionError: false\n    };\n\n    updateStatusC = event => {\n        const { uploadedData, captionText } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.caption = captionText\n                else item.caption = \"\"\n            }\n            else {\n                item.caption = \"\"\n            }\n        })\n\n        this.setState({\n            captionStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusTag = event => {\n        const { uploadedData, tagstext } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.addTags = tagstext\n                else item.addTags = \"\"\n            }\n            else {\n                item.addTags = \"\"\n            }\n        })\n\n        this.setState({\n            tagsStatus: event.target.checked, uploadedData\n        })\n    }\n    updateStatusCopy = event => {\n        const { uploadedData, copyrightValue } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (event.target.checked) item.copyright = copyrightValue\n                else item.copyright = false\n            }\n            else {\n                item.copyright = false\n            }\n        })\n\n        this.setState({\n            copyrightStatus: event.target.checked, uploadedData\n        })\n    }\n\n    onChangeCaption = event => {\n        const { uploadedData, captionStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (captionStatus) item.caption = event.target.value\n                else item.caption = \"\"\n            }\n            else {\n                item.caption = \"\"\n            }\n        })\n        this.setState({ captionText: event.target.value, uploadedData })\n    }\n\n    onLoadAddCaption = () => {\n        var { uploadedData, captionText, captionStatus } = this.state;\n        console.log(\"captionStatus\", captionStatus)\n        if (captionStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    uploadedData[index].caption = captionText\n                    //item.caption = captionText\n                }\n                else {\n                    uploadedData[index].caption = \"\"\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n\n    }\n\n    onChangeTags = event => {\n        const { uploadedData, tagsStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (tagsStatus) item.addTags = event.target.value\n                else item.addTags = \"\"\n            }\n            else {\n                item.addTags = \"\"\n            }\n        })\n\n        this.setState({ tagstext: event.target.value, uploadedData })\n    }\n    onLoadTags = () => {\n        var { uploadedData, tagstext, tagsStatus } = this.state;\n        if (tagsStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    console.log(\"sadas\", tagstext)\n                    uploadedData[index].addTags = tagstext\n                    //item.addTags = tagstext\n                }\n                else {\n                    uploadedData[index].addTags = \"\"\n                }\n            })\n        }\n        console.log(\"uploadedDatauploadedData\", uploadedData)\n        this.setState({ uploadedData })\n    }\n    onChangeCopyRight = (value) => event => {\n        const { uploadedData, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            if (item.checked) {\n                if (copyrightStatus) item.copyright = value\n                else item.copyright = false\n            }\n            else {\n                item.copyright = false\n            }\n        })\n        this.setState({ copyrightValue: value, uploadedData })\n    }\n    onLoadCopyRight = () => {\n\n        var { uploadedData, copyrightValue, copyrightStatus } = this.state;\n        if (copyrightStatus) {\n            uploadedData.map((item, index) => {\n                if (item.checked) {\n                    //item.copyright = copyrightValue\n                    uploadedData[index].copyright = copyrightValue\n                }\n                else {\n                    uploadedData[index].copyright = false\n                }\n            })\n            this.setState({ uploadedData })\n        }\n\n    }\n\n    handleClose = () => {\n        this.props.editMediaHandleCallback(false)\n    };\n\n    showModalTypeCallback = (showModalType) => {\n        this.setState({\n            showModalType: showModalType\n        })\n    }\n    isUploaded = () => {\n        const { collection } = this.state\n        if (collection) {\n            this.setState({\n                isUploaded: !this.state.isUploaded\n            })\n        }\n        else {\n            this.setState({\n                collectionError: true\n            })\n\n        }\n    }\n    onUploadedData = (newObject) => {\n        const { uploadedData } = this.state;\n        uploadedData.push(newObject)\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n    onSelectedCollection = (newObject) => {\n        this.setState({ collection: newObject, collectionError: false })\n    }\n\n    onClickTORemovePost = (postIndex) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1) {\n            uploadedData.splice(postIndex, 1);\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n    onClickTOCheckPost = (postIndex) => event => {\n        let { uploadedData, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n\n\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            if (uploadedData[postIndex].checked) {\n                uploadedData[postIndex].checked = false\n                uploadedData[postIndex].caption = \"\"\n                uploadedData[postIndex].addTags = \"\"\n                uploadedData[postIndex].copyright = false\n            }\n            else {\n                uploadedData[postIndex].checked = true\n                if (captionStatus) uploadedData[postIndex].caption = captionText\n                if (tagsStatus) uploadedData[postIndex].addTags = tagstext\n                if (copyrightStatus) uploadedData[postIndex].copyright = copyrightValue\n            }\n        }\n        this.setState({ uploadedData }, () => this.onloadCheckedPostCount())\n    }\n\n    onloadCheckedPostCount = () => {\n        const { uploadedData } = this.state;\n        var count = uploadedData.filter((item) => item.checked == true).length;\n        this.setState({ selected: count })\n    }\n    onClickToAllCheck = event => {\n        const { uploadedData, checkAll, captionText, tagstext, copyrightValue, captionStatus, tagsStatus, copyrightStatus } = this.state;\n        uploadedData.map((item) => {\n            item.checked = !checkAll\n            if (!checkAll == true) {\n                if (captionStatus) item.caption = captionText\n                if (tagsStatus) item.addTags = tagstext\n                if (copyrightStatus) item.copyright = copyrightValue\n            }\n            else {\n                item.caption = \"\"\n                item.addTags = \"\"\n                item.copyright = \"\"\n            }\n\n        })\n\n\n        this.setState({\n            uploadedData, selected: uploadedData.length, checkAll: !checkAll\n        })\n    }\n\n    onCaptionSingle = (postIndex) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].caption = event.target.value\n            this.setState({ uploadedData })\n        }\n\n    }\n    onAddTagSingle = (postIndex) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].addTags = event.target.value\n        }\n        this.setState({ uploadedData })\n    }\n    onCopyRightSingle = (postIndex, value) => event => {\n        let { uploadedData } = this.state;\n        if (postIndex > -1 && uploadedData[postIndex]) {\n            uploadedData[postIndex].copyright = value\n        }\n        this.setState({ uploadedData })\n    }\n    render() {\n        const { editMediaToggle, history } = this.props\n        const { isUploaded, uploadedData, collection } = this.state\n        console.log(\"new UPload data\", uploadedData, collection)\n\n        return <Modal size={'full'} show={editMediaToggle} className=\"addAssetsModal border-0\" backdrop={false}>\n            <Modal.Header className=\"border-0 p-0 w-100\">\n                <div className=\"d-flex justify-content-between align-items-center px-lg-3 px-2 bg-white w-100\">\n                    {!isUploaded ?\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Choose Source</h1>\n                        </div>\n                        :\n                        <div className=\"addAssetsTitle d-flex align-items-center flex-shrink-1\">\n                            <button type=\"button\" className=\"btn btn-icon btn-sm me-2\" onClick={() => this.isUploaded()}>\n                                <span className=\"svg-icon text-dark\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M7.828 11H20v2H7.828l5.364 5.364-1.414 1.414L4 12l7.778-7.778 1.414 1.414z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                            </button>\n                            <h1 className=\"text-dark fw-semibold fs-6 mb-0\">Fill required assets information</h1>\n                        </div>\n                    }\n                    <div className=\"d-flex align-items-center\">\n                        <button type=\"button\" className=\"btn-close text-light\" onClick={this.handleClose}></button>\n                    </div>\n                </div>\n\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex align-items-start border-0 flex-wrap w-100\">\n                <div className=\"assetsModalScroll w-100\">\n                    {!isUploaded ?\n                        <Suspense fallback={<div>Loading...</div>}><UploadAssets getAssetsCallback={this.isUploaded} onUploadedData={this.onUploadedData} uploadedData={this.state.uploadedData} onSelectedCollection={this.onSelectedCollection} collection={collection} collectionError={this.state.collectionError} /></Suspense>\n                        :\n                        <Suspense fallback={<div>Loading...</div>}><UploadedAssets uploadedData={uploadedData} selected={this.state.selected} onClickTORemovePost={this.onClickTORemovePost} onClickTOCheckPost={this.onClickTOCheckPost} updateStatusC={this.updateStatusC} updateStatusTag={this.updateStatusTag} updateStatusCopy={this.updateStatusCopy} captionStatus={this.state.captionStatus} tagsStatus={this.state.tagsStatus} copyrightStatus={this.state.copyrightStatus} onChangeCaption={this.onChangeCaption}\n                            onChangeTags={this.onChangeTags}\n                            onChangeCopyRight={this.onChangeCopyRight} captionText={this.state.captionText} tagstext={this.state.tagstext} copyrightValue={this.state.copyrightValue} onClickToAllCheck={this.onClickToAllCheck} checkAll={this.state.checkAll} collection={collection} history={history} editMediaHandleCallback={this.props.editMediaHandleCallback} onCaptionSingle={this.onCaptionSingle} onAddTagSingle={this.onAddTagSingle} onCopyRightSingle={this.onCopyRightSingle} /></Suspense>\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n    }\n}\n\nexport default AddAssetsModal;\n","import React, { Component } from \"react\";\nimport { COPY_TO_CLIPBOARD } from \"../../../../../../Services/Utils/utils\";\n\nclass GetRightsCopyUrl extends Component {\n    constructor() {\n        super();\n        this.state = { codeCopied: false };\n    }\n    codeCopy = (id) => {\n        this.setState({\n            codeCopied: true\n        })\n        setTimeout(() => {\n            this.setState({\n                codeCopied: false\n            })\n        }, 1500);\n        COPY_TO_CLIPBOARD(id);\n    }\n    render() {\n        const { codeCopied } = this.state\n        const { requestedRespone, comment } = this.props\n        console.log(\"requestedRespone---sudarshan\", requestedRespone)\n        return requestedRespone && Object.keys(requestedRespone).length > 0 ? <div className=\"p-lg-6 p-3\">\n            <h5 className=\"mb-2 pt-1 text-center\">Your UGC Request Sharing URL</h5>\n            <p className=\"text-muted text-center\">Copy and paste link in the comments or original post</p>\n            <div className=\"mb-6\">\n                <textarea type=\"text\" className=\"form-control form-control-lg textarea-min-row-3 bg-light\" rows={4} placeholder=\"Add Comment\" defaultValue={comment} readOnly />\n            </div>\n            <div className=\"mb-6\">\n                <div className=\"input-group mb-4\">\n                    <div className=\"input-group-text\">\n                        <span className=\"svg-icon svg-icon-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                <path d=\"M13.06 8.11l1.415 1.415a7 7 0 0 1 0 9.9l-.354.353a7 7 0 0 1-9.9-9.9l1.415 1.415a5 5 0 1 0 7.071 7.071l.354-.354a5 5 0 0 0 0-7.07l-1.415-1.415 1.415-1.414zm6.718 6.011l-1.414-1.414a5 5 0 1 0-7.071-7.071l-.354.354a5 5 0 0 0 0 7.07l1.415 1.415-1.415 1.414-1.414-1.414a7 7 0 0 1 0-9.9l.354-.353a7 7 0 0 1 9.9 9.9z\" fill=\"currentColor\" />\n                            </svg>\n                        </span>\n                    </div>\n                    <input type=\"text\" id=\"ugc_rights_url_\" className=\"form-control form-control-lg\" defaultValue={requestedRespone.bitlylink} readOnly />\n                </div>\n                <button type=\"button\" className=\"btn btn-primary btn-lg w-100\" onClick={() => { this.codeCopy('ugc_rights_url_') }}>\n                    {codeCopied ? 'Copied' : 'Copy URL'}\n                </button>\n            </div>\n            <div className=\"mb-6\">\n                <h6>Steps to proceed</h6>\n                <ul className=\"list-unstyled list-points fs-7\">\n                    <li className=\"mb-3\">You have successfully generated a \"UGC Request\" for this post.</li>\n                    <li className=\"mb-3\">Quickly review your Request before sending it to the owner.</li>\n                    <li className=\"mb-3\">Click on the \"Generate Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\n                    <li className=\"mb-3\">Paste the link of \"UGC Request\" in the comments section of the original post.</li>\n                    <li className=\"mb-3\">You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\n                </ul>\n            </div>\n        </div> : null\n    }\n}\n\nexport default GetRightsCopyUrl;"],"names":["UploadedAssets","React","UploadAssets","AddAssetsModal","state","collection","showModalType","isUploaded","uploadedData","selected","checkAll","captionStatus","captionText","tagsStatus","tagstext","copyrightStatus","copyrightValue","collectionError","updateStatusC","event","map","item","checked","target","caption","setState","updateStatusTag","addTags","updateStatusCopy","copyright","onChangeCaption","value","onLoadAddCaption","console","log","index","onChangeTags","onLoadTags","onChangeCopyRight","onLoadCopyRight","handleClose","props","editMediaHandleCallback","showModalTypeCallback","onUploadedData","newObject","push","onloadCheckedPostCount","onSelectedCollection","onClickTORemovePost","postIndex","splice","onClickTOCheckPost","count","filter","length","onClickToAllCheck","onCaptionSingle","onAddTagSingle","onCopyRightSingle","this","editMediaToggle","history","size","show","className","backdrop","type","onClick","xmlns","viewBox","width","height","fill","d","Suspense","fallback","getAssetsCallback","Component","GetRightsCopyUrl","codeCopy","id","codeCopied","setTimeout","COPY_TO_CLIPBOARD","requestedRespone","comment","Object","keys","rows","placeholder","defaultValue","readOnly","bitlylink"],"sourceRoot":""}