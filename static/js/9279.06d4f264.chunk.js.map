{"version":3,"file":"static/js/9279.06d4f264.chunk.js","mappings":"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","sources":["Layouts/Main/MyAssets/AssetsModal/Elements/AssetsModalAside.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport moment from 'moment'\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { GET_POST_TYPE_NAME, GET_NETWORK_ICON, GET_MEDIA_NAME } from '../../../../../Services/Utils/utils';\n//import ModalTagProducts from './ModalTagProducts';\n\n\n\nclass AssetsModalAside extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tagString:['#macdonald', 'Restaurant', 'Burger', '#macdonaldUSA', 'California', '#starbucks', 'Restaurant'],\n            descriptionEditable: false,\n            addTagButton: true,\n            //tagInputValue : ''\n        };\n\n        this.editorEnable = React.createRef();\n        this.editorEnableButton = React.createRef();\n    }\n\n    addTagButtonValue = () => {\n        this.setState({\n            addTagButton: false\n        })\n    }\n\n    // tagInputValueFun = (value) => {\n    //     console.log('value', value)\n    //     this.setState({\n    //         tagInputValue : value\n    //     })\n    // }\n\n    descriptionToggle() {\n        this.setState({\n            descriptionEditable: true\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\n    }\n\n    handleOutsideClick = (event) => {\n        if (this.editorEnable && this.editorEnable.current && !this.editorEnable.current.contains(event.target) && (this.editorEnableButton && !this.editorEnableButton.current.contains(event.target)) && this.editorEnableButton && !this.editorEnableButton.current.contains(event.target) !== null) {\n            this.setState({\n                descriptionEditable: false\n            })\n        } else {\n            if (this.editorEnable && this.editorEnable.current && (!this.editorEnable.current.contains(event.target) && this.editorEnable.current.contains(event.target) !== null)) {\n                this.setState({\n                    descriptionEditable: true\n                })\n            }\n        }\n    }\n\n\n\n    render() {\n        const { descriptionEditable, addTagButton } = this.state\n        const { modalAssetData, networkData, collections } = this.props\n\n        const socialNetwork = networkData && networkData.length > 0 ? networkData.filter((network) => network.id == modalAssetData.networkId) : []\n        const collectionName = collections && collections.length > 0 ? collections.filter((cItem) => cItem.id == modalAssetData.wallId) : []\n\n\n        return <div className=\"full_modal_sidebar position-relative\">\n            <PerfectScrollbar>\n                <div className=\"full_modal_sidebar_inner position-relative\">\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-1\">\n                        <span className=\"text-uppercase fw-medium\">General Info</span>\n                    </h3>\n                    <table className=\"table table-borderless\">\n                        <tbody>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">File Name</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">{modalAssetData.name}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Type</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">{GET_POST_TYPE_NAME(modalAssetData.type)}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Collection</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">{collectionName && collectionName.length > 0 ? collectionName[0].name : \"\"}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Dimensions</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">{modalAssetData.mediaWidth}X{modalAssetData.mediaHeight}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Size</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">4MB</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Created</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">{moment(modalAssetData.createdAt).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Modified</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\"text-dark\">{moment(modalAssetData.createdAt).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Source</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                    {socialNetwork && socialNetwork.length > 0 ?\n                                        <div className=\"d-flex align-items-center\">\n                                            <span className=\"h-20px w-20px me-2 d-flex\">\n                                                <img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(socialNetwork[0].id)}.svg`)} height={20} width={20} alt={socialNetwork[0].name} />\n                                            </span>\n                                            <span className=\"text-dark\">{socialNetwork[0].name}</span>\n                                        </div>\n                                        : null}\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Posted By</span></td>\n                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                    <div className=\"d-flex align-items-center mr-2\">\n                                        <div className=\"symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden bg-light\">\n                                            <img className=\"object-center-cover\" src={modalAssetData.picture} srcSet={modalAssetData.picture} height={40} width={40} alt={GET_MEDIA_NAME(modalAssetData.picture)} />\n                                            <link rel=\"preload\" fetchpriority=\"high\" as=\"image\" href={modalAssetData.picture} type=\"image/webp\"></link>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-dark mb-0\"><strong className=\"text-break\">{modalAssetData.name}</strong></p>\n                                            <small className=\"mb-0 text-muted text-break\">@{modalAssetData.username}</small>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                            {\n                                modalAssetData.ugcRights ? <>\n                                    {modalAssetData.ugcRights.status == 2 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-success\">\n                                                    <svg className=\"w-20px h-20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-.997-6l7.07-7.071-1.414-1.414-5.656 5.657-2.829-2.829-1.414 1.414L11.003 16z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"text-success\">Request Approved</span>\n                                            </div>\n                                        </td>\n                                    </tr> : modalAssetData.ugcRights.status == 1 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-warning\">\n                                                    <svg className=\"w-20px h-20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm1-10V7h-2v7h6v-2h-4z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"text-warning\">Request Pending</span>\n                                            </div>\n                                        </td>\n                                    </tr> : modalAssetData.ugcRights.status == 3 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center flex-wrap\">\n                                                <span className=\"svg-icon me-1 text-danger\">\n                                                    <svg className=\"w-20px h-20px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                        <path d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-11.414L9.172 7.757 7.757 9.172 10.586 12l-2.829 2.828 1.415 1.415L12 13.414l2.828 2.829 1.415-1.415L13.414 12l2.829-2.828-1.415-1.415L12 10.586z\" fill=\"currentColor\" />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"text-danger\">Request Rejected</span>\n                                            </div>\n                                        </td>\n                                    </tr> : null}\n                                </> : null\n                            }\n                        </tbody>\n                    </table>\n\n                    {/* <ModalTagProducts /> */}\n\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-2\">\n                        <span className=\"text-uppercase fw-medium\">Tag</span>\n                    </h3>\n                    {modalAssetData.tags && modalAssetData.tags != \"\" ? <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                        {\n                            String(modalAssetData.tags).split(\",\").length > 0 ? String(modalAssetData.tags).split(\",\").map((cTag) => {\n                                return <div className=\"block-center badge bg-secondary text-gray-800 rounded-pill border me-2 mb-2\">\n                                    {cTag}\n                                    <button className=\"btn p-0 ms-1\">\n                                        <span className=\"svg-icon me-0\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                                <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                                <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\" />\n                                            </svg>\n                                        </span>\n                                    </button>\n                                </div>\n\n                            }) : null\n                        }\n\n                        {!addTagButton ?\n                            <div className=\"d-flex me-2 mb-2\">\n                                <input type=\"text\" className=\"form-control form-control-sm border-0 fw-semibold fs-7\" placeholder=\"Enter Tag...\" />\n                            </div>\n                            :\n                            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill me-2 mb-2\" onClick={this.addTagButtonValue} >\n                                <span className=\"svg-icon\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                        <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\n                                    </svg>\n                                </span>\n                                Add Tag\n                            </button>\n                        }\n                    </div>\n                        :\n                        <div className=\"tags-group d-flex align-items-center flex-wrap\">\n                            {!addTagButton ?\n                                <div className=\"d-flex me-2 mb-2\">\n                                    <input type=\"text\" className=\"form-control form-control-sm border-0 fw-semibold fs-7\" placeholder=\"Enter Tag...\" />\n                                </div>\n                                :\n                                <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill me-2 mb-2\" onClick={this.addTagButtonValue} >\n                                    <span className=\"svg-icon\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                                            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                                            <path d=\"M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2z\" fill=\"currentColor\" />\n                                        </svg>\n                                    </span>\n                                    Add Tag\n                                </button>\n                            }\n                        </div>\n                    }\n                    <h3 className=\"border-bottom mb-xxl-3 mb-2 pb-xxl-3 pb-2 fs-7 pt-2\">\n                        <span className=\"text-uppercase fw-medium\">Description</span>\n                    </h3>\n                    <div className=\"mb-3 d-flex align-items-center\">\n                        <div className=\"d-flex flex-grow-1 pe-2\" ref={this.editorEnable}>\n                            <textarea type=\"text\" className={`form-control textarea-min-row-3 ${!descriptionEditable ? ' resize-none border-0 p-0' : ''}`}\n                                placeholder=\"Add Description\" rows={3} defaultValue={modalAssetData.content} readOnly={!descriptionEditable}>\n\n                            </textarea>\n                        </div>\n                        <button type=\"button\" className=\"btn btn-icon btn-sm btn-active-light w-30px h-30px\" ref={this.editorEnableButton}>\n                            <span className=\"svg-icon svg-icon-5 me-0\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                    <g data-name=\"Group 4328\" transform=\"translate(10956 -4501)\">\n                                        <rect id=\"Rectangle_2068\" data-name=\"Rectangle 2068\" width=\"24\" height=\"24\" transform=\"translate(-10956 4501)\" fill=\"none\" opacity=\"0\"></rect>\n                                        <g id=\"Group_3906\" data-name=\"Group 3906\" transform=\"translate(-10953.868 4503.559)\"><path id=\"Path_5042\" data-name=\"Path 5042\" d=\"M3.2,14.952,2.3,18.872a.985.985,0,0,0,.956,1.195,1.023,1.023,0,0,0,.206,0L7.4,19.158l7.571-7.543L10.746,7.4Z\" transform=\"translate(0 -2.914)\" fill=\"#545454\"></path><path id=\"Path_5043\" data-name=\"Path 5043\" d=\"M27.5,4.926l-2.82-2.82a.989.989,0,0,0-1.4,0L21.72,3.673l4.221,4.221,1.568-1.568a.989.989,0,0,0,0-1.4Z\" transform=\"translate(-10.152 0)\" fill=\"#545454\"></path>\n                                        </g>\n                                    </g>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"assets_btn_wrapper bg-white\">\n                    <button type=\"button\" className=\"btn btn-primary w-100 disabled\">Save Changes</button>\n                </div>\n            </PerfectScrollbar>\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state.networks.networkData\n    }\n}\nexport default connect(mapStateToProps)(AssetsModalAside);"],"names":["AssetsModalAside","props","addTagButtonValue","setState","addTagButton","handleOutsideClick","event","editorEnable","current","contains","target","editorEnableButton","descriptionEditable","state","React","this","document","addEventListener","modalAssetData","networkData","collections","socialNetwork","length","filter","network","id","networkId","collectionName","cItem","wallId","className","name","GET_POST_TYPE_NAME","type","mediaWidth","mediaHeight","moment","createdAt","format","src","baseUrl","GET_NETWORK_ICON","height","width","alt","picture","srcSet","GET_MEDIA_NAME","rel","fetchpriority","as","href","username","ugcRights","status","xmlns","viewBox","fill","d","tags","String","split","map","cTag","onClick","placeholder","ref","rows","defaultValue","content","readOnly","transform","opacity","Component","connect","networks"],"sourceRoot":""}